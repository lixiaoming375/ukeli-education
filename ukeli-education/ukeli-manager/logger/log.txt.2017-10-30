2017-10-30 09:33:22   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5772 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 09:33:22   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 09:33:22   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 09:33:30   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 09:33:30   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 09:33:30   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 09:33:30   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 09:33:30   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 09:33:30   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 09:33:30   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 09:33:34   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 09:33:34   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 09:33:34   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 09:33:34   INFO  [main][StartupInfoLogger.java:57] - Started Application in 14.611 seconds (JVM running for 17.105)
2017-10-30 09:36:20   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 09:36:21   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：null
2017-10-30 09:46:34   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/index.html,pathInfo=
2017-10-30 09:46:34   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 09:46:34   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :-1
2017-10-30 09:46:34   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:103] - path=http://localhost:9998,loginUrl=login.html
2017-10-30 09:46:34   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/login.html,pathInfo=
2017-10-30 09:46:34   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：null
2017-10-30 09:46:36   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/getvm.html,pathInfo=
2017-10-30 09:46:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/login.json,pathInfo=
2017-10-30 09:46:48   INFO  [http-nio-9998-exec-3][CommonController.java:137] - 后台管理员开始登陆:admin
2017-10-30 09:46:48   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：ZW25tYoaZA8=
2017-10-30 09:46:48   INFO  [http-nio-9998-exec-3][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 09:46:50   INFO  [http-nio-9998-exec-3][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-10-30 09:46:50   INFO  [http-nio-9998-exec-3][CommonController.java:170] - 用户登录成功
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: false
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value:  
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: false
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value:  
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: 
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Z@78516d34
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@78516d34' to type 'boolean[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [B@5a4bfd6b
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'byte[]' value '[B@5a4bfd6b' to type 'byte[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [C@597bd86
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'char[]' value '[C@597bd86' to type 'char[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [D@7a08bb26
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'double[]' value '[D@7a08bb26' to type 'double[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [F@943419e
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'float[]' value '[F@943419e' to type 'float[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [I@ce64578
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'int[]' value '[I@ce64578' to type 'int[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [J@34a5b2ef
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'long[]' value '[J@34a5b2ef' to type 'long[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [S@b4beed6
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'short[]' value '[S@b4beed6' to type 'short[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@18171190
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@18171190' to type 'BigDecimal[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@3fcfa696
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@3fcfa696' to type 'BigInteger[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@4b9dc592
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@4b9dc592' to type 'Boolean[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@d173dd9
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@d173dd9' to type 'Byte[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@756f99be
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@756f99be' to type 'Character[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@78f8c8bc
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@78f8c8bc' to type 'Double[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@7a189523
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@7a189523' to type 'Float[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@26a43c8b
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@26a43c8b' to type 'Integer[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@71756a5c
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@71756a5c' to type 'Long[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@53604ff0
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@53604ff0' to type 'Short[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@1402c4af
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@1402c4af' to type 'String[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@7bc6449d
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@7bc6449d' to type 'Class[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@2a088bda
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@2a088bda' to type 'Date[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@1de2ac96
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@1de2ac96' to type 'Calendar[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@3af1f603
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@3af1f603' to type 'java.io.File[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@14bd5070
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@14bd5070' to type 'java.sql.Date[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@3a9314d4
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@3a9314d4' to type 'java.sql.Time[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@46a9bb7e
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@46a9bb7e' to type 'java.sql.Timestamp[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@56bd1f19
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@56bd1f19' to type 'java.net.URL[]'
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-10-30 09:46:50   DEBUG [http-nio-9998-exec-3][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-10-30 09:46:51   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/index.html,pathInfo=
2017-10-30 09:46:51   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 09:46:51   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 09:46:51   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 09:47:04   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/manager/clazz/page.html,pathInfo=
2017-10-30 09:47:04   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 09:47:04   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 09:47:04   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 09:47:10   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-10-30 09:47:10   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 09:47:10   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 09:47:10   INFO  [http-nio-9998-exec-3][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-10-30 10:49:45   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 10:49:45   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:49:45   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:49:45   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 10:49:48   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 10:49:48   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:49:48   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:49:48   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:92] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 10:49:50   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 10:49:50   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:49:50   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:49:50   INFO  [http-nio-9998-exec-2][KnowledgeController.java:137] - 需要绑定题目的考试编号:4
2017-10-30 10:49:50   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 10:49:51   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 10:49:51   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:49:51   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:49:51   INFO  [http-nio-9998-exec-5][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 10:49:51   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:50:13   INFO  [http-nio-9998-exec-8][KnowledgeController.java:137] - 需要绑定题目的考试编号:4
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:50:13   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:50:13   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 10:50:13   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:56:41   INFO  [http-nio-9998-exec-5][KnowledgeController.java:137] - 需要绑定题目的考试编号:4
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 10:56:41   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 10:56:41   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 10:56:41   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 11:00:18   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 11:00:35   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6180 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 11:00:35   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 11:00:35   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 11:00:39   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 11:00:39   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 11:00:39   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 11:00:39   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 11:00:39   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 11:00:39   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 11:00:40   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 11:00:45   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 11:00:45   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 11:00:45   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 11:00:45   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.398 seconds (JVM running for 16.241)
2017-10-30 11:00:47   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 11:00:47   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 11:00:47   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:00:49   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:00:49   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 11:00:49   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 11:00:54   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 11:00:54   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:00:54   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:00:54   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:92] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:00:56   INFO  [http-nio-9998-exec-2][KnowledgeController.java:137] - 需要绑定题目的考试编号:4
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:00:56   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:00:56   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 11:10:46   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 11:12:34   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-10-30 11:12:34   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:12:34   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:12:34   INFO  [http-nio-9998-exec-8][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-10-30 11:12:36   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/manager/clazz/page.html,pathInfo=
2017-10-30 11:12:36   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:12:36   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:12:36   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 11:12:39   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-10-30 11:12:39   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:12:39   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:12:39   INFO  [http-nio-9998-exec-3][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-10-30 11:12:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 11:12:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:12:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:12:46   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 11:12:54   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 11:12:54   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 11:12:54   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 11:12:54   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:92] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 12:06:18   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 12:06:18   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 12:06:18   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 12:06:18   INFO  [http-nio-9998-exec-5][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=4
2017-10-30 12:06:19   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 12:06:22   INFO  [http-nio-9998-exec-10][KnowledgeController.java:137] - 需要绑定题目的考试编号:4
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 12:06:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 12:06:22   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 12:06:22   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 12:31:13   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 13:20:40   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 8712 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 13:20:40   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 13:20:40   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 13:20:43   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 13:20:43   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 13:20:44   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 13:20:44   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 13:20:44   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 13:20:44   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 13:20:44   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 13:20:48   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 13:20:48   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 13:20:48   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 13:20:48   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.897 seconds (JVM running for 11.594)
2017-10-30 13:21:22   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 13:21:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:21:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:21:23   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:21:23   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:21:23   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 13:21:27   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:21:27   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:21:27   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:21:27   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:21:30   INFO  [http-nio-9998-exec-4][KnowledgeController.java:142] - 需要绑定题目的考试编号:4
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:21:30   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:21:30   INFO  [http-nio-9998-exec-8][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 13:21:31   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:22:08   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:22:08   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:08   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:08   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:22:10   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:22:10   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:10   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:10   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:22:15   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:22:15   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:15   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:15   INFO  [http-nio-9998-exec-4][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:22:15   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:22:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:22:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:16   INFO  [http-nio-9998-exec-8][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:22:16   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:22:22   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:22:22   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:22   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:22   INFO  [http-nio-9998-exec-3][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:22:23   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:22:28   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 13:22:28   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:28   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:29   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:22:29   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:29   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:29   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:22:29   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:22:29   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:29   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:29   INFO  [http-nio-9998-exec-1][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:22:29   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:22:32   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 13:22:32   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:32   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:32   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:22:32   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:32   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:32   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:22:33   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:22:33   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:33   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:33   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:22:35   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:38   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:38   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:38   INFO  [http-nio-9998-exec-8][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:22:38   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:41   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:22:41   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:22:41   INFO  [http-nio-9998-exec-6][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:22:41   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:23:52   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 13:23:52   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:23:52   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:23:53   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:23:53   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:23:53   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:23:53   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:23:53   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:23:53   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:23:53   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:23:53   INFO  [http-nio-9998-exec-3][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:23:53   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:23:55   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 13:23:55   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:23:55   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:23:55   INFO  [http-nio-9998-exec-9][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 13:23:55   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:23:57   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:23:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:23:57   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:23:58   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:24:54   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:24:54   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:24:54   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:24:54   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:24:55   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:24:55   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:24:55   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:24:55   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:24:59   INFO  [http-nio-9998-exec-9][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:24:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:24:59   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:24:59   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:26:56   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:26:56   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:26:56   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:26:56   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:26:58   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:26:58   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:26:58   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:26:58   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:27:00   INFO  [http-nio-9998-exec-6][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:27:00   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:27:00   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:27:00   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:29:51   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 13:30:04   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 8960 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 13:30:04   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 13:30:04   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 13:30:09   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 13:30:09   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 13:30:09   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 13:30:09   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 13:30:09   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 13:30:09   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 13:30:10   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 13:30:14   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 13:30:14   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 13:30:14   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 13:30:14   INFO  [main][StartupInfoLogger.java:57] - Started Application in 10.67 seconds (JVM running for 13.962)
2017-10-30 13:30:25   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 13:30:26   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:30:26   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:30:27   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:30:27   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:30:27   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 13:30:38   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:30:38   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:30:38   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:30:38   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:30:43   INFO  [http-nio-9998-exec-10][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:30:43   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:30:43   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:30:43   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:30:48   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:30:48   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:30:48   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:30:48   INFO  [http-nio-9998-exec-2][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:30:48   INFO  [http-nio-9998-exec-2][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype =9 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-10-30 13:30:53   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:30:53   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:30:53   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:30:53   INFO  [http-nio-9998-exec-9][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:30:53   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype =7 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-10-30 13:31:08   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:31:08   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:31:08   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:31:08   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:31:08   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:32:24   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:32:24   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:32:24   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:32:24   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:32:33   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:32:33   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:32:33   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:32:33   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:32:36   INFO  [http-nio-9998-exec-4][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:32:36   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:32:36   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:32:36   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:36:40   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:36:40   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:36:40   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:36:40   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:36:44   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:36:44   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:36:44   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:36:44   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:36:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:36:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:36:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:36:45   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:36:45   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:36:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:36:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:36:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:36:46   INFO  [http-nio-9998-exec-9][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:36:46   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:39:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:39:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:39:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:39:28   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:39:29   DEBUG [http-nio-9998-exec-5][DruidDataSource.java:1191] - skip not validate connection.
2017-10-30 13:39:32   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:39:32   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:39:32   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:39:32   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:39:41   INFO  [http-nio-9998-exec-10][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:39:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:39:41   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:39:41   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:40:53   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:40:53   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:40:53   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:40:53   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:40:55   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:40:55   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:40:55   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:40:55   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:40:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:40:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:40:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:40:57   INFO  [http-nio-9998-exec-1][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:40:57   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:53:20   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:53:20   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:53:20   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:53:20   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:53:24   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:53:24   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:53:24   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:53:24   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:53:41   INFO  [http-nio-9998-exec-3][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:53:41   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:53:41   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:53:41   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:54:05   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:54:05   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:54:05   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:54:05   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:54:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:54:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:54:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:54:11   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:54:16   INFO  [http-nio-9998-exec-4][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:54:16   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:54:16   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:54:32   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:54:45   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:54:45   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:54:45   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:54:45   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:54:49   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:54:49   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:54:49   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:54:49   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:55:15   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:55:15   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:55:15   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:55:15   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:55:20   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:55:20   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:55:20   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:55:20   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:55:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:55:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:55:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:55:25   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:55:27   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:55:27   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:55:27   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:55:27   INFO  [http-nio-9998-exec-9][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:55:27   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:55:28   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:55:28   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:55:28   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:55:28   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:55:28   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:56:13   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:56:13   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:56:13   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:56:13   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:56:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:56:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:56:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:56:16   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:56:18   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:56:18   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:56:18   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:56:18   INFO  [http-nio-9998-exec-1][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:56:18   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:56:19   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 13:56:19   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:56:19   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:56:19   INFO  [http-nio-9998-exec-5][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 13:56:19   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 13:58:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 13:58:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:58:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:58:59   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 13:59:01   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 13:59:01   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:59:01   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:59:01   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 13:59:04   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 13:59:04   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 13:59:04   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 13:59:04   INFO  [http-nio-9998-exec-10][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 13:59:04   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:01:15   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:01:15   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:01:15   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:01:15   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:01:17   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:01:17   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:01:17   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:01:17   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:01:21   INFO  [http-nio-9998-exec-1][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:01:21   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:01:21   INFO  [http-nio-9998-exec-10][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:01:22   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:07:09   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:07:09   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:09   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:09   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:07:11   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:07:11   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:11   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:11   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:07:15   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:07:15   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:15   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:15   INFO  [http-nio-9998-exec-7][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:07:15   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:07:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:07:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:16   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:07:16   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:07:43   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:07:43   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:43   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:43   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:07:45   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:07:45   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:45   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:45   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:47   INFO  [http-nio-9998-exec-10][KnowledgeController.java:142] - 需要绑定题目的考试编号:2
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:07:47   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:07:47   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-10-30 14:07:48   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:09:31   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:09:31   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:09:31   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:09:31   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:09:33   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:09:33   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:09:33   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:09:33   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:09:35   INFO  [http-nio-9998-exec-7][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:09:35   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:09:35   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:09:35   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:10:40   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:10:40   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:10:40   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:10:40   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:10:42   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:10:42   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:10:42   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:10:42   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:10:45   INFO  [http-nio-9998-exec-2][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:10:45   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:10:45   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:10:45   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:11:02   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:11:02   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:11:02   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:11:02   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:11:03   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:11:03   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:11:03   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:11:03   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:11:05   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:11:05   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:11:05   INFO  [http-nio-9998-exec-7][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:11:05   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:12:08   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:12:08   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:08   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:08   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:12:10   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:12:10   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:10   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:10   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:12:36   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:12:36   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:36   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:36   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:12:38   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:12:38   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:38   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:38   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:12:40   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:12:40   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:40   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:40   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:42   INFO  [http-nio-9998-exec-9][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:12:42   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:12:42   INFO  [http-nio-9998-exec-8][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:12:42   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:13:20   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:13:20   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:13:20   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:13:20   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:13:22   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:13:22   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:13:22   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:13:22   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:13:24   INFO  [http-nio-9998-exec-9][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:13:24   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:13:24   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:13:24   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:14:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:14:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:14:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:14:12   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:14:14   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:14:14   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:14:14   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:14:14   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:14:16   INFO  [http-nio-9998-exec-4][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:14:16   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:14:16   INFO  [http-nio-9998-exec-10][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:14:16   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:14:55   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:14:55   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:14:55   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:14:55   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:14:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:14:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:14:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:14:57   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:15:00   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:15:00   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:00   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:00   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:15:05   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:15:05   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:05   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:05   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:15:06   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:15:06   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:06   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:06   INFO  [http-nio-9998-exec-10][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:15:06   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:15:07   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:15:07   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:07   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:07   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:15:07   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:15:42   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:15:42   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:42   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:42   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:15:44   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:15:44   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:44   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:44   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:47   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:15:47   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:15:47   INFO  [http-nio-9998-exec-8][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:15:47   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:18:18   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:18:18   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:18:18   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:18:18   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:18:21   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:18:21   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:18:21   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:18:21   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:18:24   INFO  [http-nio-9998-exec-1][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:18:24   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:18:24   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:18:24   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:25:41   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:25:41   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:41   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:25:41   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:25:43   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:25:43   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:43   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:25:43   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:25:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:25:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:46   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:25:46   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:25:47   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:25:47   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:47   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:25:47   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:25:49   INFO  [http-nio-9998-exec-6][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:49   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:25:49   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:25:49   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:25:51   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:25:51   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:25:51   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:28:02   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:28:02   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:28:02   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:28:02   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:28:04   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:28:04   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:28:04   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:28:04   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:28:11   INFO  [http-nio-9998-exec-4][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:28:11   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:28:11   INFO  [http-nio-9998-exec-5][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:28:11   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:28:15   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:28:15   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:28:15   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:45   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:29:45   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:45   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:45   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:29:47   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:29:47   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:47   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:47   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:49   INFO  [http-nio-9998-exec-7][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:49   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:49   INFO  [http-nio-9998-exec-8][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:29:50   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:29:51   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/bindAddScore.html,pathInfo=
2017-10-30 14:29:51   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:51   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:51   INFO  [http-nio-9998-exec-3][KnowledgeController.java:177] - 需要绑定编号:knowledgeId=1  subjectId=2
2017-10-30 14:29:51   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:56   INFO  [http-nio-9998-exec-5][KnowledgeRestController.java:335] - 需要绑定的subjectId=2
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: 
2017-10-30 14:29:56   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Z@3f7167b
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@3f7167b' to type 'boolean[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [B@1eb6158d
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'byte[]' value '[B@1eb6158d' to type 'byte[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [C@45a9f40b
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'char[]' value '[C@45a9f40b' to type 'char[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [D@1c7ad5c8
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'double[]' value '[D@1c7ad5c8' to type 'double[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [F@27055cf2
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'float[]' value '[F@27055cf2' to type 'float[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [I@9b13fe2
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'int[]' value '[I@9b13fe2' to type 'int[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [J@3328b73
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'long[]' value '[J@3328b73' to type 'long[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [S@492cca48
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'short[]' value '[S@492cca48' to type 'short[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@44c3fd53
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@44c3fd53' to type 'BigDecimal[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@5373e6f7
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@5373e6f7' to type 'BigInteger[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@27504bf9
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@27504bf9' to type 'Boolean[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@43dd5de2
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@43dd5de2' to type 'Byte[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@afb6c92
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@afb6c92' to type 'Character[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@6a5a97a
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@6a5a97a' to type 'Double[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@7732d2e8
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@7732d2e8' to type 'Float[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@509bab5
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@509bab5' to type 'Integer[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@27583e09
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@27583e09' to type 'Long[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@208ca6f9
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@208ca6f9' to type 'Short[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@60f5fc61
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@60f5fc61' to type 'String[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@4b6c5faf
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@4b6c5faf' to type 'Class[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@e928355
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@e928355' to type 'Date[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@1e393d1d
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@1e393d1d' to type 'Calendar[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@2d932ddc
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@2d932ddc' to type 'java.io.File[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@2d0f1bb6
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@2d0f1bb6' to type 'java.sql.Date[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@223ef792
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@223ef792' to type 'java.sql.Time[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@4503681f
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@4503681f' to type 'java.sql.Timestamp[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@38216894
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@38216894' to type 'java.net.URL[]'
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-5][MysqlDialectImpl.java:88] - 执行保存的参数=[2, 1, 10, 1]
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:57   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:57   INFO  [http-nio-9998-exec-4][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:29:57   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:29:57   INFO  [http-nio-9998-exec-10][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:29:57   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:589] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:29:57   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:37:54   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 14:38:06   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 8668 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 14:38:06   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 14:38:06   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 14:38:10   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 14:38:10   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 14:38:10   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 14:38:10   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 14:38:10   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 14:38:10   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 14:38:10   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 14:38:14   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 14:38:14   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 14:38:14   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 14:38:14   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.281 seconds (JVM running for 12.183)
2017-10-30 14:38:22   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 14:38:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:38:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:38:24   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:38:24   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:38:24   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 14:38:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:38:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:38:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:38:28   INFO  [http-nio-9998-exec-5][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:38:31   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:38:31   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:38:31   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:38:31   INFO  [http-nio-9998-exec-1][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:38:31   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:39:31   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:39:31   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:31   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:31   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:39:33   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:39:33   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:33   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:33   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:39:36   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:39:36   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:36   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:36   INFO  [http-nio-9998-exec-8][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:39:36   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:39:38   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:39:38   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:38   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:38   INFO  [http-nio-9998-exec-3][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=2
2017-10-30 14:39:38   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:39:40   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:39:40   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:40   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:40   INFO  [http-nio-9998-exec-2][KnowledgeController.java:142] - 需要绑定题目的考试编号:2
2017-10-30 14:39:40   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:39:41   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:39:41   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:41   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:41   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-10-30 14:39:41   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:47   INFO  [http-nio-9998-exec-7][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:47   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:47   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:39:47   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:39:50   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindAddScore.html,pathInfo=
2017-10-30 14:39:50   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:50   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:50   INFO  [http-nio-9998-exec-4][KnowledgeController.java:177] - 需要绑定编号:knowledgeId=1  subjectId=10
2017-10-30 14:39:50   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:56   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:335] - 需要绑定的subjectId=10
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Z@6b5f72b5
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@6b5f72b5' to type 'boolean[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [B@48747f5
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'byte[]' value '[B@48747f5' to type 'byte[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [C@3a3dd070
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'char[]' value '[C@3a3dd070' to type 'char[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [D@19351cc1
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'double[]' value '[D@19351cc1' to type 'double[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [F@96f1f88
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'float[]' value '[F@96f1f88' to type 'float[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [I@376949bf
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'int[]' value '[I@376949bf' to type 'int[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [J@6303b172
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'long[]' value '[J@6303b172' to type 'long[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [S@52e17ac7
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'short[]' value '[S@52e17ac7' to type 'short[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@2303bc4c
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@2303bc4c' to type 'BigDecimal[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@202c9faa
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@202c9faa' to type 'BigInteger[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@479ddc92
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@479ddc92' to type 'Boolean[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@c344d1f
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@c344d1f' to type 'Byte[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@4b39788e
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@4b39788e' to type 'Character[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@277b41b6
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@277b41b6' to type 'Double[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@fcff99d
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@fcff99d' to type 'Float[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@364077a6
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@364077a6' to type 'Integer[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@59f1ceca
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@59f1ceca' to type 'Long[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@78aa4888
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@78aa4888' to type 'Short[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@100cf63d
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@100cf63d' to type 'String[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@4aea0b3a
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@4aea0b3a' to type 'Class[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@60aef4e7
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@60aef4e7' to type 'Date[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@3724d429
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@3724d429' to type 'Calendar[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@3a136aa6
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@3a136aa6' to type 'java.io.File[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@182224b7
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@182224b7' to type 'java.sql.Date[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@79d9a6ae
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@79d9a6ae' to type 'java.sql.Time[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@48b861a0
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@48b861a0' to type 'java.sql.Timestamp[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@5179e337
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@5179e337' to type 'java.net.URL[]'
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:39:56   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[10, 1, 20, 2]
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:57   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:57   INFO  [http-nio-9998-exec-2][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:39:57   INFO  [http-nio-9998-exec-2][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:39:57   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:39:57   INFO  [http-nio-9998-exec-10][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:39:57   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:40:01   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindAddScore.html,pathInfo=
2017-10-30 14:40:01   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:01   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:01   INFO  [http-nio-9998-exec-5][KnowledgeController.java:177] - 需要绑定编号:knowledgeId=1  subjectId=5
2017-10-30 14:40:01   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:40:04   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:40:04   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:04   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:04   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:335] - 需要绑定的subjectId=5
2017-10-30 14:40:04   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:40:04   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:88] - 执行保存的参数=[5, 1, 10, 3]
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:05   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:05   INFO  [http-nio-9998-exec-9][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:40:05   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:05   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:05   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:40:05   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:40:06   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindAddScore.html,pathInfo=
2017-10-30 14:40:06   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:06   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:06   INFO  [http-nio-9998-exec-4][KnowledgeController.java:177] - 需要绑定编号:knowledgeId=1  subjectId=8
2017-10-30 14:40:07   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:11   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:335] - 需要绑定的subjectId=8
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[8, 1, 10, 4]
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:11   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:11   INFO  [http-nio-9998-exec-10][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:40:11   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:11   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:40:11   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:40:13   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindAddScore.html,pathInfo=
2017-10-30 14:40:13   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:13   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:13   INFO  [http-nio-9998-exec-5][KnowledgeController.java:177] - 需要绑定编号:knowledgeId=1  subjectId=9
2017-10-30 14:40:13   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:17   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:335] - 需要绑定的subjectId=9
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:88] - 执行保存的参数=[9, 1, 10, 5]
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:17   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:17   INFO  [http-nio-9998-exec-9][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:40:17   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:17   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:17   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:40:17   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:40:31   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 14:40:31   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:31   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:46   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:40:46   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:46   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:46   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:40:49   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:40:49   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:49   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:49   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:40:51   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:40:51   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:51   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:40:51   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:40:51   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:40:59   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 14:40:59   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:40:59   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:03   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 14:41:03   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:03   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:04   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:41:04   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:04   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:04   INFO  [http-nio-9998-exec-6][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:41:04   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:41:13   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 14:41:13   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:13   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:13   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:41:13   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:13   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:13   INFO  [http-nio-9998-exec-2][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:41:13   INFO  [http-nio-9998-exec-2][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:41:25   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:41:25   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:25   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:25   INFO  [http-nio-9998-exec-9][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=2
2017-10-30 14:41:25   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:41:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:41:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:27   INFO  [http-nio-9998-exec-4][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:41:27   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:41:31   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/page.html,pathInfo=
2017-10-30 14:41:31   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:31   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:31   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:41:33   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/list.json,pathInfo=
2017-10-30 14:41:33   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:33   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:33   INFO  [http-nio-9998-exec-3][SubjectRestController.java:139] - 获取题目stype=0,name=,startTime=null,endTime=null,status=-1,name=,vtype=0,start=0,limit=10
2017-10-30 14:41:46   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/edit.html,pathInfo=
2017-10-30 14:41:46   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:47   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:47   INFO  [http-nio-9998-exec-5][SubjectController.java:99] - 需要修改密码的权限编号:2
2017-10-30 14:41:47   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/save.json,pathInfo=
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-9][MysqlDialectImpl.java:135] - 执行更新的sql=update t_subject set stype=? ,analysis=? ,content=? ,imgurl=? ,answer=? ,editerid=? ,name=? ,detail=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-9][MysqlDialectImpl.java:136] - 执行更新的参数=[2, <p>阅读短文，回答问题。</p><p>荷花已经开了不少了。荷叶挨挨挤挤的，像一个个碧绿的大圆盘。白荷花在这些大圆盘之间冒出来。有的才展开两三片花瓣儿。有的花瓣儿全展开了，露出嫩黄色的小莲蓬。有的还是花骨朵儿，看起来 得马上要破裂似的。</p><p>　这么多的白荷花，一朵有一朵的姿势。看看这一朵，很美;看看那一朵，也很美。如果把眼前的一池荷花看作一大幅活的画，那画家的本领可真了不起。</p>, <p><span>课文内容理解；雪地里的小画家</span></p>, /2017/10/25/891cd9b0-f6fb-46dc-805a-276705a569ca.png, A, 1, 雪地里的小画家, ssss, admin, /lession1/zsd1/jumut.mp4, 2]
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/savenext.html,pathInfo=
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:41:58   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:41:59   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:42:02   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/saveForOption.json,pathInfo=
2017-10-30 14:42:02   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:02   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:02   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-10-30 14:42:03   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/list.json,pathInfo=
2017-10-30 14:42:03   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:03   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:03   INFO  [http-nio-9998-exec-7][SubjectRestController.java:139] - 获取题目stype=0,name=,startTime=null,endTime=null,status=-1,name=,vtype=0,start=0,limit=10
2017-10-30 14:42:12   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:42:12   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:12   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:12   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:42:14   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:42:14   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:14   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:14   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:42:16   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:42:16   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:16   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:16   INFO  [http-nio-9998-exec-6][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:42:16   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:42:24   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 14:42:24   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:24   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:25   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:42:25   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:25   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:25   INFO  [http-nio-9998-exec-5][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:42:25   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:42:25   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:25   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:25   INFO  [http-nio-9998-exec-9][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:42:25   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:29   INFO  [http-nio-9998-exec-1][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:29   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:29   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:42:29   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:35   INFO  [http-nio-9998-exec-10][KnowledgeRestController.java:335] - 需要绑定的subjectId=0
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-10][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-10][MysqlDialectImpl.java:88] - 执行保存的参数=[0, 0, 0, 1]
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:35   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:35   INFO  [http-nio-9998-exec-2][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=0
2017-10-30 14:42:35   INFO  [http-nio-9998-exec-2][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:42:35   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:42:35   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:42:35   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:43:00   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 14:43:00   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:43:00   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:46:32   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 14:46:47   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 1568 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 14:46:47   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 14:46:47   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 14:46:51   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 14:46:51   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 14:46:51   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 14:46:51   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 14:46:51   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 14:46:51   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 14:46:52   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 14:46:56   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 14:46:56   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 14:46:56   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 14:46:56   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.88 seconds (JVM running for 12.924)
2017-10-30 14:47:00   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 14:47:01   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:47:01   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:02   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:02   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:47:02   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 14:47:10   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:47:10   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:10   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:10   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:47:12   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:47:12   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:12   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:12   INFO  [http-nio-9998-exec-10][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:47:12   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:16   INFO  [http-nio-9998-exec-6][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:16   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:16   INFO  [http-nio-9998-exec-9][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:47:16   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:20   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:335] - 需要绑定的subjectId=0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: 
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Z@48d867b7
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@48d867b7' to type 'boolean[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [B@78be433e
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'byte[]' value '[B@78be433e' to type 'byte[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [C@782cc6ba
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'char[]' value '[C@782cc6ba' to type 'char[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [D@685367c7
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'double[]' value '[D@685367c7' to type 'double[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [F@633d40a5
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'float[]' value '[F@633d40a5' to type 'float[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [I@6910584f
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'int[]' value '[I@6910584f' to type 'int[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [J@77174ac1
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'long[]' value '[J@77174ac1' to type 'long[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [S@40966bb
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'short[]' value '[S@40966bb' to type 'short[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@db826f7
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@db826f7' to type 'BigDecimal[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@2b0dda6c
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@2b0dda6c' to type 'BigInteger[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@28bd50fe
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@28bd50fe' to type 'Boolean[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@5e63cb2
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@5e63cb2' to type 'Byte[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@511eaf39
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@511eaf39' to type 'Character[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@4f7de30e
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@4f7de30e' to type 'Double[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@494256eb
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@494256eb' to type 'Float[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@40ff7fab
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@40ff7fab' to type 'Integer[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@7cefa25f
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@7cefa25f' to type 'Long[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@73718f7b
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@73718f7b' to type 'Short[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@5f8bcb41
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@5f8bcb41' to type 'String[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@52d1c41d
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@52d1c41d' to type 'Class[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@2d24936b
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@2d24936b' to type 'Date[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@49da6171
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@49da6171' to type 'Calendar[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@1cc1d365
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@1cc1d365' to type 'java.io.File[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@1dcc5f8d
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@1dcc5f8d' to type 'java.sql.Date[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@27704a1b
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@27704a1b' to type 'java.sql.Time[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@643bbd1b
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@643bbd1b' to type 'java.sql.Timestamp[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@339d3d89
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@339d3d89' to type 'java.net.URL[]'
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:47:20   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[0, 0, 0, 2]
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:21   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=0
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:21   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:47:21   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:21   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:21   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:47:21   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:47:38   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:47:38   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:38   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:38   INFO  [http-nio-9998-exec-2][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:47:38   INFO  [http-nio-9998-exec-2][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:47:42   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:47:42   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:42   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:42   INFO  [http-nio-9998-exec-10][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=2
2017-10-30 14:47:42   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:47:43   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:47:43   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:47:43   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:47:43   INFO  [http-nio-9998-exec-6][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:47:43   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:48:16   INFO  [http-nio-9998-exec-8][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:48:16   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:48:16   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:48:16   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:48:19   INFO  [http-nio-9998-exec-1][KnowledgeRestController.java:335] - 需要绑定的subjectId=0
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:88] - 执行保存的参数=[0, 0, 0, 3]
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:48:19   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:48:19   INFO  [http-nio-9998-exec-10][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=0
2017-10-30 14:48:19   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:48:19   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:48:19   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:48:19   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:48:31   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 14:48:43   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7804 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 14:48:43   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 14:48:43   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 14:48:47   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 14:48:47   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 14:48:47   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 14:48:47   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 14:48:47   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 14:48:47   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 14:48:48   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 14:48:52   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 14:48:52   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 14:48:52   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 14:48:52   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.243 seconds (JVM running for 12.017)
2017-10-30 14:48:59   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 14:48:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:48:59   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:00   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:00   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:49:00   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 14:49:05   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:49:05   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:05   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:05   INFO  [http-nio-9998-exec-5][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:49:07   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:49:07   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:07   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:07   INFO  [http-nio-9998-exec-8][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 14:49:07   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:10   INFO  [http-nio-9998-exec-2][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:10   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:10   INFO  [http-nio-9998-exec-10][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:49:10   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:14   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:335] - 需要绑定的subjectId=0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: false
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value:  
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: 
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Z@73e431bb
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@73e431bb' to type 'boolean[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [B@ac786fc
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'byte[]' value '[B@ac786fc' to type 'byte[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [C@23c1458f
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'char[]' value '[C@23c1458f' to type 'char[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [D@788e1b32
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'double[]' value '[D@788e1b32' to type 'double[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [F@2ab58471
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'float[]' value '[F@2ab58471' to type 'float[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [I@1cf307bd
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'int[]' value '[I@1cf307bd' to type 'int[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [J@35b7d491
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'long[]' value '[J@35b7d491' to type 'long[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [S@3d681e9e
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'short[]' value '[S@3d681e9e' to type 'short[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@3bf8834e
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@3bf8834e' to type 'BigDecimal[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@34aafd58
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@34aafd58' to type 'BigInteger[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@36569129
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@36569129' to type 'Boolean[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@7f46cdc4
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@7f46cdc4' to type 'Byte[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@68082e5a
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@68082e5a' to type 'Character[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@10a4ca3c
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@10a4ca3c' to type 'Double[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@7ace092a
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@7ace092a' to type 'Float[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@3d18d0df
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@3d18d0df' to type 'Integer[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@808544d
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@808544d' to type 'Long[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@209048e9
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@209048e9' to type 'Short[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@440877c3
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@440877c3' to type 'String[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@30225457
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@30225457' to type 'Class[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@12d795ba
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@12d795ba' to type 'Date[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@5cc43655
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@5cc43655' to type 'Calendar[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@50b27155
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@50b27155' to type 'java.io.File[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@599c0a51
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@599c0a51' to type 'java.sql.Date[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@56467ede
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@56467ede' to type 'java.sql.Time[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@748da0d4
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@748da0d4' to type 'java.sql.Timestamp[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@68736661
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@68736661' to type 'java.net.URL[]'
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-4][MysqlDialectImpl.java:88] - 执行保存的参数=[0, 0, 0, 4]
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:14   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 14:49:14   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:15   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:15   INFO  [http-nio-9998-exec-9][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=0
2017-10-30 14:49:15   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 14:49:15   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:49:15   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:15   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:15   INFO  [http-nio-9998-exec-5][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:49:15   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:49:20   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 14:49:33   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7656 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 14:49:33   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 14:49:33   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 14:49:37   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 14:49:37   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 14:49:38   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 14:49:38   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 14:49:38   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 14:49:38   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 14:49:38   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 14:49:43   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 14:49:43   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 14:49:43   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 14:49:43   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.007 seconds (JVM running for 13.698)
2017-10-30 14:49:47   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 14:49:48   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 14:49:48   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:49   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:49   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:49:49   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 14:49:52   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 14:49:52   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:52   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:52   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 14:49:54   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 14:49:54   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:54   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:54   INFO  [http-nio-9998-exec-7][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 14:49:54   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 14:49:55   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 14:49:55   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:55   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:55   INFO  [http-nio-9998-exec-8][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 14:49:55   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 14:49:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 14:49:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 14:49:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 14:49:57   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:335] - 需要绑定的subjectId=0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: false
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value:  
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: false
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value:  
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Z@38a2c121
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@38a2c121' to type 'boolean[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [B@6441e71e
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'byte[]' value '[B@6441e71e' to type 'byte[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [C@465b9166
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'char[]' value '[C@465b9166' to type 'char[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [D@3a54e49b
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'double[]' value '[D@3a54e49b' to type 'double[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [F@14519139
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'float[]' value '[F@14519139' to type 'float[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [I@7f43fdba
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'int[]' value '[I@7f43fdba' to type 'int[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [J@65098395
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'long[]' value '[J@65098395' to type 'long[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [S@7864d393
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'short[]' value '[S@7864d393' to type 'short[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@60244dff
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@60244dff' to type 'BigDecimal[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@2956fccf
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@2956fccf' to type 'BigInteger[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@77705a3d
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@77705a3d' to type 'Boolean[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@3579aa99
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@3579aa99' to type 'Byte[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@63d6f7f8
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@63d6f7f8' to type 'Character[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@7d78cfc9
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@7d78cfc9' to type 'Double[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@82cd3e9
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@82cd3e9' to type 'Float[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@70f98d17
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@70f98d17' to type 'Integer[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@2444ddc7
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@2444ddc7' to type 'Long[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@1ff94801
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@1ff94801' to type 'Short[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@71a4638c
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@71a4638c' to type 'String[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@4d89d99a
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@4d89d99a' to type 'Class[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@4fa19f09
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@4fa19f09' to type 'Date[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@48a7c76a
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@48a7c76a' to type 'Calendar[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@87b054f
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@87b054f' to type 'java.io.File[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@793aab63
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@793aab63' to type 'java.sql.Date[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@48e13244
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@48e13244' to type 'java.sql.Time[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@34add6b6
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@34add6b6' to type 'java.sql.Timestamp[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@7fb8fc7a
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@7fb8fc7a' to type 'java.net.URL[]'
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 15:02:53   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:88] - 执行保存的参数=[0, 0, 0, 5]
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:02:56   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:02:56   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=0
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:02:56   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:02:56   INFO  [http-nio-9998-exec-1][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 15:02:56   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:02:56   INFO  [http-nio-9998-exec-1][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:03:10   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 15:03:10   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:03:10   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:03:10   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:03:12   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:03:12   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:03:12   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:03:12   INFO  [http-nio-9998-exec-3][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:03:14   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:03:14   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:03:14   INFO  [http-nio-9998-exec-10][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 15:03:14   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:03:17   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 15:03:17   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:03:17   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:03:35   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 15:03:38   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:335] - 需要绑定的subjectId=0
2017-10-30 15:08:50   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 1424 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 15:08:50   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 15:08:50   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 15:08:54   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 15:08:54   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 15:08:54   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 15:08:55   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 15:08:55   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 15:08:55   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 15:08:55   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 15:09:01   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 15:09:01   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 15:09:01   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 15:09:01   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.269 seconds (JVM running for 13.752)
2017-10-30 15:09:05   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 15:09:05   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 15:09:05   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:06   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:07   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:09:07   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 15:09:29   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 15:09:29   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:29   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:29   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:09:35   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:09:35   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:35   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:35   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:09:42   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:09:42   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:42   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:42   INFO  [http-nio-9998-exec-8][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 15:09:42   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:45   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:45   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:45   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 15:09:50   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:09:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 15:09:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:09:57   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:09:57   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:342] - 需要绑定的subjectId=2
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: false
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value:  
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: false
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value:  
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: 
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Z@412d6b72
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@412d6b72' to type 'boolean[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [B@316c9f99
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'byte[]' value '[B@316c9f99' to type 'byte[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [C@2ea4ce34
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'char[]' value '[C@2ea4ce34' to type 'char[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [D@3d3bdf67
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'double[]' value '[D@3d3bdf67' to type 'double[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [F@17674549
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'float[]' value '[F@17674549' to type 'float[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [I@42a2906b
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'int[]' value '[I@42a2906b' to type 'int[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [J@4aff3365
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'long[]' value '[J@4aff3365' to type 'long[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [S@295c1dba
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'short[]' value '[S@295c1dba' to type 'short[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@4bc58d5
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@4bc58d5' to type 'BigDecimal[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@619cd4d6
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@619cd4d6' to type 'BigInteger[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@4ef83bab
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@4ef83bab' to type 'Boolean[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@468e89b8
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@468e89b8' to type 'Byte[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@4469aa6f
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@4469aa6f' to type 'Character[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@290d4e6f
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@290d4e6f' to type 'Double[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@74075c87
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@74075c87' to type 'Float[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@4a040757
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@4a040757' to type 'Integer[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@5c9928f5
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@5c9928f5' to type 'Long[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@7546ff43
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@7546ff43' to type 'Short[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@57644426
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@57644426' to type 'String[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@5b1013a6
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@5b1013a6' to type 'Class[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@196e4360
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@196e4360' to type 'Date[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@56dbe8c6
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@56dbe8c6' to type 'Calendar[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@66136b0a
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@66136b0a' to type 'java.io.File[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@127eb0c7
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@127eb0c7' to type 'java.sql.Date[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@8c6b903
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@8c6b903' to type 'java.sql.Time[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@23ca493c
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@23ca493c' to type 'java.sql.Timestamp[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@6dc69352
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@6dc69352' to type 'java.net.URL[]'
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:88] - 执行保存的参数=[2, 1, 0, 6]
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:02   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:02   INFO  [http-nio-9998-exec-7][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:10:03   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:10:03   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:03   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:03   INFO  [http-nio-9998-exec-6][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 15:10:03   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:10:03   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:10:03   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:03   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:03   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 15:10:03   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:10:15   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-10-30 15:10:15   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:15   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:16   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:10:16   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:10:17   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:17   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:17   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:17   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:17   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:10:17   INFO  [http-nio-9998-exec-8][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 15:10:17   INFO  [http-nio-9998-exec-8][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:10:20   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 15:10:20   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:20   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:20   INFO  [http-nio-9998-exec-5][KnowledgeController.java:142] - 需要绑定题目的考试编号:1
2017-10-30 15:10:20   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:10:21   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:10:21   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:21   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:21   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 15:10:21   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:10:24   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 15:10:24   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:25   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:342] - 需要绑定的subjectId=2
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:88] - 执行保存的参数=[2, 1, 0, 6]
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:25   INFO  [http-nio-9998-exec-6][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:25   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:25   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:25   INFO  [http-nio-9998-exec-4][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-10-30 15:10:25   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:10:25   INFO  [http-nio-9998-exec-4][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:30   INFO  [http-nio-9998-exec-10][KnowledgeController.java:142] - 需要绑定题目的考试编号:4
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:30   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:30   INFO  [http-nio-9998-exec-9][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 15:10:30   INFO  [http-nio-9998-exec-9][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:10:36   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 15:10:36   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:36   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:36   INFO  [http-nio-9998-exec-2][KnowledgeRestController.java:342] - 需要绑定的subjectId=2
2017-10-30 15:10:36   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 15:10:36   DEBUG [http-nio-9998-exec-2][MysqlDialectImpl.java:88] - 执行保存的参数=[2, 4, 0, 1]
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:37   INFO  [http-nio-9998-exec-4][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:37   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=4
2017-10-30 15:10:37   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:37   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:37   INFO  [http-nio-9998-exec-6][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 15:10:37   INFO  [http-nio-9998-exec-6][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:10:40   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/knowledge/bindAddScore.html,pathInfo=
2017-10-30 15:10:40   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:40   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:40   INFO  [http-nio-9998-exec-10][KnowledgeController.java:177] - 需要绑定编号:knowledgeId=4  subjectId=10
2017-10-30 15:10:40   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:10:44   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-10-30 15:10:44   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:44   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:44   INFO  [http-nio-9998-exec-8][KnowledgeRestController.java:342] - 需要绑定的subjectId=10
2017-10-30 15:10:44   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_subject(subjectid,knowledgeid,score,serial,addtime,edittime) VALUES(?,?,?,?,now(),now())
2017-10-30 15:10:44   DEBUG [http-nio-9998-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[10, 4, 10, 2]
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/list.json,pathInfo=
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:45   INFO  [http-nio-9998-exec-9][KnowledgeRestController.java:93] - 获取知识点status=-1,关键字=,typeid=0,start=0,limit=10
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:45   INFO  [http-nio-9998-exec-5][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=4
2017-10-30 15:10:45   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:10:45   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:10:45   INFO  [http-nio-9998-exec-3][SubjectRestController.java:422] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-10-30 15:10:49   INFO  [http-nio-9998-exec-3][SubjectServiceImpl.java:585] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-10-30 15:12:38   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 15:12:38   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:12:38   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:12:40   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:12:40   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:12:40   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:12:40   INFO  [http-nio-9998-exec-7][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=1
2017-10-30 15:12:40   INFO  [http-nio-9998-exec-7][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:12:45   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:12:45   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:12:45   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:12:45   INFO  [http-nio-9998-exec-10][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=4
2017-10-30 15:12:45   INFO  [http-nio-9998-exec-10][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:12:52   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 15:12:52   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:12:52   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:12:56   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 15:12:56   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:12:56   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:12:56   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:12:56   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:12:56   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:12:56   INFO  [http-nio-9998-exec-5][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=4
2017-10-30 15:12:56   INFO  [http-nio-9998-exec-5][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:13:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 15:13:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:13:11   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:13:16   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-10-30 15:13:16   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:13:16   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:13:19   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/subject/listbyknow.json,pathInfo=
2017-10-30 15:13:19   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:13:19   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:13:19   INFO  [http-nio-9998-exec-2][SubjectRestController.java:293] - 获取商品属性status=-1,start=0,limit=1000,knowledgeId=4
2017-10-30 15:13:19   INFO  [http-nio-9998-exec-2][SubjectServiceImpl.java:256] - sql=select s.*,ks.serial as ext_serial ,ks.score as ext_score  from t_subject s,t_knowledge_subject ks   where 1=1 and ks.knowledgeid=?  and  s. id=ks.subjectid order by ks.serial asc;
2017-10-30 15:23:40   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/manager/permission/page.html,pathInfo=
2017-10-30 15:23:40   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:23:40   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:23:40   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:24:07   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/manager/permission/edit.html,pathInfo=
2017-10-30 15:24:07   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:24:07   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:24:07   INFO  [http-nio-9998-exec-5][PermissionController.java:101] - 需要修改密码的权限编号:0
2017-10-30 15:24:07   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:24:11   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/tree.html,pathInfo=
2017-10-30 15:24:11   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:24:11   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:24:11   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:24:12   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/manager/permission/tree.json,pathInfo=
2017-10-30 15:24:12   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:24:12   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:25:14   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/manager/permission/save.json,pathInfo=
2017-10-30 15:25:14   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:25:14   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.manager.pojo.PermissionDo@14aa1996[name=<null>,ident=<null>,parentid=<null>,groupid=<null>,groupname=<null>,operatetype=<null>,type=<null>,url=<null>,icons=<null>,remark1=<null>,remark2=<null>,isshow=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {parentid=[Ljava.lang.String;@62c80a23, name=[Ljava.lang.String;@35d9c5e3, ident=[Ljava.lang.String;@54498381, type=[Ljava.lang.String;@6766fd78, isshow=[Ljava.lang.String;@455d6aa5, url=[Ljava.lang.String;@3e504930, icons=[Ljava.lang.String;@261d80f0, remark1=[Ljava.lang.String;@76402476, id=[Ljava.lang.String;@58e66059})
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '19' to class 'java.lang.Long'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '19' to type 'Long'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:171] -     Converted to Long value '19'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '用户题目管理' to class 'java.lang.String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '用户题目管理' to type 'String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string 'usersubject-ist' to class 'java.lang.String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value 'usersubject-ist' to type 'String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:171] -     Converted to Short value '1'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '1' to type 'String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string 'usersubject/page' to class 'java.lang.String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value 'usersubject/page' to type 'String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '用户题目管理' to class 'java.lang.String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '用户题目管理' to type 'String'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:319] -     Using default Long value '0'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_permission(ident,adder,icons,type,parentid,url,isshow,adderid,name,remark1,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,now(),now())
2017-10-30 15:25:15   DEBUG [http-nio-9998-exec-1][MysqlDialectImpl.java:88] - 执行保存的参数=[usersubject-ist, admin, , 1, 19, usersubject/page, 1, 1, 用户题目管理, 用户题目管理]
2017-10-30 15:25:16   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/manager/permission/page.html,pathInfo=
2017-10-30 15:25:16   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:25:16   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:25:16   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:25:32   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/manager/permission/edit.html,pathInfo=
2017-10-30 15:25:32   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:25:32   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:25:32   INFO  [http-nio-9998-exec-10][PermissionController.java:101] - 需要修改密码的权限编号:0
2017-10-30 15:25:32   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/tree.html,pathInfo=
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/manager/permission/tree.json,pathInfo=
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:25:34   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/manager/permission/save.json,pathInfo=
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.manager.pojo.PermissionDo@25ffa4c3[name=<null>,ident=<null>,parentid=<null>,groupid=<null>,groupname=<null>,operatetype=<null>,type=<null>,url=<null>,icons=<null>,remark1=<null>,remark2=<null>,isshow=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {parentid=[Ljava.lang.String;@71ee3bc9, name=[Ljava.lang.String;@71f4f77, ident=[Ljava.lang.String;@6a0465e5, type=[Ljava.lang.String;@32851dda, isshow=[Ljava.lang.String;@32b54830, url=[Ljava.lang.String;@4f2ccde6, icons=[Ljava.lang.String;@6cea2ab, remark1=[Ljava.lang.String;@1c3f1465, id=[Ljava.lang.String;@4d32b1a})
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '19' to class 'java.lang.Long'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '19' to type 'Long'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Long value '19'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '用户知识点管理' to class 'java.lang.String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '用户知识点管理' to type 'String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string 'userknowledge-list' to class 'java.lang.String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value 'userknowledge-list' to type 'String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Short value '1'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '1' to type 'String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string 'userknowledge/page' to class 'java.lang.String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value 'userknowledge/page' to type 'String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '用户知识点管理' to class 'java.lang.String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '用户知识点管理' to type 'String'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:319] -     Using default Long value '0'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_permission(ident,adder,icons,type,parentid,url,isshow,adderid,name,remark1,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,now(),now())
2017-10-30 15:26:27   DEBUG [http-nio-9998-exec-4][MysqlDialectImpl.java:88] - 执行保存的参数=[userknowledge-list, admin, , 1, 19, userknowledge/page, 1, 1, 用户知识点管理, 用户知识点管理]
2017-10-30 15:26:28   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/manager/permission/page.html,pathInfo=
2017-10-30 15:26:28   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 15:26:28   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 15:26:28   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:40:27   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 16:40:41   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6524 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 16:40:41   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 16:40:41   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 16:40:45   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 16:40:45   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 16:40:45   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 16:40:45   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 16:40:45   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 16:40:45   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 16:40:45   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 16:40:49   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 16:40:49   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 16:40:49   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 16:40:49   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.12 seconds (JVM running for 11.859)
2017-10-30 16:40:56   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 16:40:56   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/manager/permission/page.html,pathInfo=
2017-10-30 16:40:56   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:40:57   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:40:57   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:40:57   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 16:41:12   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/manager/admin/page.html,pathInfo=
2017-10-30 16:41:12   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:12   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:12   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:41:14   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/manager/admin/list.json,pathInfo=
2017-10-30 16:41:14   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:14   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:14   INFO  [http-nio-9998-exec-8][AdminRestController.java:106] - 获取管理员status=-1,关键字=,start=0,limit=10
2017-10-30 16:41:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/manager/role/page.html,pathInfo=
2017-10-30 16:41:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:22   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:22   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:41:24   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/manager/role/list.json,pathInfo=
2017-10-30 16:41:24   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:24   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:24   INFO  [http-nio-9998-exec-4][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/tree.html,pathInfo=
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-9][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/manager/permission/tree.json,pathInfo=
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:26   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:34   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/manager/role/permission.json,pathInfo=
2017-10-30 16:41:34   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:34   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/manager/role/list.json,pathInfo=
2017-10-30 16:41:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:35   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:35   INFO  [http-nio-9998-exec-7][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-10-30 16:41:43   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/manager/role/page.html,pathInfo=
2017-10-30 16:41:43   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:43   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:43   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:41:45   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/manager/role/list.json,pathInfo=
2017-10-30 16:41:45   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:45   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:45   INFO  [http-nio-9998-exec-4][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-10-30 16:41:48   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 16:41:48   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:41:48   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:41:48   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:41:49   ERROR [http-nio-9998-exec-5][AuthorizationFilter.java:110] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core._MiscTemplateException: Template inclusion failed (for parameter value "../../common/style.ftl"):
Template not found for name "usersubject/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #include "../../common/style.ftl"  [in template "usersubject/page.ftl" at line 7, column 5]
----
2017-10-30 16:41:49   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:111] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core._MiscTemplateException: Template inclusion failed (for parameter value "../../common/style.ftl"):
Template not found for name "usersubject/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #include "../../common/style.ftl"  [in template "usersubject/page.ftl" at line 7, column 5]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:107) [core-web-4.1.1.jar:4.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core._MiscTemplateException: Template inclusion failed (for parameter value "../../common/style.ftl"):
Template not found for name "usersubject/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #include "../../common/style.ftl"  [in template "usersubject/page.ftl" at line 7, column 5]
----
	at freemarker.core.Include.accept(Include.java:164) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
Caused by: freemarker.template.TemplateNotFoundException: Template not found for name "usersubject/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).
	at freemarker.template.Configuration.getTemplate(Configuration.java:2485) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.getTemplateForInclusion(Environment.java:2467) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Include.accept(Include.java:162) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-10-30 16:41:49   ERROR [http-nio-9998-exec-5][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:112) ~[core-web-4.1.1.jar:4.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-10-30 16:43:05   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 16:43:05   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:43:05   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:43:05   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 16:43:08   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 16:43:09   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 16:43:09   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 16:43:09   INFO  [http-nio-9998-exec-5][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 16:53:17   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 19:37:32   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5524 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 19:37:32   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 19:37:32   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 19:37:41   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 19:37:41   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 19:37:41   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 19:37:42   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 19:37:42   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 19:37:42   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 19:37:42   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 19:37:48   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 19:37:48   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 19:37:48   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 19:37:48   INFO  [main][StartupInfoLogger.java:57] - Started Application in 18.728 seconds (JVM running for 22.282)
2017-10-30 19:39:08   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 19:39:09   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/knowledge/page.html,pathInfo=
2017-10-30 19:39:09   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:39:09   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :-1
2017-10-30 19:39:09   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:103] - path=http://localhost:9998,loginUrl=login.html
2017-10-30 19:39:09   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/login.html,pathInfo=
2017-10-30 19:39:09   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：null
2017-10-30 19:39:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/getvm.html,pathInfo=
2017-10-30 19:39:29   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/login.json,pathInfo=
2017-10-30 19:39:29   INFO  [http-nio-9998-exec-10][CommonController.java:137] - 后台管理员开始登陆:admin
2017-10-30 19:39:29   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：vaSZ+hZzo2c=
2017-10-30 19:39:29   INFO  [http-nio-9998-exec-10][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 19:39:31   INFO  [http-nio-9998-exec-10][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-10-30 19:39:31   INFO  [http-nio-9998-exec-10][CommonController.java:170] - 用户登录成功
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: false
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value:  
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0.0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: false
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value:  
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Long value '0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:171] -     Converted to Short value '0'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: 
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Z@216483bc
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@216483bc' to type 'boolean[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [B@5343abcc
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'byte[]' value '[B@5343abcc' to type 'byte[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [C@6f2923ca
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'char[]' value '[C@6f2923ca' to type 'char[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [D@96f1376
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'double[]' value '[D@96f1376' to type 'double[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [F@c931884
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'float[]' value '[F@c931884' to type 'float[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [I@42c0cf11
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'int[]' value '[I@42c0cf11' to type 'int[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [J@64d183f0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'long[]' value '[J@64d183f0' to type 'long[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [S@15d4d8bf
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'short[]' value '[S@15d4d8bf' to type 'short[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@117a5b9
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@117a5b9' to type 'BigDecimal[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@2dcd9f83
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@2dcd9f83' to type 'BigInteger[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@2269ffac
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@2269ffac' to type 'Boolean[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@7cbb45b3
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@7cbb45b3' to type 'Byte[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@7293f3cc
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@7293f3cc' to type 'Character[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@36aa5be9
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@36aa5be9' to type 'Double[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@13b015d0
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@13b015d0' to type 'Float[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@37efd795
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@37efd795' to type 'Integer[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@5e6a9d68
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@5e6a9d68' to type 'Long[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@31f0b879
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@31f0b879' to type 'Short[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@4e15e6f7
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@4e15e6f7' to type 'String[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@620f3250
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@620f3250' to type 'Class[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@56887d18
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@56887d18' to type 'Date[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@672a5fd
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@672a5fd' to type 'Calendar[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@80154ca
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@80154ca' to type 'java.io.File[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@723a0033
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@723a0033' to type 'java.sql.Date[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@4904140d
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@4904140d' to type 'java.sql.Time[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@2a4dcac5
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@2a4dcac5' to type 'java.sql.Timestamp[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@512c857
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@512c857' to type 'java.net.URL[]'
2017-10-30 19:39:31   DEBUG [http-nio-9998-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-10-30 19:39:32   DEBUG [http-nio-9998-exec-10][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-10-30 19:39:32   DEBUG [http-nio-9998-exec-10][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-10-30 19:39:32   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/index.html,pathInfo=
2017-10-30 19:39:32   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:39:32   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:39:32   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:39:46   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:39:46   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:39:46   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:39:46   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:39:49   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 19:39:49   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:39:49   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:39:49   INFO  [http-nio-9998-exec-8][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 19:42:42   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 19:42:58   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 1744 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 19:42:58   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 19:42:58   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 19:43:02   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 19:43:02   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 19:43:02   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 19:43:03   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 19:43:03   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 19:43:03   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 19:43:03   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 19:43:08   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 19:43:08   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 19:43:08   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 19:43:08   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.141 seconds (JVM running for 16.154)
2017-10-30 19:43:17   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 19:43:18   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:43:18   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:43:19   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:43:19   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:43:19   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 19:43:22   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 19:43:22   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:43:22   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:43:22   INFO  [http-nio-9998-exec-8][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 19:43:30   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 19:43:41   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5872 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 19:43:41   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 19:43:41   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 19:43:45   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 19:43:45   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 19:43:45   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 19:43:45   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 19:43:45   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 19:43:45   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 19:43:46   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 19:43:52   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 19:43:52   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 19:43:52   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 19:43:52   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.465 seconds (JVM running for 14.387)
2017-10-30 19:43:52   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 19:43:52   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:43:52   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:43:53   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:43:53   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:43:53   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 19:43:55   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 19:43:55   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:43:55   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:43:55   INFO  [http-nio-9998-exec-4][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 19:44:02   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:44:02   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:44:02   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:44:02   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:44:03   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 19:44:03   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:44:03   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:44:03   INFO  [http-nio-9998-exec-1][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 19:44:23   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:44:23   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:44:23   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:44:23   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:44:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 19:44:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:44:25   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:44:25   INFO  [http-nio-9998-exec-6][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 19:44:27   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:44:27   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:44:27   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:44:27   DEBUG [http-nio-9998-exec-7][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:44:28   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/usersubjectright/list.json,pathInfo=
2017-10-30 19:44:28   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:44:28   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:44:28   INFO  [http-nio-9998-exec-4][UserSubjectRightRestController.java:104] - 获取status=0,username=,name=,start=0,limit=10
2017-10-30 19:47:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:47:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:47:12   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:47:12   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:47:13   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:47:14   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:47:14   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:47:14   INFO  [http-nio-9998-exec-1][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:47:15   ERROR [http-nio-9998-exec-1][UserSubjectRestController.java:115] - 获取分页发生错误:PreparedStatementCallback; SQL [select count(id) from t_user_subject t1,t_user t2,t_subject t3 where t1.userid=t2.id and t1.subjectid=t3.id  and t1.slock < 2 ]; Column 'id' in field list is ambiguous; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
2017-10-30 19:47:15   DEBUG [http-nio-9998-exec-1][UserSubjectRestController.java:116] - org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [select count(id) from t_user_subject t1,t_user t2,t_subject t3 where t1.userid=t2.id and t1.subjectid=t3.id  and t1.slock < 2 ]; Column 'id' in field list is ambiguous; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'id' in field list is ambiguous
2017-10-30 19:47:59   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 19:48:10   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6128 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 19:48:10   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 19:48:10   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 19:48:14   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 19:48:14   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 19:48:14   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 19:48:14   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 19:48:14   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 19:48:14   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 19:48:15   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 19:48:20   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 19:48:20   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 19:48:20   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 19:48:20   INFO  [main][StartupInfoLogger.java:57] - Started Application in 10.782 seconds (JVM running for 14.011)
2017-10-30 19:48:33   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 19:48:34   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:48:34   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:48:35   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:48:35   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:48:35   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 19:48:39   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:48:39   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:48:39   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:48:39   INFO  [http-nio-9998-exec-7][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:49:26   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:49:26   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:49:26   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:49:26   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:49:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:49:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:49:28   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:49:28   INFO  [http-nio-9998-exec-5][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:50:06   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:50:06   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:50:06   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:50:06   DEBUG [http-nio-9998-exec-4][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:50:08   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:50:08   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:50:08   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:50:08   INFO  [http-nio-9998-exec-9][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:50:49   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:50:49   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:50:49   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:50:49   DEBUG [http-nio-9998-exec-5][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:50:50   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:50:50   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:50:50   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:50:50   INFO  [http-nio-9998-exec-9][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:51:25   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:51:25   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:51:25   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:51:25   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:51:26   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:51:26   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:51:26   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:51:26   INFO  [http-nio-9998-exec-1][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:51:46   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:51:46   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:51:46   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:51:46   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:51:47   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:51:47   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:51:47   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:51:47   INFO  [http-nio-9998-exec-1][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:52:03   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:52:03   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:52:03   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:52:03   DEBUG [http-nio-9998-exec-8][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:52:04   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:52:04   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:52:04   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:52:04   INFO  [http-nio-9998-exec-6][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:52:25   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:52:25   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:52:25   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:52:25   DEBUG [http-nio-9998-exec-2][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:52:27   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:52:27   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:52:27   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:52:27   INFO  [http-nio-9998-exec-2][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:53:42   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:53:42   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:53:42   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:53:42   DEBUG [http-nio-9998-exec-6][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:53:43   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:53:43   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:53:43   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:53:43   INFO  [http-nio-9998-exec-2][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 19:53:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:53:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:53:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:55:32   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-10-30 19:58:56   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6032 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-10-30 19:58:56   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-10-30 19:58:56   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-10-30 19:58:59   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-10-30 19:58:59   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-10-30 19:58:59   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-10-30 19:59:00   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-10-30 19:59:00   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-10-30 19:59:00   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-10-30 19:59:00   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-10-30 19:59:03   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9998"]
2017-10-30 19:59:04   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9998]
2017-10-30 19:59:04   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-10-30 19:59:04   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.936 seconds (JVM running for 11.816)
2017-10-30 19:59:23   INFO  [http-nio-9998-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-10-30 19:59:23   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 19:59:23   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:59:24   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:59:24   DEBUG [http-nio-9998-exec-1][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 19:59:24   INFO  [http-nio-9998-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-10-30 19:59:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 19:59:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 19:59:27   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 19:59:27   INFO  [http-nio-9998-exec-4][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:00:42   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 20:00:42   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:00:42   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:00:42   DEBUG [http-nio-9998-exec-3][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 20:00:44   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:00:44   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:00:44   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:00:44   INFO  [http-nio-9998-exec-8][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:02:56   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/usersubject/page.html,pathInfo=
2017-10-30 20:02:56   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:02:56   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:02:56   DEBUG [http-nio-9998-exec-10][CookiesUtil.java:80] - 获取解密的数据：52jpwJZ/t7A8CIZlS9lglQ==
2017-10-30 20:02:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:02:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:02:57   DEBUG [http-nio-9998-exec-4][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:02:57   INFO  [http-nio-9998-exec-4][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:18   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:18   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:18   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:18   INFO  [http-nio-9998-exec-6][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:23   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:23   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:23   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:23   INFO  [http-nio-9998-exec-2][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:26   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:26   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:26   DEBUG [http-nio-9998-exec-7][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:26   INFO  [http-nio-9998-exec-7][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:44   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:44   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:44   DEBUG [http-nio-9998-exec-10][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:44   INFO  [http-nio-9998-exec-10][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:47   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:47   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:47   DEBUG [http-nio-9998-exec-8][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:47   INFO  [http-nio-9998-exec-8][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:48   DEBUG [http-nio-9998-exec-3][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:48   INFO  [http-nio-9998-exec-3][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:53   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:53   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:53   DEBUG [http-nio-9998-exec-5][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:53   INFO  [http-nio-9998-exec-5][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:03:55   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:03:55   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:03:55   DEBUG [http-nio-9998-exec-9][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:03:55   INFO  [http-nio-9998-exec-9][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
2017-10-30 20:04:05   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:04:05   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:04:05   DEBUG [http-nio-9998-exec-6][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:04:05   INFO  [http-nio-9998-exec-6][UserSubjectRestController.java:100] - 获取status=1,关键字=,start=0,limit=10
2017-10-30 20:04:07   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:04:07   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:04:07   DEBUG [http-nio-9998-exec-1][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:04:07   INFO  [http-nio-9998-exec-1][UserSubjectRestController.java:100] - 获取status=0,关键字=,start=0,limit=10
2017-10-30 20:04:07   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:81] - req_uri=/usersubject/list.json,pathInfo=
2017-10-30 20:04:07   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:91] - initParam=adminid
2017-10-30 20:04:07   DEBUG [http-nio-9998-exec-2][AuthorizationFilter.java:101] - check user login :1
2017-10-30 20:04:07   INFO  [http-nio-9998-exec-2][UserSubjectRestController.java:100] - 获取status=-1,关键字=,start=0,limit=10
