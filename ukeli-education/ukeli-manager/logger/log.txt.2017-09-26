2017-09-26 11:13:10   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6332 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 11:13:10   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 11:13:10   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 11:13:15   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 11:13:15   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 11:13:15   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 11:13:15   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 11:13:15   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 11:13:15   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 11:13:16   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 11:13:19   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 11:13:19   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 11:13:19   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 11:13:19   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.002 seconds (JVM running for 14.178)
2017-09-26 11:14:36   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 11:14:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-26 11:14:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:14:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :-1
2017-09-26 11:14:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:96] - path=http://localhost:9999,loginUrl=login.html
2017-09-26 11:14:36   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-09-26 11:14:36   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：null
2017-09-26 11:14:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/getvm.html,pathInfo=
2017-09-26 11:14:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/login.json,pathInfo=
2017-09-26 11:14:47   INFO  [http-nio-9999-exec-8][CommonController.java:137] - 后台管理员开始登陆:admin
2017-09-26 11:14:47   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：NWmnhUcFro4=
2017-09-26 11:14:47   INFO  [http-nio-9999-exec-8][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 11:14:50   INFO  [http-nio-9999-exec-8][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-09-26 11:14:50   INFO  [http-nio-9999-exec-8][CommonController.java:170] - 用户登录成功
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Z@1c226b46
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@1c226b46' to type 'boolean[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [B@6011e187
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'byte[]' value '[B@6011e187' to type 'byte[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [C@4e6cc3de
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'char[]' value '[C@4e6cc3de' to type 'char[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [D@425c0881
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'double[]' value '[D@425c0881' to type 'double[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [F@4d2b23d7
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'float[]' value '[F@4d2b23d7' to type 'float[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [I@2259ee2c
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'int[]' value '[I@2259ee2c' to type 'int[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [J@a03ab8a
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'long[]' value '[J@a03ab8a' to type 'long[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [S@28b9b24b
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'short[]' value '[S@28b9b24b' to type 'short[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@3c980910
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@3c980910' to type 'BigDecimal[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@4615167b
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@4615167b' to type 'BigInteger[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@5ff782ea
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@5ff782ea' to type 'Boolean[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@d9fd14a
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@d9fd14a' to type 'Byte[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@13c240de
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@13c240de' to type 'Character[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@3e81a9c9
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@3e81a9c9' to type 'Double[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@4419f8ae
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@4419f8ae' to type 'Float[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@3d35efa
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@3d35efa' to type 'Integer[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@29dabdd0
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@29dabdd0' to type 'Long[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@7bb54947
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@7bb54947' to type 'Short[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@4a507c6d
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@4a507c6d' to type 'String[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@6f86f9aa
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@6f86f9aa' to type 'Class[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@3e287a6c
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@3e287a6c' to type 'Date[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@2a5aa83
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@2a5aa83' to type 'Calendar[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@2730a2f4
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@2730a2f4' to type 'java.io.File[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@3b2600a1
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@3b2600a1' to type 'java.sql.Date[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@71bb2068
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@71bb2068' to type 'java.sql.Time[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@2c355823
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@2c355823' to type 'java.sql.Timestamp[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@27471269
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@27471269' to type 'java.net.URL[]'
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-09-26 11:14:51   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-09-26 11:14:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-26 11:14:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:14:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:14:54   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:19:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/user/page.html,pathInfo=
2017-09-26 11:19:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:19:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:19:20   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:19:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:19:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:19:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:19:25   INFO  [http-nio-9999-exec-2][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:19:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:19:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:19:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:19:27   INFO  [http-nio-9999-exec-4][UserController.java:70] - 需要修改密码的权限编号:0
2017-09-26 11:19:27   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:19:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:19:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:19:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:19:35   INFO  [http-nio-9999-exec-9][UserController.java:70] - 需要修改密码的权限编号:0
2017-09-26 11:19:35   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:20:49   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-26 11:21:03   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 2276 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 11:21:03   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 11:21:03   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 11:21:07   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 11:21:07   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 11:21:07   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 11:21:07   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 11:21:07   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 11:21:07   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 11:21:08   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 11:21:17   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 11:21:17   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 11:21:17   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 11:21:17   INFO  [main][StartupInfoLogger.java:57] - Started Application in 15.658 seconds (JVM running for 20.249)
2017-09-26 11:21:25   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 11:21:25   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/user/page.html,pathInfo=
2017-09-26 11:21:25   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:21:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:21:27   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:21:27   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 11:21:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:21:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:21:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:21:32   INFO  [http-nio-9999-exec-2][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:21:45   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/user/show.html,pathInfo=
2017-09-26 11:21:45   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:21:45   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:21:45   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:21:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:21:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:21:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:21:49   INFO  [http-nio-9999-exec-6][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:21:49   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:21:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:21:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:21:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:21:54   INFO  [http-nio-9999-exec-10][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:21:54   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 2, 18221575065, 123456, 18221575068, 0, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:22:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:22:00   INFO  [http-nio-9999-exec-2][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:22:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:22:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:22:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:22:14   INFO  [http-nio-9999-exec-4][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:22:14   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:22:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:22:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:22:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:22:46   INFO  [http-nio-9999-exec-5][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:22:46   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 2, 18221575065, 123456, 18221575068, 0, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:23:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:23:28   INFO  [http-nio-9999-exec-4][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:24:16   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-26 11:24:29   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6552 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 11:24:29   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 11:24:29   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 11:24:33   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 11:24:33   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 11:24:33   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 11:24:33   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 11:24:34   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 11:24:34   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 11:24:34   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 11:24:39   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 11:24:39   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 11:24:39   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 11:24:39   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.13 seconds (JVM running for 14.102)
2017-09-26 11:25:48   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 11:25:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:25:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:25:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:25:50   INFO  [http-nio-9999-exec-1][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:25:50   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 11:25:51   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:25:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:25:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:25:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:25:59   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:26:50   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:26:50   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 1, 18221575065, 123456, 18221575068, 0, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:26:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:26:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:26:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:26:51   INFO  [http-nio-9999-exec-4][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:26:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/show.html,pathInfo=
2017-09-26 11:26:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:26:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:26:55   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:27:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:27:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:27:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:27:01   INFO  [http-nio-9999-exec-7][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:27:01   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:27:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:27:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:27:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:27:05   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:27:19   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:27:19   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 2, 18221575065, 123456, 18221575068, 0, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:27:20   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:27:20   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:27:20   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:27:20   INFO  [http-nio-9999-exec-10][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:29:12   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:29:12   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:29:12   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:29:12   INFO  [http-nio-9999-exec-2][UserController.java:70] - 需要修改密码的权限编号:0
2017-09-26 11:29:12   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:30:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:30:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:30:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:30:12   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 
2017-09-26 11:30:21   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Z@4566a709
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@4566a709' to type 'boolean[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [B@78e952d9
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'byte[]' value '[B@78e952d9' to type 'byte[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [C@6c9b58d1
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'char[]' value '[C@6c9b58d1' to type 'char[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [D@3c6e8ffc
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'double[]' value '[D@3c6e8ffc' to type 'double[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [F@4cc03997
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'float[]' value '[F@4cc03997' to type 'float[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [I@7e0dc54c
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'int[]' value '[I@7e0dc54c' to type 'int[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [J@4866478c
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'long[]' value '[J@4866478c' to type 'long[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [S@3f3013
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'short[]' value '[S@3f3013' to type 'short[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@4dfebd02
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@4dfebd02' to type 'BigDecimal[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@27e94046
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@27e94046' to type 'BigInteger[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@5eaf4300
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@5eaf4300' to type 'Boolean[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@6681f37a
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@6681f37a' to type 'Byte[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@72ee8278
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@72ee8278' to type 'Character[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@1fe80713
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@1fe80713' to type 'Double[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@3b7bf0ad
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@3b7bf0ad' to type 'Float[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@5208ce9b
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@5208ce9b' to type 'Integer[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@54737be0
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@54737be0' to type 'Long[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@bfc2ee2
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@bfc2ee2' to type 'Short[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@6fe659a8
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@6fe659a8' to type 'String[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@7b8e3ed9
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@7b8e3ed9' to type 'Class[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@346de633
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@346de633' to type 'Date[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@3fa6c02
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@3fa6c02' to type 'Calendar[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@528fc12e
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@528fc12e' to type 'java.io.File[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@6e94a958
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@6e94a958' to type 'java.sql.Date[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@700abd0f
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@700abd0f' to type 'java.sql.Time[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@17b53834
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@17b53834' to type 'java.sql.Timestamp[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@7e773d78
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@7e773d78' to type 'java.net.URL[]'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.UserDo@1b49a911[username=<null>,password=<null>,nickname=<null>,realname=<null>,bidthday=<null>,sex=<null>,telephone=<null>,mobile=<null>,email=<null>,address=<null>,postcode=<null>,firstletter=<null>,spell=<null>,allspell=<null>,detail=<null>,wechat=<null>,qq=<null>,headpic=<null>,vcode=<null>,inventcode=<null>,logintimes=<null>,lastlogintime=<null>,lastloginip=<null>,platform=<null>,isvip=<null>,vipstarttime=<null>,vipendtime=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {username=[Ljava.lang.String;@643c6316, password=[Ljava.lang.String;@40a8d41e, nickname=[Ljava.lang.String;@323acf55, realname=[Ljava.lang.String;@2f2f3d24, bidthday=[Ljava.lang.String;@280ccf04, telephone=[Ljava.lang.String;@2e82e63f, mobile=[Ljava.lang.String;@4a26d4dd, email=[Ljava.lang.String;@1cb606a0, vipstarttime=[Ljava.lang.String;@528c9edd, vipendtime=[Ljava.lang.String;@6b8639ad, postcode=[Ljava.lang.String;@177a983c, address=[Ljava.lang.String;@3b550f75, detail=[Ljava.lang.String;@d1904b4, id=[Ljava.lang.String;@57881feb})
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '18221577777' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '18221577777' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '123456' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '123456' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '哈哈哈' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '哈哈哈' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '滕 测试' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '滕 测试' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2017-09-26' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '2017-09-26' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '18221575068' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '18221575068' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '18215750656' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '18215750656' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '111@11.com22' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '111@11.com22' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2017-09-29 11:09:12' to class 'java.util.Date'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2017-09-30 17:09:12' to class 'java.util.Date'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '123456' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '123456' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string ' 地址信地址信地址信地址信地址信' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value ' 地址信地址信地址信地址信地址信' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '   svfvsfd                             ' to class 'java.lang.String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '   svfvsfd                             ' to type 'String'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-26 11:30:22   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 11:30:56   DEBUG [http-nio-9999-exec-5][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_user(vipstarttime,adder,bidthday,password,nickname,vipendtime,email,address,sex,mobile,postcode,telephone,realname,adderid,detail,username,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,now(),now())
2017-09-26 11:30:56   DEBUG [http-nio-9999-exec-5][MysqlDialectImpl.java:88] - 执行保存的参数=[Fri Sep 29 11:09:12 CST 2017, admin, 2017-09-26, 123456, 哈哈哈, Sat Sep 30 17:09:12 CST 2017, 111@11.com22, 地址信地址信地址信地址信地址信, 2, 18215750656, 123456, 18221575068, 滕 测试, 1, svfvsfd, 18221577777]
2017-09-26 11:30:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:30:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:30:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:30:56   INFO  [http-nio-9999-exec-6][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:33:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/user/page.html,pathInfo=
2017-09-26 11:33:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:33:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:33:56   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:33:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:33:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:33:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:33:59   INFO  [http-nio-9999-exec-7][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:35:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:35:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:35:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:35:25   INFO  [http-nio-9999-exec-5][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=Mon Sep 25 12:00:00 CST 2017,start=0,limit=10
2017-09-26 11:35:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:35:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:35:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:35:30   INFO  [http-nio-9999-exec-6][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:36:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/user/page.html,pathInfo=
2017-09-26 11:36:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:00   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:36:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:36:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:07   INFO  [http-nio-9999-exec-6][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:36:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:36:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:19   INFO  [http-nio-9999-exec-10][UserController.java:70] - 需要修改密码的权限编号:0
2017-09-26 11:36:19   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:36:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:36:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:24   INFO  [http-nio-9999-exec-3][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=Sun Sep 24 12:00:00 CST 2017,start=0,limit=10
2017-09-26 11:36:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/user/status.json,pathInfo=
2017-09-26 11:36:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:36:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:32   INFO  [http-nio-9999-exec-9][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=Sun Sep 24 12:00:00 CST 2017,start=0,limit=10
2017-09-26 11:36:36   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/order.json,pathInfo=
2017-09-26 11:36:36   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:36   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:37   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:36:37   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:37   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:37   INFO  [http-nio-9999-exec-2][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=Sun Sep 24 12:00:00 CST 2017,start=0,limit=10
2017-09-26 11:36:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:36:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:40   INFO  [http-nio-9999-exec-6][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:36:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:36:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:48   INFO  [http-nio-9999-exec-1][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:36:48   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:36:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:36:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:56   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:36:59   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:36:59   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:36:59   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:36:59   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:37:06   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:37:06   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 2, 18221575065, 123456, 18221575068, 1, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:37:06   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:37:06   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:37:06   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:37:06   INFO  [http-nio-9999-exec-2][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:37:09   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:37:09   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 2, 18221575065, 123456, 18221575068, 1, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:37:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:37:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:37:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:37:11   INFO  [http-nio-9999-exec-6][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:37:17   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 11:37:17   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:37:17   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:37:17   INFO  [http-nio-9999-exec-1][UserController.java:70] - 需要修改密码的权限编号:14
2017-09-26 11:37:17   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:37:32   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/user/save.json,pathInfo=
2017-09-26 11:37:32   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:37:32   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:37:32   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 11:37:38   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:135] - 执行更新的sql=update t_user set address=? ,vipstarttime=? ,sex=? ,mobile=? ,postcode=? ,telephone=? ,isvip=? ,realname=? ,password=? ,bidthday=? ,editerid=? ,nickname=? ,vipendtime=? ,detail=? ,editer=? ,email=? ,username=?  ,edittime=now()  where id=?
2017-09-26 11:37:38   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:136] - 执行更新的参数=[dcwacdqdw
                                , 2017-09-26 11:09:22, 2, 18221575065, 123456, 18221575068, 1, 滕 测试, 123456, 2017-09-05, 1, 哈哈哈, 2017-10-07 11:10:18, cqevdqavd
                                , admin, 2412019951@qq.com, 18221579999, 14]
2017-09-26 11:37:38   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 11:37:38   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:37:38   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:37:38   INFO  [http-nio-9999-exec-9][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 11:38:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/usersubjectwrong/page.html,pathInfo=
2017-09-26 11:38:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:38:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:38:23   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:38:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/usersubjectwrong/list.json,pathInfo=
2017-09-26 11:38:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:38:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:38:30   INFO  [http-nio-9999-exec-4][UserSubjectWrongRestController.java:104] - 获取status=-1,username=,name=,start=0,limit=10
2017-09-26 11:38:39   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 11:38:39   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:38:39   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:38:39   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:38:41   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:38:41   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:38:41   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:38:41   INFO  [http-nio-9999-exec-6][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:44:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 11:44:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:44:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:44:15   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:44:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:44:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:44:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:44:17   INFO  [http-nio-9999-exec-10][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:44:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 11:44:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:44:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:44:34   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:44:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:44:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:44:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:44:37   INFO  [http-nio-9999-exec-6][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:48:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 11:48:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:48:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:48:37   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:48:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:48:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:48:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:48:41   INFO  [http-nio-9999-exec-9][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:48:47   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/order/order.json,pathInfo=
2017-09-26 11:48:47   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:48:47   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:48:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:48:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:48:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:48:51   INFO  [http-nio-9999-exec-5][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:48:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/order/show.html,pathInfo=
2017-09-26 11:48:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:48:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:48:59   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:50:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 11:50:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:50:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:50:08   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:50:11   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:50:11   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:50:11   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:50:11   INFO  [http-nio-9999-exec-1][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:50:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/show.html,pathInfo=
2017-09-26 11:50:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:50:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:50:51   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:52:06   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 11:52:06   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:52:06   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:52:06   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:52:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 11:52:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:52:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:52:08   INFO  [http-nio-9999-exec-9][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 11:52:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/order/show.html,pathInfo=
2017-09-26 11:52:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:52:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:52:11   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:52:16   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 11:52:16   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:52:16   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:52:16   INFO  [http-nio-9999-exec-3][OrderController.java:76] - 需要修改密码的权限编号:1
2017-09-26 11:52:16   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:52:27   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-26 11:52:27   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:52:27   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:52:27   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 11:52:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-26 11:52:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 11:52:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 11:52:29   INFO  [http-nio-9999-exec-8][TeacherRestController.java:99] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 13:38:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/cup/page.html,pathInfo=
2017-09-26 13:38:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 13:38:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 13:38:39   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 13:38:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 13:38:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 13:38:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 13:38:41   INFO  [http-nio-9999-exec-5][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 13:38:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/cup/edit.html,pathInfo=
2017-09-26 13:38:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 13:38:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 13:38:45   INFO  [http-nio-9999-exec-8][CupController.java:78] - 需要修改密码的权限编号:0
2017-09-26 13:38:46   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 13:54:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/cup/page.html,pathInfo=
2017-09-26 13:54:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 13:54:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 13:54:13   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 13:54:14   DEBUG [http-nio-9999-exec-8][DruidDataSource.java:1191] - skip not validate connection.
2017-09-26 13:54:32   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 13:54:32   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 13:54:32   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 13:54:32   INFO  [http-nio-9999-exec-6][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 13:55:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/cup/edit.html,pathInfo=
2017-09-26 13:55:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 13:55:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 13:55:30   INFO  [http-nio-9999-exec-10][CupController.java:78] - 需要修改密码的权限编号:0
2017-09-26 13:55:31   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/cup/bindDialog.html,pathInfo=
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:08:13   INFO  [http-nio-9999-exec-10][CupController.java:118] - 需要绑定题目的杯赛编号:1
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:08:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:08:13   INFO  [http-nio-9999-exec-3][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=1
2017-09-26 14:08:14   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =10 and s.id not in (select subjectid from t_cup_subject where cupid =?) order by s.iorder desc limit ?,?
2017-09-26 14:09:27   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/cup/page.html,pathInfo=
2017-09-26 14:09:27   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:09:27   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:09:27   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:09:40   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:09:40   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:09:40   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:09:40   INFO  [http-nio-9999-exec-9][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:09:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:09:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:09:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:09:44   INFO  [http-nio-9999-exec-3][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:09:44   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 8 )
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/cup/bindDialog.html,pathInfo=
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:09:49   INFO  [http-nio-9999-exec-10][CupController.java:118] - 需要绑定题目的杯赛编号:1
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:09:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:09:49   INFO  [http-nio-9999-exec-1][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=1
2017-09-26 14:09:49   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =10 and s.id not in (select subjectid from t_cup_subject where cupid =?) order by s.iorder desc limit ?,?
2017-09-26 14:10:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/cup/bindSubject.json,pathInfo=
2017-09-26 14:10:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:10:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:10:01   INFO  [http-nio-9999-exec-8][CupRestController.java:336] - 需要绑定的id=4,1
2017-09-26 14:10:03   ERROR [http-nio-9999-exec-8][CupRestController.java:343] - 绑定试题信息失败:PreparedStatementCallback; bad SQL grammar [update t_cup set totalexam=totalexam+? where id=?]; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'totalexam' in 'field list'
2017-09-26 14:10:04   DEBUG [http-nio-9999-exec-8][CupRestController.java:344] - org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [update t_cup set totalexam=totalexam+? where id=?]; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'totalexam' in 'field list'
2017-09-26 14:10:04   ERROR [http-nio-9999-exec-8][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only
2017-09-26 14:10:04   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: org.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:724) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:504) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:292) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at cn.javaworker.yeming.ukeli.controller.rest.CupRestController$$EnhancerBySpringCGLIB$$1bc89965.bindSubject(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-09-26 14:10:04   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-09-26 14:10:04   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:16:08   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-26 14:16:18   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 8972 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 14:16:18   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 14:16:18   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 14:16:22   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 14:16:22   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 14:16:22   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 14:16:22   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 14:16:22   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 14:16:22   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 14:16:22   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 14:16:26   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 14:16:26   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 14:16:26   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 14:16:26   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.078 seconds (JVM running for 12.014)
2017-09-26 14:16:36   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 14:16:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/cup/page.html,pathInfo=
2017-09-26 14:16:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:16:37   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:16:37   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:16:37   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 14:16:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:16:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:16:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:16:43   INFO  [http-nio-9999-exec-3][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:16:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:16:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:16:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:16:46   INFO  [http-nio-9999-exec-4][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:16:47   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 8 )
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/cup/bindDialog.html,pathInfo=
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:16:50   INFO  [http-nio-9999-exec-1][CupController.java:118] - 需要绑定题目的杯赛编号:1
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:16:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:16:50   INFO  [http-nio-9999-exec-7][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=1
2017-09-26 14:16:51   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =10 and s.id not in (select subjectid from t_cup_subject where cupid =?) order by s.iorder desc limit ?,?
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/cup/bindSubject.json,pathInfo=
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:01   INFO  [http-nio-9999-exec-6][CupRestController.java:336] - 需要绑定的id=4,1
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:01   INFO  [http-nio-9999-exec-2][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:01   INFO  [http-nio-9999-exec-10][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:01   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:01   INFO  [http-nio-9999-exec-3][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=1
2017-09-26 14:17:02   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:17:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/cup/orderserial.json,pathInfo=
2017-09-26 14:17:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/cup/orderserial.json,pathInfo=
2017-09-26 14:17:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:17:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:22   INFO  [http-nio-9999-exec-1][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:17:22   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:17:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/cup/orderserial.json,pathInfo=
2017-09-26 14:17:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:45   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:17:45   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:45   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:45   INFO  [http-nio-9999-exec-3][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:17:45   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:17:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/cup/orderserial.json,pathInfo=
2017-09-26 14:17:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:17:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:53   INFO  [http-nio-9999-exec-10][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:17:53   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:17:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/cup/edit.html,pathInfo=
2017-09-26 14:17:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:17:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:17:58   INFO  [http-nio-9999-exec-8][CupController.java:78] - 需要修改密码的权限编号:0
2017-09-26 14:17:58   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/cup/save.json,pathInfo=
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: false
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value:  
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: false
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value:  
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Z@2a42848d
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@2a42848d' to type 'boolean[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [B@374a96be
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'byte[]' value '[B@374a96be' to type 'byte[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [C@3f0d6b58
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'char[]' value '[C@3f0d6b58' to type 'char[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [D@43da669e
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'double[]' value '[D@43da669e' to type 'double[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [F@7d02f484
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'float[]' value '[F@7d02f484' to type 'float[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [I@1e9e62fc
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'int[]' value '[I@1e9e62fc' to type 'int[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [J@4a9d9ddc
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'long[]' value '[J@4a9d9ddc' to type 'long[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [S@5a63ec87
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'short[]' value '[S@5a63ec87' to type 'short[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@30af959b
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@30af959b' to type 'BigDecimal[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@7b1e8de8
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@7b1e8de8' to type 'BigInteger[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@721318c5
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@721318c5' to type 'Boolean[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@7c60a039
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@7c60a039' to type 'Byte[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@4a511d04
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@4a511d04' to type 'Character[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@30c7e331
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@30c7e331' to type 'Double[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@25627803
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@25627803' to type 'Float[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@1cc025f7
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@1cc025f7' to type 'Integer[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@263d563
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@263d563' to type 'Long[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@959df
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@959df' to type 'Short[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@10aa5780
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@10aa5780' to type 'String[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@54551667
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@54551667' to type 'Class[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@1ed86a93
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@1ed86a93' to type 'Date[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@22918cfd
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@22918cfd' to type 'Calendar[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@3da3546
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@3da3546' to type 'java.io.File[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@630033ec
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@630033ec' to type 'java.sql.Date[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@352abaa8
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@352abaa8' to type 'java.sql.Time[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@5f41a113
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@5f41a113' to type 'java.sql.Timestamp[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@1eef23fe
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@1eef23fe' to type 'java.net.URL[]'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.CupDo@1689bc7f[name=<null>,gradeid=<null>,times=<null>,score=<null>,totalsubject=<null>,remark=<null>,ext_grade=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {gradeid=[Ljava.lang.String;@31dc78b8, name=[Ljava.lang.String;@5c2e4300, times=[Ljava.lang.String;@4da52cdd, score=[Ljava.lang.String;@ed779f4, remark=[Ljava.lang.String;@5c9cc92e, file=[Ljava.lang.String;@7204a7fe, id=[Ljava.lang.String;@1623aea7})
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '6' to class 'java.lang.Long'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '6' to type 'Long'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '6'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '第15届二年级中环杯初赛（2015年）' to class 'java.lang.String'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '第15届二年级中环杯初赛（2015年）' to type 'String'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '90' to class 'java.lang.Integer'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '90' to type 'Integer'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '90'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '100' to class 'java.lang.Integer'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '100' to type 'Integer'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '100'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '<p><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span></p>                           ' to class 'java.lang.String'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '<p><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span></p>                           ' to type 'String'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_cup(gradeid,remark,adder,score,times,adderid,name,addtime,edittime) VALUES(?,?,?,?,?,?,?,now(),now())
2017-09-26 14:20:36   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:88] - 执行保存的参数=[6, <p><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span><span style="text-align: right;">杯赛介绍</span></p>, admin, 100, 90, 1, 第15届二年级中环杯初赛（2015年）]
2017-09-26 14:20:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:20:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:37   INFO  [http-nio-9999-exec-3][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:20:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:20:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:39   INFO  [http-nio-9999-exec-2][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=2
2017-09-26 14:20:39   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-26 14:20:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/cup/bindDialog.html,pathInfo=
2017-09-26 14:20:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:40   INFO  [http-nio-9999-exec-10][CupController.java:118] - 需要绑定题目的杯赛编号:2
2017-09-26 14:20:40   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:20:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:20:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:41   INFO  [http-nio-9999-exec-4][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=2
2017-09-26 14:20:41   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =10 and s.id not in (select subjectid from t_cup_subject where cupid =?) order by s.iorder desc limit ?,?
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/cup/bindSubject.json,pathInfo=
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:48   INFO  [http-nio-9999-exec-1][CupRestController.java:336] - 需要绑定的id=4,1
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:48   INFO  [http-nio-9999-exec-7][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:48   INFO  [http-nio-9999-exec-5][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=2
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:48   INFO  [http-nio-9999-exec-9][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=2
2017-09-26 14:20:48   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:20:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:20:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:20:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:20:58   INFO  [http-nio-9999-exec-6][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:20:58   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:21:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/cup/page.html,pathInfo=
2017-09-26 14:21:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:17   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:21:18   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:21:18   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:18   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:18   INFO  [http-nio-9999-exec-9][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:21:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-26 14:21:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:34   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:21:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-26 14:21:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:35   INFO  [http-nio-9999-exec-1][SubjectRestController.java:128] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-26 14:21:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/show.html,pathInfo=
2017-09-26 14:21:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:42   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:21:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/show.html,pathInfo=
2017-09-26 14:21:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:52   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:21:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/show.html,pathInfo=
2017-09-26 14:21:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:21:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:21:59   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:22:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:09   INFO  [http-nio-9999-exec-9][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=2
2017-09-26 14:22:10   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:22:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:14   INFO  [http-nio-9999-exec-4][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:22:15   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:22:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:21   INFO  [http-nio-9999-exec-10][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=2
2017-09-26 14:22:21   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:22:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:26   INFO  [http-nio-9999-exec-1][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:22:28   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5, 8 )
2017-09-26 14:22:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/cup/cancelBind.json,pathInfo=
2017-09-26 14:22:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:34   INFO  [http-nio-9999-exec-7][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:34   INFO  [http-nio-9999-exec-3][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:34   INFO  [http-nio-9999-exec-6][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=2
2017-09-26 14:22:35   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4, 5 )
2017-09-26 14:22:39   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/cup/cancelBind.json,pathInfo=
2017-09-26 14:22:39   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:39   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:40   INFO  [http-nio-9999-exec-10][CupRestController.java:115] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:40   INFO  [http-nio-9999-exec-1][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:40   INFO  [http-nio-9999-exec-5][SubjectRestController.java:332] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=0,cupId=2
2017-09-26 14:22:41   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:22:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:46   INFO  [http-nio-9999-exec-7][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=2
2017-09-26 14:22:47   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:22:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:22:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:22:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:22:50   INFO  [http-nio-9999-exec-2][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:22:51   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:23:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/cup/orderserial.json,pathInfo=
2017-09-26 14:23:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:23:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:23:25   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/cup/orderserial.json,pathInfo=
2017-09-26 14:23:25   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:23:25   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:23:25   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-26 14:23:25   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:23:25   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:23:25   INFO  [http-nio-9999-exec-8][SubjectRestController.java:225] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-26 14:23:26   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 4 )
2017-09-26 14:23:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-26 14:23:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:23:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:23:51   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:23:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-26 14:23:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:23:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:23:54   INFO  [http-nio-9999-exec-2][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-26 14:23:58   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-26 14:23:58   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:23:58   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:23:58   INFO  [http-nio-9999-exec-10][SubjectRestController.java:175] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-26 14:23:59   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 4 )
2017-09-26 14:24:03   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-26 14:24:03   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:24:03   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:24:03   INFO  [http-nio-9999-exec-6][SubjectRestController.java:175] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-26 14:24:03   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10 )
2017-09-26 14:24:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-26 14:24:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:24:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:24:06   INFO  [http-nio-9999-exec-3][SubjectRestController.java:175] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-26 14:24:06   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 4 )
2017-09-26 14:24:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-26 14:24:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:24:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:24:38   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:24:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-26 14:24:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:24:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:24:40   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-26 14:24:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-26 14:24:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:24:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:24:42   INFO  [http-nio-9999-exec-7][KnowledgeController.java:59] - 需要修改knowledge的id:0
2017-09-26 14:24:43   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:26:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-26 14:26:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:26:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:26:28   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:26:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-26 14:26:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:26:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:26:30   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-26 14:27:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-26 14:27:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:27:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:27:16   INFO  [http-nio-9999-exec-7][KnowledgeController.java:59] - 需要修改knowledge的id:0
2017-09-26 14:27:17   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:27:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/clazz/page.html,pathInfo=
2017-09-26 14:27:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:27:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:27:49   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:27:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-26 14:27:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:27:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:27:51   INFO  [http-nio-9999-exec-8][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-26 14:27:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-26 14:27:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:27:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:27:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-26 14:27:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:27:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:27:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 14:27:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:27:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:27:59   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:28:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:00   INFO  [http-nio-9999-exec-6][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:28:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:28:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:10   INFO  [http-nio-9999-exec-9][OrderController.java:76] - 需要修改密码的权限编号:0
2017-09-26 14:28:11   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:28:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:14   INFO  [http-nio-9999-exec-8][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/26 12:00:00 - 2017/09/26 11:59:59,productid=,paystatus=,start=0,limit=10
2017-09-26 14:28:15   ERROR [http-nio-9999-exec-8][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:15   DEBUG [http-nio-9999-exec-8][OrderRestController.java:147] - java.lang.ClassCastException: java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:17   INFO  [http-nio-9999-exec-2][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/26 12:00:00 - 2017/09/26 11:59:59,productid=,paystatus=,start=0,limit=10
2017-09-26 14:28:17   ERROR [http-nio-9999-exec-2][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:17   DEBUG [http-nio-9999-exec-2][OrderRestController.java:147] - java.lang.ClassCastException: java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:26   INFO  [http-nio-9999-exec-7][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/26 12:00:00 - 2017/09/26 11:59:59,productid=,paystatus=,start=0,limit=10
2017-09-26 14:28:26   ERROR [http-nio-9999-exec-7][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:26   DEBUG [http-nio-9999-exec-7][OrderRestController.java:147] - java.lang.ClassCastException: java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:41   INFO  [http-nio-9999-exec-1][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/23 12:00:00 - 2017/09/26 11:59:59,productid=,paystatus=,start=0,limit=10
2017-09-26 14:28:41   ERROR [http-nio-9999-exec-1][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:41   DEBUG [http-nio-9999-exec-1][OrderRestController.java:147] - java.lang.ClassCastException: java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:47   INFO  [http-nio-9999-exec-3][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/22 12:00:00 - 2017/09/26 11:59:59,productid=,paystatus=,start=0,limit=10
2017-09-26 14:28:47   ERROR [http-nio-9999-exec-3][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:47   DEBUG [http-nio-9999-exec-3][OrderRestController.java:147] - java.lang.ClassCastException: java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:53   INFO  [http-nio-9999-exec-10][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/22 12:00:00 - 2017/09/26 11:59:59,productid=1,paystatus=,start=0,limit=10
2017-09-26 14:28:53   ERROR [http-nio-9999-exec-10][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:53   DEBUG [http-nio-9999-exec-10][OrderRestController.java:147] - java.lang.ClassCastException: java.util.Date cannot be cast to java.lang.String
2017-09-26 14:28:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:28:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:28:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:28:58   INFO  [http-nio-9999-exec-4][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:29:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:29:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:29:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:29:01   INFO  [http-nio-9999-exec-7][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=1,paystatus=,start=0,limit=10
2017-09-26 14:35:22   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-26 14:35:38   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7580 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 14:35:38   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 14:35:38   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 14:35:43   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 14:35:43   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 14:35:43   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 14:35:43   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 14:35:43   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 14:35:43   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 14:35:43   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 14:35:48   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 14:35:48   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 14:35:48   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 14:35:48   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.267 seconds (JVM running for 14.741)
2017-09-26 14:36:20   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 14:36:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 14:36:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:36:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:36:22   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:36:22   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 14:36:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:36:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:36:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:36:26   INFO  [http-nio-9999-exec-5][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:37:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:37:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:37:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:37:08   INFO  [http-nio-9999-exec-10][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/23 12:00:00 - 2017/09/24 11:59:00,productid=,paystatus=,start=0,limit=10
2017-09-26 14:38:04   ERROR [http-nio-9999-exec-10][OrderRestController.java:146] - 获取订单产品分页发生错误:java.util.Date cannot be cast to java.lang.String
2017-09-26 14:38:32   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-26 14:38:56   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 4492 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 14:38:56   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 14:38:56   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 14:39:00   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 14:39:00   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 14:39:00   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 14:39:00   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 14:39:00   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 14:39:00   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 14:39:00   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 14:39:04   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 14:39:04   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 14:39:04   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 14:39:04   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.338 seconds (JVM running for 12.206)
2017-09-26 14:39:15   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 14:39:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 14:39:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:39:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:39:17   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:39:17   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 14:39:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:39:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:39:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:39:21   INFO  [http-nio-9999-exec-3][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:39:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:39:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:39:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:39:41   INFO  [http-nio-9999-exec-4][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/23 12:00:00 - 2017/09/24 11:59:00,productid=,paystatus=,start=0,limit=10
2017-09-26 14:39:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:39:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:39:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:39:48   INFO  [http-nio-9999-exec-2][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/09 12:00:00 - 2017/09/24 11:59:00,productid=,paystatus=,start=0,limit=10
2017-09-26 14:39:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:39:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:39:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:39:59   INFO  [http-nio-9999-exec-1][OrderController.java:76] - 需要修改密码的权限编号:0
2017-09-26 14:40:00   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:40:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:40:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:04   INFO  [http-nio-9999-exec-10][OrderController.java:76] - 需要修改密码的权限编号:1
2017-09-26 14:40:07   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:40:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:40:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:40:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:15   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:40:15   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_order set amount=? ,productid=? ,orderstatus=? ,totalprice=? ,paytime=? ,ordertime=? ,totalmarketprice=? ,payorder=? ,editerid=? ,ordernumber=? ,nickname=? ,paystatus=? ,productname=? ,payprice=? ,detail=? ,editer=? ,paytype=? ,username=?  ,edittime=now()  where id=?
2017-09-26 14:40:15   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[11, 1, 1, 323, 2017-9-15 21:47:22, 2017-09-26 14:40:15.428, 1212, 1232143134, 1, 10007240, 昵称, 1, 年会员, 1212, 备注备注备注备注备注
                                 , admin, 1, 18221575065, 1]
2017-09-26 14:40:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:40:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:16   INFO  [http-nio-9999-exec-9][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/09 12:00:00 - 2017/09/24 11:59:00,productid=,paystatus=,start=0,limit=10
2017-09-26 14:40:20   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:40:20   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:135] - 执行更新的sql=update t_order set amount=? ,productid=? ,orderstatus=? ,totalprice=? ,paytime=? ,ordertime=? ,totalmarketprice=? ,payorder=? ,editerid=? ,ordernumber=? ,nickname=? ,paystatus=? ,productname=? ,payprice=? ,detail=? ,editer=? ,paytype=? ,username=?  ,edittime=now()  where id=?
2017-09-26 14:40:20   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:136] - 执行更新的参数=[11, 1, 1, 323, 2017-9-15 21:47:22, 2017-09-26 14:40:20.629, 1212, 1232143134, 1, 10007240, 昵称, 1, 年会员, 1212, 备注备注备注备注备注
                                 , admin, 1, 18221575065, 1]
2017-09-26 14:40:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:40:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:20   INFO  [http-nio-9999-exec-4][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/09 12:00:00 - 2017/09/24 11:59:00,productid=,paystatus=,start=0,limit=10
2017-09-26 14:40:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:40:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:23   INFO  [http-nio-9999-exec-10][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:40:56   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:40:56   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:40:56   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:40:56   INFO  [http-nio-9999-exec-5][OrderController.java:76] - 需要修改密码的权限编号:1
2017-09-26 14:41:00   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:43:16   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-26 14:43:27   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5372 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-26 14:43:27   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-26 14:43:27   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-26 14:43:30   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-26 14:43:30   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-26 14:43:30   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-26 14:43:30   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-26 14:43:30   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-26 14:43:30   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-26 14:43:31   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-26 14:43:37   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-26 14:43:37   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-26 14:43:37   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-26 14:43:37   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.037 seconds (JVM running for 13.444)
2017-09-26 14:44:15   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-26 14:44:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/page.html,pathInfo=
2017-09-26 14:44:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:44:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:44:16   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:44:16   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-26 14:44:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:44:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:44:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:44:28   INFO  [http-nio-9999-exec-2][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:44:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:44:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:44:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:44:38   INFO  [http-nio-9999-exec-4][OrderController.java:76] - 需要修改密码的权限编号:1
2017-09-26 14:44:50   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:44:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:44:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:44:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:44:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:44:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:44:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:45:02   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:45:02   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:135] - 执行更新的sql=update t_order set amount=? ,productid=? ,orderstatus=? ,totalprice=? ,paytime=? ,totalmarketprice=? ,payorder=? ,editerid=? ,ordernumber=? ,nickname=? ,paystatus=? ,productname=? ,payprice=? ,detail=? ,editer=? ,paytype=? ,username=?  ,edittime=now()  where id=?
2017-09-26 14:45:02   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:136] - 执行更新的参数=[10, 1, 1, 323, 2017-9-26 14:40:21, 1212, 1232143134, 1, 10007240, 昵称, 1, 年会员, 1212, 备注备注备注备注备注
                                 , admin, 1, 18221575065, 1]
2017-09-26 14:45:03   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:45:03   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:45:03   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:45:03   INFO  [http-nio-9999-exec-9][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:45:10   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:45:10   DEBUG [http-nio-9999-exec-5][MysqlDialectImpl.java:135] - 执行更新的sql=update t_order set amount=? ,productid=? ,orderstatus=? ,totalprice=? ,paytime=? ,totalmarketprice=? ,payorder=? ,editerid=? ,ordernumber=? ,nickname=? ,paystatus=? ,productname=? ,payprice=? ,detail=? ,editer=? ,paytype=? ,username=?  ,edittime=now()  where id=?
2017-09-26 14:45:10   DEBUG [http-nio-9999-exec-5][MysqlDialectImpl.java:136] - 执行更新的参数=[10, 1, 1, 323, 2017-9-26 14:40:21, 1212, 1232143134, 1, 10007240, 昵称, 1, 年会员, 1212, 备注备注备注备注备注
                                 , admin, 1, 18221575065, 1]
2017-09-26 14:45:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:45:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:45:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:45:10   INFO  [http-nio-9999-exec-6][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:45:19   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:45:19   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:45:19   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:45:19   INFO  [http-nio-9999-exec-3][OrderController.java:76] - 需要修改密码的权限编号:0
2017-09-26 14:45:24   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:46:13   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:46:13   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:46:13   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Z@3c3fe1a3
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@3c3fe1a3' to type 'boolean[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [B@6d1f04ec
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'byte[]' value '[B@6d1f04ec' to type 'byte[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [C@4209808c
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'char[]' value '[C@4209808c' to type 'char[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [D@e9fe336
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'double[]' value '[D@e9fe336' to type 'double[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [F@4d6e39bf
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'float[]' value '[F@4d6e39bf' to type 'float[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [I@58c36c9a
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'int[]' value '[I@58c36c9a' to type 'int[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [J@56c09aee
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'long[]' value '[J@56c09aee' to type 'long[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [S@27375553
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'short[]' value '[S@27375553' to type 'short[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@1ba823cb
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@1ba823cb' to type 'BigDecimal[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@a09dd85
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@a09dd85' to type 'BigInteger[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@4de5431b
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@4de5431b' to type 'Boolean[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@306d2f2d
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@306d2f2d' to type 'Byte[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@c4775cd
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@c4775cd' to type 'Character[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@405d7758
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@405d7758' to type 'Double[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@742c1165
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@742c1165' to type 'Float[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@47d0ddab
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@47d0ddab' to type 'Integer[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@72b7000
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@72b7000' to type 'Long[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@4ec5fb53
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@4ec5fb53' to type 'Short[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@461f571d
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@461f571d' to type 'String[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@377f046
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@377f046' to type 'Class[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@62098c18
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@62098c18' to type 'Date[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@5d814c
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@5d814c' to type 'Calendar[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@12538617
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@12538617' to type 'java.io.File[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@7655aaf5
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@7655aaf5' to type 'java.sql.Date[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@61137a84
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@61137a84' to type 'java.sql.Time[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@50b6d69e
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@50b6d69e' to type 'java.sql.Timestamp[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@34394e6e
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@34394e6e' to type 'java.net.URL[]'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.OrderDo@52c394a7[ordernumber=<null>,userid=<null>,username=<null>,nickname=<null>,productid=<null>,productname=<null>,amount=<null>,totalmarketprice=<null>,totalprice=<null>,totalvipprice=<null>,payprice=<null>,couponprice=<null>,ordertime=<null>,orderstatus=<null>,paystatus=<null>,paytime=<null>,paytype=<null>,payorder=<null>,detail=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {ordernumber=[Ljava.lang.String;@6a9c3b4b, username=[Ljava.lang.String;@3dfd41dd, nickname=[Ljava.lang.String;@1a22622, productid=[Ljava.lang.String;@35d95aea, orderstatus=[Ljava.lang.String;@3e146979, paystatus=[Ljava.lang.String;@69b034cf, totalmarketprice=[Ljava.lang.String;@79339ced, totalprice=[Ljava.lang.String;@642972b, payprice=[Ljava.lang.String;@1b80693b, paytime=[Ljava.lang.String;@737e20c8, paytype=[Ljava.lang.String;@164f0ebe, amount=[Ljava.lang.String;@4a62893, payorder=[Ljava.lang.String;@1cf7408d, detail=[Ljava.lang.String;@1e0d5bbb, id=[Ljava.lang.String;@70d98c3a})
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '23124341' to class 'java.lang.String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '23124341' to type 'String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '18221577777' to class 'java.lang.String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '18221577777' to type 'String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string 'ASCSAC' to class 'java.lang.String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value 'ASCSAC' to type 'String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Integer value '1'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '1'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '1212' to class 'java.lang.Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '1212' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Integer value '1212'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '24324' to class 'java.lang.Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '24324' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Integer value '24324'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2424' to class 'java.lang.Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '2424' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Integer value '2424'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2017-09-26 14:09:58' to class 'java.util.Date'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2' to class 'java.lang.Short'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '2' to type 'Short'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '2'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '2' to class 'java.lang.Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '2' to type 'Integer'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Integer value '2'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '42323' to class 'java.lang.String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '42323' to type 'String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '                    ascsacdsc            ' to class 'java.lang.String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '                    ascsacdsc            ' to type 'String'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:46:15   ERROR [http-nio-9999-exec-5][OrderRestController.java:208] - 新增一个订单产品信息发生错误:null
2017-09-26 14:46:15   DEBUG [http-nio-9999-exec-5][OrderRestController.java:209] - java.lang.NullPointerException
2017-09-26 14:47:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:47:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:47:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.OrderDo@96527be[ordernumber=<null>,userid=<null>,username=<null>,nickname=<null>,productid=<null>,productname=<null>,amount=<null>,totalmarketprice=<null>,totalprice=<null>,totalvipprice=<null>,payprice=<null>,couponprice=<null>,ordertime=<null>,orderstatus=<null>,paystatus=<null>,paytime=<null>,paytype=<null>,payorder=<null>,detail=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {ordernumber=[Ljava.lang.String;@ba4ac00, username=[Ljava.lang.String;@5ab28f09, nickname=[Ljava.lang.String;@71e6f21e, productid=[Ljava.lang.String;@519e634b, orderstatus=[Ljava.lang.String;@7ff411d4, paystatus=[Ljava.lang.String;@31f013e4, totalmarketprice=[Ljava.lang.String;@774071c6, totalprice=[Ljava.lang.String;@55e6c05e, payprice=[Ljava.lang.String;@a430187, paytime=[Ljava.lang.String;@3b1d4c18, paytype=[Ljava.lang.String;@4fa7d4fc, amount=[Ljava.lang.String;@2c201966, payorder=[Ljava.lang.String;@3efd7a5c, detail=[Ljava.lang.String;@6fd18c17, id=[Ljava.lang.String;@1e20b525})
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '23124341' to class 'java.lang.String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '23124341' to type 'String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '18221577777' to class 'java.lang.String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '18221577777' to type 'String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string 'ASCSAC' to class 'java.lang.String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value 'ASCSAC' to type 'String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Long'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Long'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '1'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '1'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '1'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '1212' to class 'java.lang.Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '1212' to type 'Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '1212'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '24324' to class 'java.lang.Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '24324' to type 'Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '24324'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '2424' to class 'java.lang.Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '2424' to type 'Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '2424'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '2017-09-26 14:09:58' to class 'java.util.Date'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '2' to class 'java.lang.Short'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '2' to type 'Short'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '2'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '2' to class 'java.lang.Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '2' to type 'Integer'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Integer value '2'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '42323' to class 'java.lang.String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '42323' to type 'String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '                    ascsacdsc            ' to class 'java.lang.String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '                    ascsacdsc            ' to type 'String'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_order(orderstatus,productid,adder,totalmarketprice,userid,nickname,ordernumber,productname,amount,totalprice,paytime,ordertime,payorder,adderid,paystatus,detail,payprice,paytype,username,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,now(),now())
2017-09-26 14:47:10   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:88] - 执行保存的参数=[1, 1, admin, 1212, 15, ASCSAC, 23124341, 年会员, 2, 24324, Tue Sep 26 14:09:58 CST 2017, Tue Sep 26 14:47:10 CST 2017, 42323, 1, 1, ascsacdsc, 2424, 2, 18221577777]
2017-09-26 14:47:11   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:47:11   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:47:11   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:47:11   INFO  [http-nio-9999-exec-3][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:48:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:48:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:48:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:48:27   INFO  [http-nio-9999-exec-2][OrderController.java:76] - 需要修改密码的权限编号:3
2017-09-26 14:48:31   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:49:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/order/save.json,pathInfo=
2017-09-26 14:49:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:14   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-26 14:49:14   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_order set amount=? ,productid=? ,orderstatus=? ,totalprice=? ,paytime=? ,totalmarketprice=? ,payorder=? ,editerid=? ,ordernumber=? ,nickname=? ,paystatus=? ,productname=? ,payprice=? ,detail=? ,editer=? ,paytype=? ,username=?  ,edittime=now()  where id=?
2017-09-26 14:49:14   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[2, 1, 1, 24324, 2017-9-26 14:47:11, 1212, 42323, 1, 23124341, ASCSAC, 1, 年会员, 2424, ascsacdsc
                                 , admin, 2, 18221577777, 3]
2017-09-26 14:49:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:49:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:15   INFO  [http-nio-9999-exec-10][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:49:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/order/status.json,pathInfo=
2017-09-26 14:49:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:49:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:20   INFO  [http-nio-9999-exec-9][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:49:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/order/edit.html,pathInfo=
2017-09-26 14:49:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:30   INFO  [http-nio-9999-exec-5][OrderController.java:76] - 需要修改密码的权限编号:0
2017-09-26 14:49:31   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:49:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:49:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:34   INFO  [http-nio-9999-exec-3][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/26 12:00:00 - 2017/09/26 11:59:59,productid=,paystatus=,start=0,limit=10
2017-09-26 14:49:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:49:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:49:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:49:39   INFO  [http-nio-9999-exec-1][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=,productid=,paystatus=,start=0,limit=10
2017-09-26 14:50:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/order/list.json,pathInfo=
2017-09-26 14:50:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:50:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:50:16   INFO  [http-nio-9999-exec-2][OrderRestController.java:116] - 获取订单产品status=-1,username=,ordernumber=,reservationtime=2017/09/26 12:00:00 - 2017/09/27 11:59:00,productid=,paystatus=,start=0,limit=10
2017-09-26 14:50:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/usersubjectwrong/page.html,pathInfo=
2017-09-26 14:50:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:50:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:50:34   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:50:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/usersubjectwrong/list.json,pathInfo=
2017-09-26 14:50:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:50:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:50:36   INFO  [http-nio-9999-exec-9][UserSubjectWrongRestController.java:104] - 获取status=-1,username=,name=,start=0,limit=10
2017-09-26 14:50:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/page.html,pathInfo=
2017-09-26 14:50:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:50:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:50:44   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:50:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 14:50:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:50:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:50:47   INFO  [http-nio-9999-exec-1][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=null,start=0,limit=10
2017-09-26 14:53:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/user/edit.html,pathInfo=
2017-09-26 14:53:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:53:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:53:03   INFO  [http-nio-9999-exec-5][UserController.java:70] - 需要修改密码的权限编号:0
2017-09-26 14:53:03   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:53:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 14:53:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:53:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:53:06   INFO  [http-nio-9999-exec-10][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=Tue Sep 26 12:00:00 CST 2017,start=0,limit=10
2017-09-26 14:53:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/user/list.json,pathInfo=
2017-09-26 14:53:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:53:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:53:14   INFO  [http-nio-9999-exec-1][UserRestController.java:119] - 获取用户信息status=-1,username=,nickname=,isvip=,startTime=Mon Sep 25 12:00:00 CST 2017,start=0,limit=10
2017-09-26 14:53:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/product/page.html,pathInfo=
2017-09-26 14:53:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:53:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:53:29   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-26 14:53:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/product/list.json,pathInfo=
2017-09-26 14:53:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-26 14:53:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-26 14:53:32   INFO  [http-nio-9999-exec-5][ProductRestController.java:99] - 获取产品名称status=-1,关键字=,start=0,limit=10
2017-09-26 16:45:29   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
