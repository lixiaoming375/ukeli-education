2017-09-12 09:31:44   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7184 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-12 09:31:45   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 09:31:45   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-12 09:31:52   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-12 09:31:52   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 09:31:52   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-12 09:31:52   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-12 09:31:52   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-12 09:31:52   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-12 09:31:52   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.1548191035772964181.9999/
2017-09-12 09:31:56   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-12 09:31:56   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-12 09:31:56   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-12 09:31:56   INFO  [main][StartupInfoLogger.java:57] - Started Application in 14.504 seconds (JVM running for 16.789)
2017-09-12 09:39:09   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-12 09:39:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-12 09:39:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:39:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :-1
2017-09-12 09:39:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:96] - path=http://localhost:9999,loginUrl=login.html
2017-09-12 09:39:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-09-12 09:39:09   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：null
2017-09-12 09:39:12   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/getvm.html,pathInfo=
2017-09-12 09:39:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/login.json,pathInfo=
2017-09-12 09:39:21   INFO  [http-nio-9999-exec-10][CommonController.java:137] - 后台管理员开始登陆:admin
2017-09-12 09:39:21   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：eC61kF6jptw=
2017-09-12 09:39:21   INFO  [http-nio-9999-exec-10][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-12 09:39:23   INFO  [http-nio-9999-exec-10][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-09-12 09:39:23   INFO  [http-nio-9999-exec-10][CommonController.java:170] - 用户登录成功
2017-09-12 09:39:23   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: false
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value:  
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: false
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value:  
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Z@61e61e6d
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@61e61e6d' to type 'boolean[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [B@5d66fa41
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'byte[]' value '[B@5d66fa41' to type 'byte[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [C@1173bc00
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'char[]' value '[C@1173bc00' to type 'char[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [D@55401f34
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'double[]' value '[D@55401f34' to type 'double[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [F@4847687
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'float[]' value '[F@4847687' to type 'float[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [I@6eda20a4
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'int[]' value '[I@6eda20a4' to type 'int[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [J@624502c3
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'long[]' value '[J@624502c3' to type 'long[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [S@37a90800
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'short[]' value '[S@37a90800' to type 'short[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@103e703c
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@103e703c' to type 'BigDecimal[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@6547f1ad
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@6547f1ad' to type 'BigInteger[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@790d30fb
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@790d30fb' to type 'Boolean[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@79f58f58
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@79f58f58' to type 'Byte[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@7bccba66
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@7bccba66' to type 'Character[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@23be860c
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@23be860c' to type 'Double[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@609cdb76
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@609cdb76' to type 'Float[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@6333eb25
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@6333eb25' to type 'Integer[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@71f14bf8
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@71f14bf8' to type 'Long[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@6d47bb5d
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@6d47bb5d' to type 'Short[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@621e89cd
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@621e89cd' to type 'String[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@7b52d887
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@7b52d887' to type 'Class[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@2b9f19e3
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@2b9f19e3' to type 'Date[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@792a0051
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@792a0051' to type 'Calendar[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@47d23a7b
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@47d23a7b' to type 'java.io.File[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@64d1af4e
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@64d1af4e' to type 'java.sql.Date[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@2d00b7c5
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@2d00b7c5' to type 'java.sql.Time[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@96e5532
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@96e5532' to type 'java.sql.Timestamp[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@60b7099c
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@60b7099c' to type 'java.net.URL[]'
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-09-12 09:39:24   DEBUG [http-nio-9999-exec-10][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-09-12 09:39:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-12 09:39:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:39:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:39:25   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:39:29   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 09:39:29   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:39:29   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:39:29   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:39:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:39:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:39:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:39:30   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:39:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:39:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:39:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:39:34   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:39:35   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 09:39:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 09:39:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:39:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 09:41:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:41:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:11   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:41:12   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:41:12   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:41:12   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:12   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:41:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:41:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:41:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:33   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:41:34   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9 )
2017-09-12 09:41:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 09:41:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:41:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 09:41:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:41:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:51   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:41:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:41:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:41:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:41:57   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:42:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:42:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:00   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:42:00   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 9 )
2017-09-12 09:42:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 09:42:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 09:42:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 09:42:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:18   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:42:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 09:42:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:20   INFO  [http-nio-9999-exec-2][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 09:42:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 09:42:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:24   INFO  [http-nio-9999-exec-8][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 09:42:24   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 8, 4, 5 )
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:27   INFO  [http-nio-9999-exec-1][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:27   INFO  [http-nio-9999-exec-3][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/bindSubject.json,pathInfo=
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:33   INFO  [http-nio-9999-exec-4][ExamRestController.java:272] - 需要绑定的id=10,7
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:33   INFO  [http-nio-9999-exec-6][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:33   INFO  [http-nio-9999-exec-5][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:33   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:33   INFO  [http-nio-9999-exec-7][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 09:42:34   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 1, 8, 4, 5 )
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:41   INFO  [http-nio-9999-exec-2][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:41   INFO  [http-nio-9999-exec-8][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:41   INFO  [http-nio-9999-exec-1][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 09:42:42   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 8, 4, 5 )
2017-09-12 09:42:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 09:42:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:42:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:42:47   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:43:12   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:43:12   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:12   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:12   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:43:22   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:43:22   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:22   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:22   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:43:22   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 9 )
2017-09-12 09:43:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 09:43:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:26   INFO  [http-nio-9999-exec-1][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 09:43:26   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:43:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:43:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:28   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 09:43:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 09:43:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:33   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:248] - 需要绑定的id=10,3,1
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:34   INFO  [http-nio-9999-exec-6][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:34   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:34   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:34   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:43:35   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 3, 10, 7, 5, 8, 9 )
2017-09-12 09:43:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 09:43:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:49   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:49   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:49   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:43:49   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 10, 7, 5, 8, 9 )
2017-09-12 09:43:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 09:43:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:43:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:43:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:43:59   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 09:44:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 09:44:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:44:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:44:00   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 09:44:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:44:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:44:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:44:00   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 09:44:00   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 7, 5, 8, 9 )
2017-09-12 09:44:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 09:44:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:44:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:44:04   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 09:44:04   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:26   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:26   INFO  [http-nio-9999-exec-1][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:31   INFO  [http-nio-9999-exec-9][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:31   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:37   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:37   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:47   INFO  [http-nio-9999-exec-5][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:46:47   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:46:47   INFO  [http-nio-9999-exec-10][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:53:57   INFO  [http-nio-9999-exec-2][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 09:53:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 09:53:57   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:12:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:12:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:09   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:12:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:12:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:10   INFO  [http-nio-9999-exec-6][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:12:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 10:12:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:12   INFO  [http-nio-9999-exec-3][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 10:12:12   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 8, 4, 5 )
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:15   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:12:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:17   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:12:18   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 7, 5, 8, 9 )
2017-09-12 10:12:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:20   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:12:20   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:12:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:30   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:12:31   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:12:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:33   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:12:33   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 7, 5, 8, 9 )
2017-09-12 10:12:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:42   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:12:42   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:12:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:45   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:12:45   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:12:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:12:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:12:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:12:58   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:12:59   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:13:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:13:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:02   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:13:02   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 7, 5, 8, 9 )
2017-09-12 10:13:07   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:13:07   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:07   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:13:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:12   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:13:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:13:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:13   INFO  [http-nio-9999-exec-2][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:15   INFO  [http-nio-9999-exec-8][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:15   INFO  [http-nio-9999-exec-1][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 10:13:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:13:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:24   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:13:25   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:13:25   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:25   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:25   INFO  [http-nio-9999-exec-4][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:13:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 10:13:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:27   INFO  [http-nio-9999-exec-3][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 10:13:27   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 8, 4, 5 )
2017-09-12 10:13:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:13:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:13:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:13:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:13:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:14:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:14:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:14:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:14:59   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:15:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:15:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:15:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:15:00   INFO  [http-nio-9999-exec-7][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:15:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 10:15:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:15:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:15:02   INFO  [http-nio-9999-exec-2][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 10:15:03   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 8, 4, 5 )
2017-09-12 10:15:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:15:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:15:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:15:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:15:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:15:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:15:59   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:16:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:16:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:16:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:16:01   INFO  [http-nio-9999-exec-6][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:16:02   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 10:16:02   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:16:02   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:16:02   INFO  [http-nio-9999-exec-4][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 10:16:03   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 8, 5 )
2017-09-12 10:16:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:16:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:16:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:16:18   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:16:18   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:16:18   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:16:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:16:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:16:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:19:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:13   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:19:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:19:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:15   INFO  [http-nio-9999-exec-7][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:19:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 10:19:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:22   INFO  [http-nio-9999-exec-4][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 10:19:23   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 8 )
2017-09-12 10:19:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 10:19:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:19:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:44   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:19:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:19:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:46   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:19:49   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:19:49   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:49   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:19:49   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:19:49   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 7, 8, 9 )
2017-09-12 10:19:52   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:19:52   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:19:52   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:20:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:20:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:03   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:20:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:20:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:05   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:20:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:20:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:12   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:20:12   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 8, 9 )
2017-09-12 10:20:16   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:20:16   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:16   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:20:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:20   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:20:22   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:20:22   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:22   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:22   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:24   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:24   INFO  [http-nio-9999-exec-10][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:20:31   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:20:31   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:31   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:31   INFO  [http-nio-9999-exec-7][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 10:20:31   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:20:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:20:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:20:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:20:32   INFO  [http-nio-9999-exec-5][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 10:37:31   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-12 10:37:52   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5456 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-12 10:37:52   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 10:37:52   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-12 10:37:55   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-12 10:37:55   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 10:37:55   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-12 10:37:55   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-12 10:37:55   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-12 10:37:55   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-12 10:37:56   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.1014466736156116859.9999/
2017-09-12 10:37:59   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-12 10:37:59   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-12 10:37:59   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-12 10:37:59   INFO  [main][StartupInfoLogger.java:57] - Started Application in 7.921 seconds (JVM running for 10.256)
2017-09-12 10:38:23   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-12 10:38:23   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-12 10:38:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :-1
2017-09-12 10:38:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:96] - path=http://localhost:9999,loginUrl=login.html
2017-09-12 10:38:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-09-12 10:38:24   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：null
2017-09-12 10:38:25   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/getvm.html,pathInfo=
2017-09-12 10:38:35   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/login.json,pathInfo=
2017-09-12 10:38:35   INFO  [http-nio-9999-exec-10][CommonController.java:137] - 后台管理员开始登陆:admin
2017-09-12 10:38:35   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：TBDoISac+j4=
2017-09-12 10:38:35   INFO  [http-nio-9999-exec-10][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-12 10:38:37   INFO  [http-nio-9999-exec-10][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-09-12 10:38:37   INFO  [http-nio-9999-exec-10][CommonController.java:170] - 用户登录成功
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: false
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value:  
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: false
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value:  
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: 
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Z@5b1e75d4
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@5b1e75d4' to type 'boolean[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [B@2a7ca104
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'byte[]' value '[B@2a7ca104' to type 'byte[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [C@50977f4f
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'char[]' value '[C@50977f4f' to type 'char[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [D@629a01a3
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'double[]' value '[D@629a01a3' to type 'double[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [F@4a0268f1
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'float[]' value '[F@4a0268f1' to type 'float[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [I@5b99434
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'int[]' value '[I@5b99434' to type 'int[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [J@6ebfeecb
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'long[]' value '[J@6ebfeecb' to type 'long[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [S@5c9a7da6
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'short[]' value '[S@5c9a7da6' to type 'short[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@586d324
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@586d324' to type 'BigDecimal[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@5d0f8973
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@5d0f8973' to type 'BigInteger[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@61db4eb0
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@61db4eb0' to type 'Boolean[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@33667162
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@33667162' to type 'Byte[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@67aa5abe
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@67aa5abe' to type 'Character[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@6c7dc0bc
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@6c7dc0bc' to type 'Double[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@7c27bd44
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@7c27bd44' to type 'Float[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@10aa4812
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@10aa4812' to type 'Integer[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@73e27367
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@73e27367' to type 'Long[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@239ea711
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@239ea711' to type 'Short[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@856193
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@856193' to type 'String[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@5529e99f
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@5529e99f' to type 'Class[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@3d97a04
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@3d97a04' to type 'Date[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@2a18c431
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@2a18c431' to type 'Calendar[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@78a6f0be
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@78a6f0be' to type 'java.io.File[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@403ed2f2
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@403ed2f2' to type 'java.sql.Date[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@2977d4d
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@2977d4d' to type 'java.sql.Time[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@4582516c
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@4582516c' to type 'java.sql.Timestamp[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@6b905db5
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@6b905db5' to type 'java.net.URL[]'
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-09-12 10:38:37   DEBUG [http-nio-9999-exec-10][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-09-12 10:38:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-12 10:38:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:38   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:38:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/cup/page.html,pathInfo=
2017-09-12 10:38:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:42   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:38:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/cup/list.json,pathInfo=
2017-09-12 10:38:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:43   INFO  [http-nio-9999-exec-6][CupRestController.java:109] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:38:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbycup.json,pathInfo=
2017-09-12 10:38:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:46   INFO  [http-nio-9999-exec-7][SubjectRestController.java:216] - 获取商品属性status=-1,start=0,limit=200,cupId=1
2017-09-12 10:38:46   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 8 )
2017-09-12 10:38:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 10:38:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:51   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:38:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 10:38:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:52   INFO  [http-nio-9999-exec-2][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 10:38:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 10:38:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:54   INFO  [http-nio-9999-exec-9][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 10:38:55   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10 )
2017-09-12 10:38:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:38:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:57   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:38:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:38:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:38:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:38:58   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:39:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:39:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:39:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:39:00   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:39:00   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 9 )
2017-09-12 10:39:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:39:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:39:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:39:02   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:39:03   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:39:06   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:39:06   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:39:06   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:39:06   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:39:06   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:39:28   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:39:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:39:28   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 10:39:28   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:39:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:39:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:39:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:39:35   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:248] - 需要绑定的id=10,9,8,5,3,7,1
2017-09-12 10:40:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:40:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:40:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:40:05   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:40:06   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:40:06   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:40:06   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:40:06   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:40:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:40:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:40:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:40:09   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:40:10   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 10:41:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:41:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:41:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:41:30   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:41:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:41:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:41:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:41:33   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:41:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:41:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:41:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:41:36   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:41:36   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 10:41:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:41:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:41:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:41:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:41:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:41:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:41:43   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:41:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:41:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:41:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:43:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:16   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:43:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:43:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:18   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:22   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:22   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:22   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:43:23   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:43:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:43:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:29   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:248] - 需要绑定的id=8,5,3,7,1
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:30   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:30   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:43:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:43:30   INFO  [http-nio-9999-exec-10][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:43:32   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9 )
2017-09-12 10:43:34   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:44:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:44:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:06   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:06   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:06   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:44:06   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:44:07   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 10, 9 )
2017-09-12 10:44:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:44:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:16   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:16   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:16   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:44:16   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:44:17   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 8, 10, 9 )
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:23   INFO  [http-nio-9999-exec-3][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:44:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:44:23   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:44:25   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:49:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/clazz/page.html,pathInfo=
2017-09-12 10:49:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:21   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:49:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-12 10:49:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:23   INFO  [http-nio-9999-exec-9][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-12 10:49:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 10:49:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 10:49:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:29   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 10:49:29   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:29   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:49:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:40   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:49:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:49:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:47   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:49:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:49:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:49:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:49:56   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:49:56   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 8, 10, 9 )
2017-09-12 10:50:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:50:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:01   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:50:02   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:06   INFO  [http-nio-9999-exec-9][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:06   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:06   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:50:07   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:50:13   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:50:13   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:13   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:13   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:248] - 需要绑定的id=5,1
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:16   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:16   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:16   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:50:16   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:50:17   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 7, 3, 8, 10, 9 )
2017-09-12 10:50:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:50:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:36   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:50:36   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 10:50:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:50:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:50:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:50:54   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:51:26   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:51:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:51:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:31   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:51:31   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 10:51:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:51:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:47   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:51:48   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:51:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:51:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:51   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:51:51   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 10:51:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:51:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:54   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:54   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:51:54   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:51:55   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:51:55   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:55   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:55   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:51:55   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:59   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:51:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:51:59   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 10:51:59   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:52:05   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:248] - 需要绑定的id=3
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:52:05   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:52:05   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:52:05   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:52:05   INFO  [http-nio-9999-exec-1][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 10:52:06   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:52:06   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:52:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:52:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:52:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:52:14   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:52:15   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:52:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:52:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:52:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:52:17   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:52:17   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:55:02   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:55:02   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:02   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:02   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:55:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:55:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:07   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:55:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:55:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:43   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:55:46   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:55:46   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:46   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:46   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:49   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:49   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:49   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:49   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:49   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 10:55:50   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 7, 3, 8, 10, 9 )
2017-09-12 10:55:50   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:55:51   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:55:51   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:55:51   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:55:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 7, 3, 8, 10, 9 )
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:55:57   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:56:04   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:04   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:04   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:04   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:56:04   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 7, 3, 8, 10, 9 )
2017-09-12 10:56:08   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:08   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:08   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:08   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:56:09   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:10   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:10   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:10   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:10   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:10   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 10:56:11   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:56:11   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:56:11   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:56:11   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 7, 3, 8, 10, 9 )
2017-09-12 10:56:11   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:56:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:56:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:41   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:56:43   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:56:43   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:43   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:43   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:56:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/clazz/page.html,pathInfo=
2017-09-12 10:56:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:46   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:56:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-12 10:56:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:56:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:56:47   INFO  [http-nio-9999-exec-1][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-12 10:57:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 10:57:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:20   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:57:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:57:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:22   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:57:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:57:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:26   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:57:26   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 7, 3, 8, 10, 9 )
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:31   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:31   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:57:33   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 8, 10, 9 )
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:41   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:41   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:41   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:57:42   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-12 10:57:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:57:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:44   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:57:45   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:57:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:57:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:48   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:57:48   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:50   INFO  [http-nio-9999-exec-7][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:50   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 10:57:50   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:57:55   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:57:55   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:55   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:55   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:248] - 需要绑定的id=10,9,8,5,3,7,1
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:56   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:56   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:57:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:57:56   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 10:57:56   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:57:56   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 10:58:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:58:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:58:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:58:03   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 10:58:03   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype =7 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:58:31   INFO  [http-nio-9999-exec-3][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:58:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:58:31   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 10:58:31   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:03   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:03   INFO  [http-nio-9999-exec-1][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:59:03   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:10   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:10   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:10   INFO  [http-nio-9999-exec-10][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:59:10   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:59:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:59:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:14   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:248] - 需要绑定的id=8
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:15   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:15   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:15   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 10:59:15   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:59:15   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-12 10:59:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:22   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:59:23   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-12 10:59:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:24   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:59:25   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:59:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:27   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 10:59:28   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-12 10:59:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:30   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:59:30   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:31   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:2
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:31   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-12 10:59:31   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:36   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:248] - 需要绑定的id=10,9,8,5,3,7,1
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:36   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:36   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:59:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 10:59:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:37   INFO  [http-nio-9999-exec-5][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-12 10:59:37   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 10:59:37   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 10:59:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:42   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:59:42   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 10:59:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:44   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 10:59:44   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 10:59:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:45   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 10:59:46   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 10:59:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:49   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 10:59:49   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 10:59:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 10:59:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 10:59:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 10:59:55   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 10:59:55   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 11:00:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:00:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:01   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 11:00:01   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 11:00:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:19   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:19   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:19   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/edit.html,pathInfo=
2017-09-12 11:00:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:31   INFO  [http-nio-9999-exec-3][ClazztypeController.java:69] - 需要修改密码的权限编号:1
2017-09-12 11:00:32   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/save.json,pathInfo=
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:135] - 执行更新的sql=update t_clazztype set editerid=? ,name=? ,editer=?  ,edittime=now()  where id=?
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:136] - 执行更新的参数=[1, 试题类型1, admin, 1]
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:36   INFO  [http-nio-9999-exec-1][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-12 11:00:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/edit.html,pathInfo=
2017-09-12 11:00:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:40   INFO  [http-nio-9999-exec-2][ClazztypeController.java:69] - 需要修改密码的权限编号:1
2017-09-12 11:00:40   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/save.json,pathInfo=
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:135] - 执行更新的sql=update t_clazztype set editerid=? ,name=? ,editer=?  ,edittime=now()  where id=?
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:136] - 执行更新的参数=[1, 试题类型, admin, 1]
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:44   INFO  [http-nio-9999-exec-5][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-12 11:00:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:00:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:00:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:00:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 11:01:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:00   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:01:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:01:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:02   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:01:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:01:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:05   INFO  [http-nio-9999-exec-10][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 11:01:05   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:01:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:01:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:06   INFO  [http-nio-9999-exec-5][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 11:01:06   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:28   INFO  [http-nio-9999-exec-4][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:28   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 11:01:29   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:01:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:01:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:58   INFO  [http-nio-9999-exec-7][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 11:01:58   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:01:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:01:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:01:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:01:58   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 11:01:58   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:02:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/clazz/edit.html,pathInfo=
2017-09-12 11:02:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:06   INFO  [http-nio-9999-exec-5][ClazzController.java:76] - 需要修改分类的编号id=0,parentid=0
2017-09-12 11:02:06   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:02:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:02:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:13   INFO  [http-nio-9999-exec-7][KnowledgeController.java:124] - 需要绑定题目的考试编号:2
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:13   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-12 11:02:13   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:18   INFO  [http-nio-9999-exec-2][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:18   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:18   INFO  [http-nio-9999-exec-1][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 11:02:19   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:02:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/clazz/edit.html,pathInfo=
2017-09-12 11:02:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:33   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:33   INFO  [http-nio-9999-exec-3][ClazzController.java:76] - 需要修改分类的编号id=0,parentid=0
2017-09-12 11:02:33   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:02:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:02:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:02:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:02:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-12 11:02:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:46   INFO  [http-nio-9999-exec-4][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-12 11:02:46   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[摸彩球, 6,                            <p><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述ddd</span></p>                           
                           
                           , 1, 4,                                                         一、需掌握相关知识点：对可能性、可能性大小、可能的情况的认识，学会判断可能性的大小以及列举出可能发生的情况等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                           
                           , admin, 摸彩球视频路径, 5]
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:53   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:02:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:02:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:56   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 11:02:57   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 11:02:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:02:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:02:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:02:59   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 11:02:59   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-12 11:04:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/status.json,pathInfo=
2017-09-12 11:04:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:04:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:18   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/status.json,pathInfo=
2017-09-12 11:04:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:21   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:04:21   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:21   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:21   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/status.json,pathInfo=
2017-09-12 11:04:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:04:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:24   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/status.json,pathInfo=
2017-09-12 11:04:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:04:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:27   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/status.json,pathInfo=
2017-09-12 11:04:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:04:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:30   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-12 11:04:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:36   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:04:37   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-12 11:04:37   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:37   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:37   INFO  [http-nio-9999-exec-7][SubjectRestController.java:119] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:48   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 11:04:48   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:48   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:48   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:04:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 11:04:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:49   INFO  [http-nio-9999-exec-3][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 11:04:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 11:04:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:53   INFO  [http-nio-9999-exec-10][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 11:04:53   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10 )
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:56   INFO  [http-nio-9999-exec-6][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:04:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:04:56   INFO  [http-nio-9999-exec-4][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 11:04:56   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 11:05:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/bindSubject.json,pathInfo=
2017-09-12 11:05:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:00   INFO  [http-nio-9999-exec-9][ExamRestController.java:272] - 需要绑定的id=4,3,7
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:01   INFO  [http-nio-9999-exec-7][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:01   INFO  [http-nio-9999-exec-8][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:01   INFO  [http-nio-9999-exec-2][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 11:05:01   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 4, 10 )
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:08   INFO  [http-nio-9999-exec-3][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:08   INFO  [http-nio-9999-exec-10][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:08   INFO  [http-nio-9999-exec-6][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 11:05:08   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 11:05:08   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-12 11:05:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 11:05:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:28   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:05:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:05:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:29   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:05:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:05:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:36   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 11:05:36   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 11:05:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:05:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:37   INFO  [http-nio-9999-exec-10][KnowledgeController.java:124] - 需要绑定题目的考试编号:2
2017-09-12 11:05:37   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:05:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:05:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:38   INFO  [http-nio-9999-exec-5][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-12 11:05:38   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:05:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-12 11:05:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:51   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:51   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:51   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:51   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-12 11:05:51   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:05:51   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 11:05:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:05:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:53   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 11:05:53   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:56   INFO  [http-nio-9999-exec-1][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:05:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:05:56   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 11:05:56   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:06:01   INFO  [http-nio-9999-exec-10][KnowledgeController.java:124] - 需要绑定题目的考试编号:1
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:06:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:06:01   INFO  [http-nio-9999-exec-6][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-12 11:06:02   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:07:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/clazz/edit.html,pathInfo=
2017-09-12 11:07:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:07:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:07:50   INFO  [http-nio-9999-exec-2][ClazzController.java:76] - 需要修改分类的编号id=0,parentid=0
2017-09-12 11:07:50   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:07:52   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/clazz/treetable.html,pathInfo=
2017-09-12 11:07:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:07:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 11:09:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:09:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:21   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:09:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:09:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:09:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:22   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:09:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:09:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:09:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:24   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 11:09:25   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 11:09:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:09:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:09:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:26   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 11:09:26   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:29   INFO  [http-nio-9999-exec-9][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:09:29   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:09:29   INFO  [http-nio-9999-exec-1][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 11:09:29   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 11:10:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/del.json,pathInfo=
2017-09-12 11:10:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:10:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:10:14   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:56] - 需要删除的知识点id=1
2017-09-12 11:10:15   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:10:15   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:10:15   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:10:15   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:10:35   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 11:10:35   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:10:35   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:10:35   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:10:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:10:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:10:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:10:36   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:12:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-12 11:12:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:12:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:12:05   INFO  [http-nio-9999-exec-7][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-12 11:12:07   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:12:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:12:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:12:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:12:10   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 11:12:11   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 11:12:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:12:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:12:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:12:15   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 11:12:19   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 11:12:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:12:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:12:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:12:24   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 11:12:24   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 11:13:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 11:13:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:26   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:13:27   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 11:13:27   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:27   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:27   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 11:13:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:13:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:30   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 11:13:30   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 11:13:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:13:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:32   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 11:13:32   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 11:13:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-12 11:13:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:40   INFO  [http-nio-9999-exec-1][KnowledgeController.java:58] - 需要修改knowledge的id:2
2017-09-12 11:13:41   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:13:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:13:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:44   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-12 11:13:44   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 11:13:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-12 11:13:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:49   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:13:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-12 11:13:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:54   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 11:13:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 11:13:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 11:13:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 11:13:56   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 11:13:57   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:14:30   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:14:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:14:30   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:14:31   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:20:57   INFO  [http-nio-9999-exec-1][KnowledgeController.java:124] - 需要绑定题目的考试编号:1
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:20:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:20:57   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-12 12:20:57   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:00   INFO  [http-nio-9999-exec-10][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:00   INFO  [http-nio-9999-exec-5][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:21:01   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:05   INFO  [http-nio-9999-exec-4][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:05   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 12:21:05   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:20   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:20   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:20   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:21:21   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:26   INFO  [http-nio-9999-exec-2][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:26   INFO  [http-nio-9999-exec-7][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 12:21:26   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:54   INFO  [http-nio-9999-exec-1][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:21:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:21:54   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:21:55   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:23:52   INFO  [http-nio-9999-exec-5][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:23:52   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:23:52   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:23:52   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:27:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 12:27:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:27:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:27:56   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:27:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 12:27:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:27:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:27:58   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:28:00   INFO  [http-nio-9999-exec-10][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:28:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:28:00   INFO  [http-nio-9999-exec-5][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:28:01   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:48   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:48   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:29:49   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:29:51   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 12:29:51   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:51   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:51   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:29:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 12:29:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:53   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 12:29:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 12:29:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:56   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-12 12:29:56   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-12 12:29:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 12:29:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:57   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 12:29:57   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 12:29:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 12:29:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:29:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:29:58   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 12:29:59   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:01   INFO  [http-nio-9999-exec-4][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:01   INFO  [http-nio-9999-exec-8][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 12:30:01   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:30:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-12 12:30:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:06   INFO  [http-nio-9999-exec-6][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-12 12:30:07   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:30:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 12:30:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:13   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:30:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 12:30:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:14   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:16   INFO  [http-nio-9999-exec-1][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:16   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:16   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:30:16   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:30:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 12:30:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:19   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:30:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 12:30:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:20   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 12:30:22   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-12 12:30:22   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:22   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:22   INFO  [http-nio-9999-exec-8][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-12 12:30:23   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:30:28   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 12:30:28   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:28   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:28   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 12:30:28   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 12:30:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 12:30:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:30:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:30:29   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 12:30:29   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 12:31:55   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 12:31:55   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:31:55   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:31:55   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 12:31:56   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 12:31:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:31:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:31:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:31:57   INFO  [http-nio-9999-exec-1][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:31:57   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:31:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:31:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:31:58   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:31:58   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:31:58   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:33:37   INFO  [http-nio-9999-exec-5][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 12:33:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 12:33:37   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 12:33:37   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:29:47   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:29:47   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:29:47   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:29:47   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:29:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:29:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:29:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:29:50   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:29:53   INFO  [http-nio-9999-exec-5][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:29:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:29:53   INFO  [http-nio-9999-exec-2][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:29:53   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:29:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:29:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:29:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:29:57   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 13:29:57   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 13:29:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:29:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:29:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:29:59   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 13:30:00   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:01   INFO  [http-nio-9999-exec-10][KnowledgeController.java:124] - 需要绑定题目的考试编号:3
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:01   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=3
2017-09-12 13:30:01   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:30:04   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:30:04   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:04   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:04   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 13:30:04   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 13:30:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:30:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:24   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:30:26   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:30:26   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:26   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:26   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:30:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:30:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:27   INFO  [http-nio-9999-exec-4][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:30:27   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:30:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:30:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:30:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:30:28   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:30:28   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:33:21   INFO  [http-nio-9999-exec-4][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:33:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:33:21   INFO  [http-nio-9999-exec-10][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:33:21   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:34:43   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:34:43   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:34:43   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:34:43   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:34:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:34:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:34:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:34:45   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:34:47   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:34:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:34:47   INFO  [http-nio-9999-exec-1][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:34:48   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:34:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:34:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:34:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:34:57   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:34:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:34:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:34:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:34:59   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:35:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:35:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:35:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:35:01   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:35:01   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:35:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:35:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:35:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:35:02   INFO  [http-nio-9999-exec-10][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:35:02   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:35:38   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:35:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:35:38   INFO  [http-nio-9999-exec-7][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:35:38   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:36:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:36:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:10   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:36:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:36:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:12   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:12   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:36:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:36:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:14   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 13:36:14   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 13:36:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:36:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:17   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 13:36:17   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:19   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:19   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:19   INFO  [http-nio-9999-exec-3][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:36:19   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:36:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:36:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:36:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:36:30   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 13:36:31   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 13:42:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:42:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:36   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:42:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:42:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:38   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:42:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:42:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:40   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 13:42:40   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 13:42:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:42:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:41   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 13:42:42   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 13:42:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:42:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:44   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 13:42:44   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:45   INFO  [http-nio-9999-exec-5][KnowledgeController.java:124] - 需要绑定题目的考试编号:4
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:45   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:45   INFO  [http-nio-9999-exec-7][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-12 13:42:45   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:42:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:42:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:49   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 13:42:49   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 13:42:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:42:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:52   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 13:42:52   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:53   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:53   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:53   INFO  [http-nio-9999-exec-4][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:42:53   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:42:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:42:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:42:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:42:56   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 13:42:56   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 13:43:05   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-12 13:43:16   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6680 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-12 13:43:16   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 13:43:16   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-12 13:43:19   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-12 13:43:19   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 13:43:19   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-12 13:43:20   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-12 13:43:20   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-12 13:43:20   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-12 13:43:20   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.6049880450843693217.9999/
2017-09-12 13:43:23   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-12 13:43:23   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-12 13:43:23   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-12 13:43:23   INFO  [main][StartupInfoLogger.java:57] - Started Application in 7.474 seconds (JVM running for 9.6)
2017-09-12 13:43:48   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-12 13:43:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 13:43:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:43:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:43:49   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:43:49   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-12 13:43:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 13:43:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:43:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:43:54   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 13:43:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:43:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:43:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:43:56   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-12 13:43:57   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:44:00   INFO  [http-nio-9999-exec-8][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:44:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:44:00   INFO  [http-nio-9999-exec-6][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-12 13:44:00   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-12 13:44:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:44:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:44:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:44:03   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-12 13:44:03   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-12 13:44:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-12 13:44:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:44:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:44:05   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-12 13:44:05   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 9, 10 )
2017-09-12 13:44:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 13:44:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:44:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:44:09   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:44:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 13:44:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:44:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:44:11   INFO  [http-nio-9999-exec-9][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 13:46:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 13:46:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:35   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:46:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 13:46:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:37   INFO  [http-nio-9999-exec-3][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 13:46:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:46:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:39   INFO  [http-nio-9999-exec-1][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 13:46:40   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:42   INFO  [http-nio-9999-exec-4][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:42   INFO  [http-nio-9999-exec-5][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 13:46:42   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:47   INFO  [http-nio-9999-exec-7][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:47   INFO  [http-nio-9999-exec-9][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 13:46:48   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 13:46:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/edit.html,pathInfo=
2017-09-12 13:46:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:46:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:46:57   INFO  [http-nio-9999-exec-6][ExamController.java:75] - 需要修改密码的权限编号:0
2017-09-12 13:46:57   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/save.json,pathInfo=
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: false
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value:  
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: false
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value:  
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: 
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Z@7951bee6
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@7951bee6' to type 'boolean[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [B@32d8f98f
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'byte[]' value '[B@32d8f98f' to type 'byte[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [C@7fc46e36
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'char[]' value '[C@7fc46e36' to type 'char[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [D@15a804e5
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'double[]' value '[D@15a804e5' to type 'double[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [F@61fa2e38
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'float[]' value '[F@61fa2e38' to type 'float[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [I@149ba709
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'int[]' value '[I@149ba709' to type 'int[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [J@4872de72
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'long[]' value '[J@4872de72' to type 'long[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [S@1da864b5
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'short[]' value '[S@1da864b5' to type 'short[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@2d1312d6
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@2d1312d6' to type 'BigDecimal[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@3a269831
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@3a269831' to type 'BigInteger[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@51c5e5f6
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@51c5e5f6' to type 'Boolean[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@7127694f
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@7127694f' to type 'Byte[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@457c6417
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@457c6417' to type 'Character[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@412721e
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@412721e' to type 'Double[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@5f9b6726
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@5f9b6726' to type 'Float[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@2e614556
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@2e614556' to type 'Integer[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@5c16f9dc
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@5c16f9dc' to type 'Long[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@6381d516
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@6381d516' to type 'Short[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@50e75d3d
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@50e75d3d' to type 'String[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@64a700ca
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@64a700ca' to type 'Class[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@9e3402d
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@9e3402d' to type 'Date[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@7c10ebce
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@7c10ebce' to type 'Calendar[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@331cdbce
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@331cdbce' to type 'java.io.File[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@7cfdea0b
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@7cfdea0b' to type 'java.sql.Date[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@6161ec0c
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@6161ec0c' to type 'java.sql.Time[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@342cc9db
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@342cc9db' to type 'java.sql.Timestamp[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@5aaa068a
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@5aaa068a' to type 'java.net.URL[]'
2017-09-12 13:47:22   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.ExamDo@54cc1d1d[name=<null>,gradeid=<null>,times=<null>,totalexam=<null>,remark=<null>,ext_grade=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {gradeid=[Ljava.lang.String;@7a65ca54, name=[Ljava.lang.String;@48938a51, times=[Ljava.lang.String;@464bf9a8, remark=[Ljava.lang.String;@7a144ad8, file=[Ljava.lang.String;@2e7708a4, id=[Ljava.lang.String;@7a62de39})
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '5' to class 'java.lang.Long'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '5' to type 'Long'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Long value '5'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '考试名称' to class 'java.lang.String'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '考试名称' to type 'String'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '90' to class 'java.lang.Integer'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '90' to type 'Integer'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Integer value '90'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '<p><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span></p>                           ' to class 'java.lang.String'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '<p><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span></p>                           ' to type 'String'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_exam(gradeid,remark,adder,times,adderid,name,addtime,edittime) VALUES(?,?,?,?,?,?,now(),now())
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-1][MysqlDialectImpl.java:88] - 执行保存的参数=[5, <p><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span></p>, admin, 90, 1, 考试名称]
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:47:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:47:23   INFO  [http-nio-9999-exec-4][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 13:47:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:47:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:47:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:47:26   INFO  [http-nio-9999-exec-10][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-12 13:47:26   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 13:47:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:47:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:47:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:47:28   INFO  [http-nio-9999-exec-8][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 13:47:28   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:47:30   INFO  [http-nio-9999-exec-5][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:47:30   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:47:30   INFO  [http-nio-9999-exec-7][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 13:47:30   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 13:48:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 13:48:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:16   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:48:18   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 13:48:18   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:18   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:18   INFO  [http-nio-9999-exec-9][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 13:48:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:48:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:20   INFO  [http-nio-9999-exec-8][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-12 13:48:20   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 13:48:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:48:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:21   INFO  [http-nio-9999-exec-1][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 13:48:21   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-12 13:48:22   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 13:48:22   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:22   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:22   INFO  [http-nio-9999-exec-7][ExamController.java:115] - 需要绑定题目的考试编号:1
2017-09-12 13:48:22   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:48:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 13:48:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:23   INFO  [http-nio-9999-exec-10][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-12 13:48:23   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 13:48:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:48:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:25   INFO  [http-nio-9999-exec-2][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-12 13:48:26   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:27   INFO  [http-nio-9999-exec-4][ExamController.java:115] - 需要绑定题目的考试编号:2
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:27   INFO  [http-nio-9999-exec-6][SubjectRestController.java:323] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-12 13:48:27   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-12 13:48:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-12 13:48:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 13:48:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 13:48:30   INFO  [http-nio-9999-exec-8][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-12 13:48:30   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-12 14:11:32   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-12 14:35:37   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5400 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-12 14:35:37   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 14:35:37   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-12 14:35:41   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-12 14:35:41   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 14:35:41   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-12 14:35:41   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-12 14:35:41   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-12 14:35:41   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-12 14:35:42   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.6034045449248290294.9999/
2017-09-12 14:35:45   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-12 14:35:46   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-12 14:35:46   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-12 14:35:46   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.19 seconds (JVM running for 11.915)
2017-09-12 14:40:01   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-12 14:40:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-12 14:40:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:40:02   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:40:02   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:40:02   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-12 14:40:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-12 14:40:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:40:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:40:06   INFO  [http-nio-9999-exec-5][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 14:41:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/clazz/page.html,pathInfo=
2017-09-12 14:41:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:41:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:41:14   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:41:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-12 14:41:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:41:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:41:16   INFO  [http-nio-9999-exec-2][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-12 14:41:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-09-12 14:41:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:41:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:41:22   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:41:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-09-12 14:41:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:41:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:41:57   INFO  [http-nio-9999-exec-8][PermissionController.java:101] - 需要修改密码的权限编号:0
2017-09-12 14:41:57   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:42:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:42:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/icons.html,pathInfo=
2017-09-12 14:42:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:42:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:42:44   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/permission/save.json,pathInfo=
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: false
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value:  
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: false
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value:  
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Z@5574f196
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@5574f196' to type 'boolean[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [B@5b3712df
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'byte[]' value '[B@5b3712df' to type 'byte[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [C@651ad6b
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'char[]' value '[C@651ad6b' to type 'char[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [D@4f9fb510
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'double[]' value '[D@4f9fb510' to type 'double[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [F@3d950534
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'float[]' value '[F@3d950534' to type 'float[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [I@5ed759b3
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'int[]' value '[I@5ed759b3' to type 'int[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [J@55e69df7
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'long[]' value '[J@55e69df7' to type 'long[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [S@6763956e
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'short[]' value '[S@6763956e' to type 'short[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@72ca9013
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@72ca9013' to type 'BigDecimal[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@775c7b2c
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@775c7b2c' to type 'BigInteger[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@2a830bda
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@2a830bda' to type 'Boolean[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@abb8bc5
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@abb8bc5' to type 'Byte[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@4e0f067b
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@4e0f067b' to type 'Character[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@5669fcce
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@5669fcce' to type 'Double[]'
2017-09-12 14:43:24   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@1c00313e
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@1c00313e' to type 'Float[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@504c05d6
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@504c05d6' to type 'Integer[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@3118f8ed
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@3118f8ed' to type 'Long[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@1874ecf1
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@1874ecf1' to type 'Short[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@27b4a71f
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@27b4a71f' to type 'String[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@3eff6f71
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@3eff6f71' to type 'Class[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@1530f3b
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@1530f3b' to type 'Date[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@3d6cae96
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@3d6cae96' to type 'Calendar[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@611e3854
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@611e3854' to type 'java.io.File[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@154122df
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@154122df' to type 'java.sql.Date[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@13e3bed1
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@13e3bed1' to type 'java.sql.Time[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@4b82c0b3
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@4b82c0b3' to type 'java.sql.Timestamp[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@39192a06
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@39192a06' to type 'java.net.URL[]'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.manager.pojo.PermissionDo@eb3aee5[name=<null>,ident=<null>,parentid=<null>,groupid=<null>,groupname=<null>,operatetype=<null>,type=<null>,url=<null>,icons=<null>,remark1=<null>,remark2=<null>,isshow=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {parentid=[Ljava.lang.String;@4a6c5793, name=[Ljava.lang.String;@4c3628bd, ident=[Ljava.lang.String;@204fec5, type=[Ljava.lang.String;@65834ced, isshow=[Ljava.lang.String;@4d7b5f01, url=[Ljava.lang.String;@30f5e5d3, icons=[Ljava.lang.String;@15a2d7de, remark1=[Ljava.lang.String;@6a3915a3, id=[Ljava.lang.String;@7d2dccb2})
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '0' to class 'java.lang.Long'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '0' to type 'Long'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '教师管理' to class 'java.lang.String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '教师管理' to type 'String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string 'teacher' to class 'java.lang.String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value 'teacher' to type 'String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '1'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '1' to type 'String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '#' to class 'java.lang.String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '#' to type 'String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string 'fa-book' to class 'java.lang.String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value 'fa-book' to type 'String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '教师管理' to class 'java.lang.String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '教师管理' to type 'String'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_permission(ident,adder,icons,type,parentid,url,isshow,adderid,name,remark1,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,now(),now())
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:88] - 执行保存的参数=[teacher, admin, fa-book, 1, 0, #, 1, 1, 教师管理, 教师管理]
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:43:25   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:43:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-09-12 14:43:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:43:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:43:48   INFO  [http-nio-9999-exec-10][PermissionController.java:101] - 需要修改密码的权限编号:19
2017-09-12 14:43:48   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:43:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:44:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-09-12 14:44:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:44:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:44:13   INFO  [http-nio-9999-exec-3][PermissionController.java:101] - 需要修改密码的权限编号:0
2017-09-12 14:44:13   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:44:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/permission/save.json,pathInfo=
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.manager.pojo.PermissionDo@7a12ad57[name=<null>,ident=<null>,parentid=<null>,groupid=<null>,groupname=<null>,operatetype=<null>,type=<null>,url=<null>,icons=<null>,remark1=<null>,remark2=<null>,isshow=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {parentid=[Ljava.lang.String;@2a8f8d43, name=[Ljava.lang.String;@3803ad37, ident=[Ljava.lang.String;@392b5c63, type=[Ljava.lang.String;@56bc3604, isshow=[Ljava.lang.String;@f5c05, url=[Ljava.lang.String;@25c03326, icons=[Ljava.lang.String;@466bbbb9, remark1=[Ljava.lang.String;@7150a966, id=[Ljava.lang.String;@b453c3d})
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '19' to class 'java.lang.Long'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '19' to type 'Long'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '19'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '教师管理' to class 'java.lang.String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '教师管理' to type 'String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string 'teacher-list' to class 'java.lang.String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value 'teacher-list' to type 'String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Short value '1'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '1' to type 'String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string 'teacher/page' to class 'java.lang.String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value 'teacher/page' to type 'String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '教师管理' to class 'java.lang.String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '教师管理' to type 'String'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_permission(ident,adder,icons,type,parentid,url,isshow,adderid,name,remark1,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,now(),now())
2017-09-12 14:44:57   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:88] - 执行保存的参数=[teacher-list, admin, , 1, 19, teacher/page, 1, 1, 教师管理, 教师管理]
2017-09-12 14:44:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-09-12 14:44:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:44:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:44:58   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:45:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/role/page.html,pathInfo=
2017-09-12 14:45:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:05   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:45:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-09-12 14:45:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:07   INFO  [http-nio-9999-exec-1][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-09-12 14:45:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-09-12 14:45:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:10   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:45:11   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-09-12 14:45:11   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:11   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/role/permission.json,pathInfo=
2017-09-12 14:45:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-09-12 14:45:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:16   INFO  [http-nio-9999-exec-4][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-09-12 14:45:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/role/page.html,pathInfo=
2017-09-12 14:45:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:18   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:45:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-09-12 14:45:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:20   INFO  [http-nio-9999-exec-8][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-09-12 14:45:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 14:45:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:45:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:45:24   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:45:25   ERROR [http-nio-9999-exec-10][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core._MiscTemplateException: Template inclusion failed (for parameter value "../../common/style.ftl"):
Template not found for name "teacher/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #include "../../common/style.ftl"  [in template "teacher/page.ftl" at line 7, column 5]
----
2017-09-12 14:45:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core._MiscTemplateException: Template inclusion failed (for parameter value "../../common/style.ftl"):
Template not found for name "teacher/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #include "../../common/style.ftl"  [in template "teacher/page.ftl" at line 7, column 5]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core._MiscTemplateException: Template inclusion failed (for parameter value "../../common/style.ftl"):
Template not found for name "teacher/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #include "../../common/style.ftl"  [in template "teacher/page.ftl" at line 7, column 5]
----
	at freemarker.core.Include.accept(Include.java:164) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
Caused by: freemarker.template.TemplateNotFoundException: Template not found for name "teacher/../../common/style.ftl".
Reason given: Backing out from the root directory is not allowed.
The name was interpreted by this TemplateLoader: MultiTemplateLoader(loader1 = FileTemplateLoader(baseDir="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates", canonicalBasePath="F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes\templates\"), loader2 = ClassTemplateLoader(resourceLoaderClass=org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer, basePackagePath="" /* relatively to resourceLoaderClass pkg */)).
	at freemarker.template.Configuration.getTemplate(Configuration.java:2485) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.getTemplateForInclusion(Environment.java:2467) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Include.accept(Include.java:162) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-09-12 14:45:25   ERROR [http-nio-9999-exec-10][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-09-12 14:55:44   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-12 14:55:55   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 4152 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-12 14:55:55   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 14:55:55   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-12 14:55:58   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-12 14:55:58   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 14:55:59   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-12 14:55:59   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-12 14:55:59   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-12 14:55:59   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-12 14:55:59   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999/
2017-09-12 14:56:03   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-12 14:56:03   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-12 14:56:03   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-12 14:56:03   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.077 seconds (JVM running for 12.438)
2017-09-12 14:56:03   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-12 14:56:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 14:56:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:56:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:56:03   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:56:04   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-12 14:56:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 14:56:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:56:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:56:09   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:56:11   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 14:56:11   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:56:11   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:56:11   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 14:56:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 14:56:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:56:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:56:15   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:57:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 14:57:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:57:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:57:05   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 14:57:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 14:57:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:57:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:57:11   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:58:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 14:58:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:58:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:58:42   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:58:44   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 14:58:44   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:58:44   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:58:44   INFO  [http-nio-9999-exec-7][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 14:58:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 14:58:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:58:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:58:53   INFO  [http-nio-9999-exec-1][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 14:58:53   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:59:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 14:59:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:59:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:59:48   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 14:59:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 14:59:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:59:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:59:51   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 14:59:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 14:59:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 14:59:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 14:59:52   INFO  [http-nio-9999-exec-2][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 14:59:52   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:08:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:08:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:08:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:08:10   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:08:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:08:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:08:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:08:12   INFO  [http-nio-9999-exec-5][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:08:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:08:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:08:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:08:15   INFO  [http-nio-9999-exec-3][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:08:15   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:08:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:08:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:08:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:08:49   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:08:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:08:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:08:51   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:08:51   INFO  [http-nio-9999-exec-5][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:08:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:08:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:08:53   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:08:53   INFO  [http-nio-9999-exec-6][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:08:53   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:09:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:09:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:09:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:09:36   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:09:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:09:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:09:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:09:38   INFO  [http-nio-9999-exec-1][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:09:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:09:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:09:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:09:41   INFO  [http-nio-9999-exec-4][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:09:41   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:11:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:11:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:11:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:11:03   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:11:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:11:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:11:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:11:05   INFO  [http-nio-9999-exec-3][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:11:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:11:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:11:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:11:06   INFO  [http-nio-9999-exec-5][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:11:06   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:11:11   INFO  [http-nio-9999-exec-6][FileUploadServlet.java:227] - FileUploadServlet init sucess!
2017-09-12 15:11:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 15:11:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:11:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:11:11   INFO  [http-nio-9999-exec-6][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999//2017/9/12/c67dda49-3862-4539-91a2-5bfed4e8adb1.jpg
2017-09-12 15:13:23   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:13:23   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:13:23   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:13:23   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:13:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:13:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:13:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:13:24   INFO  [http-nio-9999-exec-1][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:13:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:13:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:13:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:13:26   INFO  [http-nio-9999-exec-4][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:13:26   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:13:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 15:13:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:13:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:13:31   INFO  [http-nio-9999-exec-5][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999//2017/9/12/a5ed5ddc-8c10-4a65-83e5-93a7a5d26e99.jpg
2017-09-12 15:22:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:22:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:22:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:22:49   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:22:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:22:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:22:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:22:51   INFO  [http-nio-9999-exec-4][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:22:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:22:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:22:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:22:57   INFO  [http-nio-9999-exec-2][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:22:57   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 15:23:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:02   INFO  [http-nio-9999-exec-5][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999//2017/9/12/5493ec74-8ed9-4ce1-8151-c75a01f481f0.jpg
2017-09-12 15:23:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:23:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:08   INFO  [http-nio-9999-exec-6][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:23:08   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:23:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:14   INFO  [http-nio-9999-exec-9][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:23:14   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:23:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:36   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:23:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:37   INFO  [http-nio-9999-exec-4][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:38   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:23:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:39   INFO  [http-nio-9999-exec-2][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:23:39   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:23:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:49   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:51   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:23:51   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:51   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:51   INFO  [http-nio-9999-exec-3][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:23:52   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:23:52   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:52   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:52   INFO  [http-nio-9999-exec-7][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:23:52   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:23:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 15:23:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:23:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:23:58   INFO  [http-nio-9999-exec-4][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999//2017/9/12/7eb65438-4cc9-4f34-9ac4-c7d51c9682cf.jpg
2017-09-12 15:41:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:41:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:41:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:41:49   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:41:51   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:41:51   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:41:51   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:41:51   INFO  [http-nio-9999-exec-6][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:41:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:41:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:41:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:41:53   INFO  [http-nio-9999-exec-9][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:41:53   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:41:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 15:41:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:41:57   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:41:57   INFO  [http-nio-9999-exec-7][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999//2017/9/12/cd711d27-fc4d-4559-b66c-3930ae65c3f1.jpg
2017-09-12 15:43:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:43:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:11   INFO  [http-nio-9999-exec-5][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:43:11   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:43:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:43:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:19   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:43:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:43:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:21   INFO  [http-nio-9999-exec-6][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:43:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:43:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:23   INFO  [http-nio-9999-exec-9][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:43:23   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:43:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:43:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:49   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:43:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:43:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:53   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:43:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:43:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:43:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:43:55   INFO  [http-nio-9999-exec-10][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:43:55   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:46:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:46:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:46:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:46:31   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:46:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:46:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:46:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:46:33   INFO  [http-nio-9999-exec-8][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:46:34   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:46:34   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:46:34   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:46:34   INFO  [http-nio-9999-exec-2][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:46:34   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:47:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:47:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:47:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:47:09   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:47:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:47:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:47:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:47:11   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:47:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:47:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:47:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:47:12   INFO  [http-nio-9999-exec-8][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:47:12   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:47:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:47:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:47:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:47:57   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:47:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:47:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:47:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:47:59   INFO  [http-nio-9999-exec-5][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:48:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:48:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:48:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:48:00   INFO  [http-nio-9999-exec-7][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:48:00   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:48:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:48:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:48:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:48:27   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:48:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:48:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:48:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:48:29   INFO  [http-nio-9999-exec-8][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:48:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:48:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:48:30   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:48:30   INFO  [http-nio-9999-exec-10][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:48:30   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:49:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:49:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:49:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:49:17   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:49:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:49:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:49:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:49:18   INFO  [http-nio-9999-exec-5][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:49:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:49:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:49:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:49:19   INFO  [http-nio-9999-exec-9][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:49:19   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:49:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:49:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:49:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:49:30   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:49:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:49:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:49:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:49:32   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:49:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:49:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:49:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:49:33   INFO  [http-nio-9999-exec-1][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:49:33   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:50:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:50:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:50:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:50:30   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:50:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:50:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:50:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:50:31   INFO  [http-nio-9999-exec-5][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:50:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:50:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:50:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:50:33   INFO  [http-nio-9999-exec-4][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 15:50:33   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:51:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 15:51:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:51:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:51:09   INFO  [http-nio-9999-exec-2][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3708791104300321514.9999//2017/9/12/c6e9b0fc-90f7-4828-87f1-af3368442a97.png
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/save.json,pathInfo=
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: false
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value:  
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: 
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Z@7b396f68
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@7b396f68' to type 'boolean[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [B@7774ed73
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'byte[]' value '[B@7774ed73' to type 'byte[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [C@7b86fc22
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'char[]' value '[C@7b86fc22' to type 'char[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [D@1a4dccd5
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'double[]' value '[D@1a4dccd5' to type 'double[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [F@2abfb2db
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'float[]' value '[F@2abfb2db' to type 'float[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [I@7a70dd8a
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'int[]' value '[I@7a70dd8a' to type 'int[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [J@365b490a
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'long[]' value '[J@365b490a' to type 'long[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [S@42841070
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'short[]' value '[S@42841070' to type 'short[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@157a5b91
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@157a5b91' to type 'BigDecimal[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@5e54f19
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@5e54f19' to type 'BigInteger[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@2061a1f7
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@2061a1f7' to type 'Boolean[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@343377ac
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@343377ac' to type 'Byte[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@78d33ec3
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@78d33ec3' to type 'Character[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@4791a8c8
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@4791a8c8' to type 'Double[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@718e0672
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@718e0672' to type 'Float[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@5229e304
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@5229e304' to type 'Integer[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@1323418f
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@1323418f' to type 'Long[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@307c267b
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@307c267b' to type 'Short[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@506d5bfb
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@506d5bfb' to type 'String[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@7b1e6891
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@7b1e6891' to type 'Class[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@2a00c677
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@2a00c677' to type 'Date[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@13f3e9e2
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@13f3e9e2' to type 'Calendar[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@373e1f90
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@373e1f90' to type 'java.io.File[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@4cef2737
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@4cef2737' to type 'java.sql.Date[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@1a556fcb
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@1a556fcb' to type 'java.sql.Time[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@1483edf0
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@1483edf0' to type 'java.sql.Timestamp[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@79de3823
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@79de3823' to type 'java.net.URL[]'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.TeacherDo@3e20d3d9[typename=<null>,name=<null>,detail=<null>,imageurl=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {typename=[Ljava.lang.String;@1a2d1a98, name=[Ljava.lang.String;@1c547ffb, imageurl=[Ljava.lang.String;@3df8d668, file=[Ljava.lang.String;@11d2617b, detail=[Ljava.lang.String;@63d95003, id=[Ljava.lang.String;@5ccd5024})
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '数论' to class 'java.lang.String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '数论' to type 'String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '冯菲' to class 'java.lang.String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '冯菲' to type 'String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string ';/2017/9/12/c6e9b0fc-90f7-4828-87f1-af3368442a97.png' to class 'java.lang.String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value ';/2017/9/12/c6e9b0fc-90f7-4828-87f1-af3368442a97.png' to type 'String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '               牛娃课堂数论组，来自美国UCLA数学博士，复旦大学苏步青班的学神姐姐。既是化繁为简的高手，又是生动风趣的女神。数学已经成为她的思维和言语，对于数学，她的理想是星辰大海“放弃工作，继续在美国读数学PhD，学习更深奥和宽广的思想，希望能为数学科研做出贡献。”                  ' to class 'java.lang.String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '               牛娃课堂数论组，来自美国UCLA数学博士，复旦大学苏步青班的学神姐姐。既是化繁为简的高手，又是生动风趣的女神。数学已经成为她的思维和言语，对于数学，她的理想是星辰大海“放弃工作，继续在美国读数学PhD，学习更深奥和宽广的思想，希望能为数学科研做出贡献。”                  ' to type 'String'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_teacher(adder,imageurl,adderid,name,detail,typename,addtime,edittime) VALUES(?,?,?,?,?,?,now(),now())
2017-09-12 15:51:30   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[admin, ;/2017/9/12/c6e9b0fc-90f7-4828-87f1-af3368442a97.png, 1, 冯菲, 牛娃课堂数论组，来自美国UCLA数学博士，复旦大学苏步青班的学神姐姐。既是化繁为简的高手，又是生动风趣的女神。数学已经成为她的思维和言语，对于数学，她的理想是星辰大海“放弃工作，继续在美国读数学PhD，学习更深奥和宽广的思想，希望能为数学科研做出贡献。”, 数论]
2017-09-12 15:51:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:51:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:51:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:51:31   INFO  [http-nio-9999-exec-6][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:52:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:52:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:52:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:52:55   INFO  [http-nio-9999-exec-10][TeacherController.java:73] - 需要修改密码的权限编号:1
2017-09-12 15:52:55   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:54:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:54:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:54:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:54:24   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:54:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:54:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:54:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:54:26   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:54:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 15:54:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:54:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:54:29   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:54:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 15:54:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:54:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:54:33   INFO  [http-nio-9999-exec-4][TeacherController.java:73] - 需要修改密码的权限编号:1
2017-09-12 15:54:33   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:58:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 15:58:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:58:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:58:47   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 15:58:49   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 15:58:49   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:58:49   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:58:49   INFO  [http-nio-9999-exec-7][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 15:58:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 15:58:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 15:58:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 15:58:51   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:00:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:00:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:00:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:00:44   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:00:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:00:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:00:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:00:46   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:00:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:00:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:00:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:00:48   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:02:13   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:02:13   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:02:13   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:02:13   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:02:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:02:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:02:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:02:15   INFO  [http-nio-9999-exec-7][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:02:17   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:02:17   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:02:17   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:02:17   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:02:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:02:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:02:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:02:19   INFO  [http-nio-9999-exec-8][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 16:02:19   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:03:53   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-12 16:04:13   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 8120 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-12 16:04:13   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 16:04:13   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-12 16:04:17   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-12 16:04:17   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 16:04:17   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-12 16:04:17   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-12 16:04:17   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-12 16:04:17   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-12 16:04:18   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.5948652943261720723.9999/
2017-09-12 16:04:21   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-12 16:04:21   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-12 16:04:21   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-12 16:04:21   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.414 seconds (JVM running for 12.769)
2017-09-12 16:04:46   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-12 16:04:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:04:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:04:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:04:47   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:04:48   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-12 16:04:52   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:04:52   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:04:52   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:04:52   INFO  [http-nio-9999-exec-5][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:04:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/status.json,pathInfo=
2017-09-12 16:04:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:04:55   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:04:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:04:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:04:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:04:55   INFO  [http-nio-9999-exec-1][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:04:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:04:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:04:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:04:58   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:05:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:05:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:05:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:05:38   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:05:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:05:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:05:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:05:43   INFO  [http-nio-9999-exec-8][TeacherController.java:73] - 需要修改密码的权限编号:1
2017-09-12 16:05:43   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:08:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:08:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:01   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:08:03   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:08:03   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:03   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:03   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:08:05   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:08:05   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:05   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:05   INFO  [http-nio-9999-exec-6][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 16:08:05   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:08:50   INFO  [http-nio-9999-exec-5][FileUploadServlet.java:227] - FileUploadServlet init sucess!
2017-09-12 16:08:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 16:08:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:50   INFO  [http-nio-9999-exec-5][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.5948652943261720723.9999//2017/9/12/b73637e7-db2c-4192-863e-d6d890605656.jpg
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/save.json,pathInfo=
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: false
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value:  
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: false
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value:  
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-12 16:08:53   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 0
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: 
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Z@1ec3be89
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@1ec3be89' to type 'boolean[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [B@57780113
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'byte[]' value '[B@57780113' to type 'byte[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [C@96ae4ed
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'char[]' value '[C@96ae4ed' to type 'char[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [D@3d42cc8
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'double[]' value '[D@3d42cc8' to type 'double[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [F@e0edcd
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'float[]' value '[F@e0edcd' to type 'float[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [I@1787045b
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'int[]' value '[I@1787045b' to type 'int[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [J@4914c7ca
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'long[]' value '[J@4914c7ca' to type 'long[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [S@6b04004c
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'short[]' value '[S@6b04004c' to type 'short[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@6c8d0664
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@6c8d0664' to type 'BigDecimal[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@2c42c74f
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@2c42c74f' to type 'BigInteger[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@63b53048
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@63b53048' to type 'Boolean[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@211b8e35
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@211b8e35' to type 'Byte[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@71d41e5c
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@71d41e5c' to type 'Character[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@5d9e7ee0
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@5d9e7ee0' to type 'Double[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@7d412720
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@7d412720' to type 'Float[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@3ad125d0
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@3ad125d0' to type 'Integer[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@5520d576
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@5520d576' to type 'Long[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@4359dba9
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@4359dba9' to type 'Short[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@551acdf3
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@551acdf3' to type 'String[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@92dc361
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@92dc361' to type 'Class[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@424d57e
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@424d57e' to type 'Date[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@109e4fea
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@109e4fea' to type 'Calendar[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@55e214f1
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@55e214f1' to type 'java.io.File[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@673084ca
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@673084ca' to type 'java.sql.Date[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@28f73994
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@28f73994' to type 'java.sql.Time[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@557b3d7e
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@557b3d7e' to type 'java.sql.Timestamp[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@169ecd28
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@169ecd28' to type 'java.net.URL[]'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.TeacherDo@5641143d[typename=<null>,name=<null>,detail=<null>,imageurl=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {name=[Ljava.lang.String;@136adbab, typename=[Ljava.lang.String;@2e4ba253, imageurl=[Ljava.lang.String;@6b436d09, file=[Ljava.lang.String;@55e3d4, detail=[Ljava.lang.String;@45a7d7f6, id=[Ljava.lang.String;@360dbc2b})
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][ConvertUtilsBean.java:481] - Convert string '彭皓珂' to class 'java.lang.String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String' value '彭皓珂' to type 'String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][ConvertUtilsBean.java:481] - Convert string '数论' to class 'java.lang.String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String' value '数论' to type 'String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][ConvertUtilsBean.java:481] - Convert string ';/2017/9/12/b73637e7-db2c-4192-863e-d6d890605656.jpg' to class 'java.lang.String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String' value ';/2017/9/12/b73637e7-db2c-4192-863e-d6d890605656.jpg' to type 'String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][ConvertUtilsBean.java:481] - Convert string '   牛娃课堂数论组，来自浙江大学的记忆天才+全才。他是一个拥有最强大脑的记忆天才，可在2分钟以内记住一副扑克牌，数字记忆力达到国际大师水准。他还是个全才，中学大学时代屡次在数学、物理、生物、计算机等国家级、省级奥林匹克竞赛中获奖。他兴趣广泛，对于基础数学理论、数理逻辑和记忆训练均有深入的实践。                               ' to class 'java.lang.String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String' value '   牛娃课堂数论组，来自浙江大学的记忆天才+全才。他是一个拥有最强大脑的记忆天才，可在2分钟以内记住一副扑克牌，数字记忆力达到国际大师水准。他还是个全才，中学大学时代屡次在数学、物理、生物、计算机等国家级、省级奥林匹克竞赛中获奖。他兴趣广泛，对于基础数学理论、数理逻辑和记忆训练均有深入的实践。                               ' to type 'String'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_teacher(adder,imageurl,adderid,name,detail,typename,addtime,edittime) VALUES(?,?,?,?,?,?,now(),now())
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:88] - 执行保存的参数=[admin, ;/2017/9/12/b73637e7-db2c-4192-863e-d6d890605656.jpg, 1, 彭皓珂, 牛娃课堂数论组，来自浙江大学的记忆天才+全才。他是一个拥有最强大脑的记忆天才，可在2分钟以内记住一副扑克牌，数字记忆力达到国际大师水准。他还是个全才，中学大学时代屡次在数学、物理、生物、计算机等国家级、省级奥林匹克竞赛中获奖。他兴趣广泛，对于基础数学理论、数理逻辑和记忆训练均有深入的实践。, 数论]
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:54   INFO  [http-nio-9999-exec-3][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:08:58   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/status.json,pathInfo=
2017-09-12 16:08:58   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:58   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:58   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:08:58   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:08:58   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:08:59   INFO  [http-nio-9999-exec-9][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:09:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:09:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:09:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:09:12   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:09:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:09:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:09:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:09:13   INFO  [http-nio-9999-exec-3][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:09:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/clazz/page.html,pathInfo=
2017-09-12 16:09:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:09:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:09:17   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:09:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/clazztype/list.json,pathInfo=
2017-09-12 16:09:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:09:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:09:20   INFO  [http-nio-9999-exec-1][ClazztypeRestController.java:96] - 获取分类类型status=-1,关键字=,start=0,limit=10
2017-09-12 16:09:39   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:09:39   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:09:39   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:09:39   INFO  [http-nio-9999-exec-9][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 16:09:39   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:09:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:09:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:09:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:09:45   INFO  [http-nio-9999-exec-6][TeacherController.java:73] - 需要修改密码的权限编号:0
2017-09-12 16:09:45   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:10:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/uploadfile.html,pathInfo=
2017-09-12 16:10:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:16   INFO  [http-nio-9999-exec-2][FileUploadServlet.java:185] - 上传文件本地路径：C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.5948652943261720723.9999//2017/9/12/2a7d7cef-822a-40ad-b531-b3a041a148a2.jpg
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/save.json,pathInfo=
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.TeacherDo@3120431f[typename=<null>,name=<null>,detail=<null>,imageurl=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {name=[Ljava.lang.String;@2f02d3c4, typename=[Ljava.lang.String;@3c22f63, imageurl=[Ljava.lang.String;@1b7e0917, file=[Ljava.lang.String;@28f589dc, detail=[Ljava.lang.String;@1150f3f5, id=[Ljava.lang.String;@3fb6f8b})
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '吴艺娴' to class 'java.lang.String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '吴艺娴' to type 'String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '数论' to class 'java.lang.String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '数论' to type 'String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string ';/2017/9/12/2a7d7cef-822a-40ad-b531-b3a041a148a2.jpg' to class 'java.lang.String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value ';/2017/9/12/2a7d7cef-822a-40ad-b531-b3a041a148a2.jpg' to type 'String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '        牛娃课堂数论组，来自美国Austin数学博士，复旦大学苏步青班的学神姐姐。艺娴最开始学医，出于对数学的热爱转入数学系，并入选苏步青班。她的理想是成为数学家“相较中小学奥数的雕虫小技，数学研究到最后是抽象到虚无，什么都不是，所以我想试一试…….”这也许是中国中小学奥数人口虽多，但却很少有数学家的原因吧。                         ' to class 'java.lang.String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '        牛娃课堂数论组，来自美国Austin数学博士，复旦大学苏步青班的学神姐姐。艺娴最开始学医，出于对数学的热爱转入数学系，并入选苏步青班。她的理想是成为数学家“相较中小学奥数的雕虫小技，数学研究到最后是抽象到虚无，什么都不是，所以我想试一试…….”这也许是中国中小学奥数人口虽多，但却很少有数学家的原因吧。                         ' to type 'String'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:319] -     Using default Long value '0'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_teacher(adder,imageurl,adderid,name,detail,typename,addtime,edittime) VALUES(?,?,?,?,?,?,now(),now())
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[admin, ;/2017/9/12/2a7d7cef-822a-40ad-b531-b3a041a148a2.jpg, 1, 吴艺娴, 牛娃课堂数论组，来自美国Austin数学博士，复旦大学苏步青班的学神姐姐。艺娴最开始学医，出于对数学的热爱转入数学系，并入选苏步青班。她的理想是成为数学家“相较中小学奥数的雕虫小技，数学研究到最后是抽象到虚无，什么都不是，所以我想试一试…….”这也许是中国中小学奥数人口虽多，但却很少有数学家的原因吧。, 数论]
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:28   INFO  [http-nio-9999-exec-1][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:10:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/status.json,pathInfo=
2017-09-12 16:10:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:32   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:10:32   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:32   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:32   INFO  [http-nio-9999-exec-3][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:10:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:10:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:44   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:10:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:10:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:10:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:10:59   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:11:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:11:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:11:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:11:02   INFO  [http-nio-9999-exec-9][TeacherController.java:73] - 需要修改密码的权限编号:3
2017-09-12 16:11:02   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:12:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:12:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:12:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:12:40   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:12:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:12:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:12:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:12:42   INFO  [http-nio-9999-exec-8][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:12:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/edit.html,pathInfo=
2017-09-12 16:12:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:12:43   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:12:43   INFO  [http-nio-9999-exec-3][TeacherController.java:73] - 需要修改密码的权限编号:3
2017-09-12 16:12:44   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:12:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:12:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:12:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:12:47   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:15:41   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:15:41   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:15:41   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:15:41   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:15:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:15:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:15:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:15:42   INFO  [http-nio-9999-exec-6][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:15:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/show.html,pathInfo=
2017-09-12 16:15:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:15:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:15:45   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:15:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-12 16:15:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:15:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:15:54   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:15:55   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-12 16:15:55   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:15:55   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:15:55   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-12 16:16:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:16:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:16:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:16:17   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:16:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:16:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:16:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:16:20   INFO  [http-nio-9999-exec-2][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:16:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/teacher/del.json,pathInfo=
2017-09-12 16:16:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:16:24   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:16:24   INFO  [http-nio-9999-exec-6][TeacherRestController.java:65] - 需要删除的id=3
2017-09-12 16:16:39   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:16:39   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:16:39   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:16:39   INFO  [http-nio-9999-exec-10][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:17:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/teacher/page.html,pathInfo=
2017-09-12 16:17:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:17:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:17:34   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-12 16:17:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/teacher/list.json,pathInfo=
2017-09-12 16:17:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-12 16:17:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-12 16:17:36   INFO  [http-nio-9999-exec-4][TeacherRestController.java:96] - 获取status=-1,关键字=,start=0,limit=10
2017-09-12 16:20:12   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
