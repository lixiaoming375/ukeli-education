2017-09-21 10:05:59   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 4320 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 10:05:59   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 10:05:59   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 10:06:05   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 10:06:05   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 10:06:05   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 10:06:06   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 10:06:06   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 10:06:06   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 10:06:06   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 10:06:10   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 10:06:10   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 10:06:10   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 10:06:10   INFO  [main][StartupInfoLogger.java:57] - Started Application in 13.535 seconds (JVM running for 17.399)
2017-09-21 10:06:45   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 10:06:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-21 10:06:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:06:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :-1
2017-09-21 10:06:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:96] - path=http://localhost:9999,loginUrl=login.html
2017-09-21 10:06:45   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-09-21 10:06:45   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：null
2017-09-21 10:06:47   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/getvm.html,pathInfo=
2017-09-21 10:06:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/login.json,pathInfo=
2017-09-21 10:06:57   INFO  [http-nio-9999-exec-5][CommonController.java:137] - 后台管理员开始登陆:admin
2017-09-21 10:06:57   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：DrZVaz+uXgk=
2017-09-21 10:06:57   INFO  [http-nio-9999-exec-5][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 10:07:00   INFO  [http-nio-9999-exec-5][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-09-21 10:07:00   INFO  [http-nio-9999-exec-5][CommonController.java:170] - 用户登录成功
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: false
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value:  
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: 
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Z@258d98bc
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@258d98bc' to type 'boolean[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [B@5d0bbb2d
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'byte[]' value '[B@5d0bbb2d' to type 'byte[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [C@57190ea
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'char[]' value '[C@57190ea' to type 'char[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [D@68b9b768
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'double[]' value '[D@68b9b768' to type 'double[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [F@21388abb
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'float[]' value '[F@21388abb' to type 'float[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [I@21ea9f62
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'int[]' value '[I@21ea9f62' to type 'int[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [J@2895bd75
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'long[]' value '[J@2895bd75' to type 'long[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [S@d324df8
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'short[]' value '[S@d324df8' to type 'short[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@683a63b7
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@683a63b7' to type 'BigDecimal[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@18258886
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@18258886' to type 'BigInteger[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@3c7ba777
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@3c7ba777' to type 'Boolean[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@6298b75a
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@6298b75a' to type 'Byte[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@3e3c3486
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@3e3c3486' to type 'Character[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@246c12b0
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@246c12b0' to type 'Double[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@4f828da2
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@4f828da2' to type 'Float[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@42a06e04
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@42a06e04' to type 'Integer[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@217014cc
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@217014cc' to type 'Long[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@e3d8895
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@e3d8895' to type 'Short[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@761a199d
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@761a199d' to type 'String[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@59601d3b
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@59601d3b' to type 'Class[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@3bfb5fa2
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@3bfb5fa2' to type 'Date[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@2752ed3c
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@2752ed3c' to type 'Calendar[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@1fe5f305
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@1fe5f305' to type 'java.io.File[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@38085c56
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@38085c56' to type 'java.sql.Date[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@6305a92d
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@6305a92d' to type 'java.sql.Time[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@adea6ca
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@adea6ca' to type 'java.sql.Timestamp[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@57ab9887
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@57ab9887' to type 'java.net.URL[]'
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-5][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:07:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:07:01   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:07:12   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 10:07:12   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:07:12   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:07:12   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:07:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 10:07:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:07:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:07:13   INFO  [http-nio-9999-exec-8][SubjectRestController.java:122] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 10:07:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/edit.html,pathInfo=
2017-09-21 10:07:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:07:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:07:17   INFO  [http-nio-9999-exec-6][SubjectController.java:79] - 需要修改密码的权限编号:13
2017-09-21 10:07:18   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:09:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 10:09:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:09:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:09:02   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:09:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 10:09:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:09:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:09:04   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:90] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 10:09:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 10:09:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:09:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:09:06   INFO  [http-nio-9999-exec-5][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-21 10:09:08   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:09:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 10:09:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:09:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:09:14   INFO  [http-nio-9999-exec-8][KnowledgeController.java:58] - 需要修改knowledge的id:4
2017-09-21 10:09:14   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:136] - 执行更新的参数=[ 基本立体图形, 5,                            
                           , 1, 4,                             本知识点介绍：
一、需掌握相关知识点：区分基本立体几何图形，正方体、长方体、圆、圆柱、棱锥等等，增强观察分析能力，加深对于立体几何图形的理解和认知能力。 
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                            
                                
                           , admin, 摸彩球视频路径aa, 4]
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:09:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:09:20   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:90] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 10:16:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 10:16:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:16:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:16:15   INFO  [http-nio-9999-exec-7][SubjectRestController.java:273] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 10:16:16   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 10:30:00   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 10:33:29   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 4060 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 10:33:29   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 10:33:29   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 10:33:33   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 10:33:33   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 10:33:33   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 10:33:33   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 10:33:33   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 10:33:33   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 10:33:34   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 10:33:37   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 10:33:37   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 10:33:37   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 10:33:38   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.348 seconds (JVM running for 12.313)
2017-09-21 10:33:58   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 10:33:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 10:33:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:33:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:33:59   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:33:59   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 10:34:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 10:34:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:34:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:34:03   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:90] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 10:34:08   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 10:34:08   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:34:08   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:34:08   INFO  [http-nio-9999-exec-2][KnowledgeController.java:58] - 需要修改knowledge的id:4
2017-09-21 10:34:08   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:46:29   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 10:48:34   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 2568 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 10:48:34   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 10:48:34   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 10:48:38   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 10:48:38   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 10:48:38   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 10:48:38   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 10:48:38   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 10:48:38   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 10:48:38   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 10:48:42   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 10:48:42   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 10:48:42   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 10:48:42   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.804 seconds (JVM running for 11.183)
2017-09-21 10:48:58   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 10:48:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 10:48:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:48:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:48:59   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:48:59   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 10:49:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 10:49:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:49:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:49:03   INFO  [http-nio-9999-exec-7][SubjectRestController.java:122] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 10:49:08   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 10:49:08   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:49:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:49:09   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:49:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 10:49:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:49:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:49:10   INFO  [http-nio-9999-exec-9][SubjectRestController.java:122] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 10:56:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 10:56:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:56:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:56:19   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 10:56:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 10:56:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 10:56:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 10:56:21   INFO  [http-nio-9999-exec-7][SubjectRestController.java:122] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 11:08:46   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7084 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 11:08:46   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 11:08:46   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 11:08:51   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 11:08:51   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 11:08:51   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 11:08:51   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 11:08:51   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 11:08:51   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 11:08:51   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 11:08:55   ERROR [main][DirectJDKLog.java:181] - Failed to start end point associated with ProtocolHandler [http-nio-9999]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_121]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at cn.javaworker.yeming.Application.main(Application.java:35) [classes/:?]
2017-09-21 11:08:55   ERROR [main][DirectJDKLog.java:181] - Failed to start connector [Connector[HTTP/1.1-9999]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9999]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at cn.javaworker.yeming.Application.main(Application.java:35) [classes/:?]
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 13 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_121]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 13 more
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-9999"]
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - Stopping service Tomcat
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-9999"]
2017-09-21 11:08:55   INFO  [main][DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-9999"]
2017-09-21 11:09:03   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 11:09:18   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6332 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 11:09:18   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 11:09:18   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 11:09:22   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 11:09:22   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 11:09:22   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 11:09:22   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 11:09:22   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 11:09:22   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 11:09:22   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 11:09:26   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 11:09:26   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 11:09:26   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 11:09:26   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.504 seconds (JVM running for 12.7)
2017-09-21 12:11:15   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 12:11:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 12:11:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:11:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:11:16   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:11:16   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 12:11:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 12:11:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:11:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:11:19   INFO  [http-nio-9999-exec-9][SubjectRestController.java:122] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 12:11:22   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/edit.html,pathInfo=
2017-09-21 12:11:22   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:11:22   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:11:22   INFO  [http-nio-9999-exec-2][SubjectController.java:79] - 需要修改密码的权限编号:13
2017-09-21 12:11:23   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:11:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 12:11:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:11:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:11:49   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:11:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 12:11:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:11:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:11:51   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:90] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 12:11:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 12:11:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:11:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:11:54   INFO  [http-nio-9999-exec-3][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-21 12:11:54   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:22:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 12:22:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:22:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:22:20   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:22:25   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 12:22:25   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:22:25   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:22:25   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:90] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 12:22:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:22:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:22:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:22:29   INFO  [http-nio-9999-exec-8][SubjectRestController.java:273] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 12:22:30   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 12:22:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:22:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:22:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:22:35   INFO  [http-nio-9999-exec-9][SubjectRestController.java:273] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 12:22:37   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-21 12:22:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 12:22:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:22:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:22:40   INFO  [http-nio-9999-exec-4][KnowledgeController.java:58] - 需要修改knowledge的id:4
2017-09-21 12:22:50   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:23:18   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 12:23:18   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:18   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:18   INFO  [http-nio-9999-exec-3][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-21 12:23:18   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:23:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 12:23:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:19   INFO  [http-nio-9999-exec-1][SubjectRestController.java:402] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 12:23:19   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:25   INFO  [http-nio-9999-exec-7][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:25   INFO  [http-nio-9999-exec-5][SubjectRestController.java:402] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 12:23:26   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:35   INFO  [http-nio-9999-exec-3][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:35   INFO  [http-nio-9999-exec-1][SubjectRestController.java:402] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 12:23:35   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:40   INFO  [http-nio-9999-exec-2][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:40   INFO  [http-nio-9999-exec-8][SubjectRestController.java:402] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 12:23:40   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 12:23:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:23:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:23:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:23:47   INFO  [http-nio-9999-exec-4][SubjectRestController.java:273] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 12:23:48   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 12:49:18   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6692 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 12:49:18   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 12:49:18   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 12:49:21   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 12:49:21   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 12:49:21   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 12:49:21   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 12:49:21   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 12:49:21   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 12:49:22   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 12:49:25   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 12:49:25   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 12:49:25   ERROR [main][DirectJDKLog.java:181] - Failed to start end point associated with ProtocolHandler [http-nio-9999]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_121]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at cn.javaworker.yeming.Application.main(Application.java:35) [classes/:?]
2017-09-21 12:49:26   ERROR [main][DirectJDKLog.java:181] - Failed to start connector [Connector[HTTP/1.1-9999]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9999]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at cn.javaworker.yeming.Application.main(Application.java:35) [classes/:?]
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 13 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_121]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 13 more
2017-09-21 12:49:26   INFO  [main][DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-9999"]
2017-09-21 12:49:26   INFO  [main][DirectJDKLog.java:179] - Stopping service Tomcat
2017-09-21 12:49:26   INFO  [main][DirectJDKLog.java:179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2017-09-21 12:49:26   INFO  [main][DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-9999"]
2017-09-21 12:49:26   INFO  [main][DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-9999"]
2017-09-21 12:49:33   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 12:49:45   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7424 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 12:49:45   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 12:49:45   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 12:49:50   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 12:49:50   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 12:49:50   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 12:49:50   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 12:49:50   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 12:49:50   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 12:49:50   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 12:49:54   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 12:49:54   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 12:49:54   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 12:49:54   INFO  [main][StartupInfoLogger.java:57] - Started Application in 10.009 seconds (JVM running for 13.12)
2017-09-21 12:50:07   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 12:50:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 12:50:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:50:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:50:09   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:50:09   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 12:50:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 12:50:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:50:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:50:14   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 12:52:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 12:52:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:52:32   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:52:32   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:52:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 12:52:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:52:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:52:35   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 12:52:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:52:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:52:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:52:40   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 12:52:42   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 12:52:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-21 12:52:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:52:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:52:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:52:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:52:59   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:52:59   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 12:52:59   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 12:53:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 12:53:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:53:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:53:03   INFO  [http-nio-9999-exec-5][KnowledgeController.java:59] - 需要修改knowledge的id:5
2017-09-21 12:53:10   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:53:25   INFO  [http-nio-9999-exec-2][KnowledgeController.java:125] - 需要绑定题目的考试编号:2
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:53:25   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:53:25   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 12:53:26   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 12:59:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:59:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:17   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 12:59:18   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-21 12:59:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 12:59:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:20   INFO  [http-nio-9999-exec-2][KnowledgeController.java:59] - 需要修改knowledge的id:3
2017-09-21 12:59:22   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:136] - 执行更新的参数=[点线角, 6,                            
                           , 1, 4,                              本知识点介绍：
一、需掌握相关知识点：几何基本元素点、线和角的认识，学习基本的平面几何知识，为后面的学习打好基础。
二、本知识点共包括31道题目，具体为例题7道，随堂练习14道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                               
                                
                           , admin, wevcwvrwv, 3]
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:29   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 12:59:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:59:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:34   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:34   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 12:59:35   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-21 12:59:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 12:59:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:40   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:40   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:40   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 12:59:40   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 9, 10 )
2017-09-21 12:59:40   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 12:59:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 12:59:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 12:59:45   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 12:59:47   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-21 12:59:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 12:59:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 12:59:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:00:01   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:00:01   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:00:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:00:01   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:00:01   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:00:01   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 9 )
2017-09-21 13:00:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:00:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:00:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:00:07   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 13:00:11   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-21 13:00:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:00:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:00:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:00:15   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:00:16   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 9 )
2017-09-21 13:01:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:01:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:18   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 13:01:19   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 13:01:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:01:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:26   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:26   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:26   INFO  [http-nio-9999-exec-5][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:01:26   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:01:26   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 9 )
2017-09-21 13:01:32   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:01:32   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:32   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:32   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:01:33   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 9 )
2017-09-21 13:01:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:01:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:39   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:40   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:40   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:40   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:40   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:01:40   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:01:41   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 9 )
2017-09-21 13:01:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:01:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:01:48   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 13:01:49   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-21 13:01:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:01:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:01:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:03   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:02:03   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:03   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:07   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:07   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:07   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:02:07   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:02:07   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5 )
2017-09-21 13:02:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:02:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:13   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:02:13   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5 )
2017-09-21 13:02:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:02:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:17   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 13:02:18   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-21 13:02:31   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 13:02:31   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:31   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:31   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:02:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 13:02:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:34   INFO  [http-nio-9999-exec-4][SubjectRestController.java:123] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 13:02:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-21 13:02:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:39   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:02:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 13:02:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:43   INFO  [http-nio-9999-exec-6][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 13:02:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:02:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:47   INFO  [http-nio-9999-exec-1][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 13:02:47   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 4, 10 )
2017-09-21 13:02:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:02:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:54   INFO  [http-nio-9999-exec-9][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 13:02:56   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-21 13:02:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:02:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:02:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:02:59   INFO  [http-nio-9999-exec-7][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 13:03:00   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 4, 10 )
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:03   INFO  [http-nio-9999-exec-2][ExamController.java:116] - 需要绑定题目的考试编号:2
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:03   INFO  [http-nio-9999-exec-3][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 13:03:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-21 13:03:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:08   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:09   INFO  [http-nio-9999-exec-5][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:09   INFO  [http-nio-9999-exec-4][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:09   INFO  [http-nio-9999-exec-6][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 13:03:09   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-21 13:03:10   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 4 )
2017-09-21 13:03:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-21 13:03:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:17   INFO  [http-nio-9999-exec-9][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:17   INFO  [http-nio-9999-exec-7][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:17   INFO  [http-nio-9999-exec-2][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 13:03:17   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 4 )
2017-09-21 13:03:18   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-21 13:03:21   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:03:21   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:21   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:21   INFO  [http-nio-9999-exec-8][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 13:03:21   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:24   INFO  [http-nio-9999-exec-3][ExamController.java:116] - 需要绑定题目的考试编号:1
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:24   INFO  [http-nio-9999-exec-4][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-21 13:03:24   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-21 13:03:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/bindSubject.json,pathInfo=
2017-09-21 13:03:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:30   INFO  [http-nio-9999-exec-5][ExamRestController.java:335] - 需要绑定的id=3
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:31   INFO  [http-nio-9999-exec-6][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:31   INFO  [http-nio-9999-exec-1][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:31   INFO  [http-nio-9999-exec-9][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-21 13:03:32   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 4, 10 )
2017-09-21 13:03:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:03:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:38   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:03:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:03:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:03:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:03:40   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:13:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:13:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:13:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:13:20   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:13:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:13:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:13:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:13:21   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:13:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:13:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:13:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:13:24   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:13:24   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5 )
2017-09-21 13:13:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:13:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:13:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:13:26   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 13:13:26   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9, 10 )
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:19   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 13:14:19   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:14:20   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9 )
2017-09-21 13:14:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:14:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:28   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 13:14:29   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 13:14:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:14:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:33   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 13:14:34   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-21 13:14:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:14:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:14:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:48   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:14:48   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:14:48   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:48   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:48   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 13:14:49   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9 )
2017-09-21 13:14:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:14:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:14:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:14:57   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 13:14:57   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:01   INFO  [http-nio-9999-exec-7][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:01   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 13:15:01   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:15:12   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:15:12   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:12   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:12   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:2
2017-09-21 13:15:12   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:15:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:15:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:13   INFO  [http-nio-9999-exec-8][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:15:13   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:15:18   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 13:15:18   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:18   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:18   INFO  [http-nio-9999-exec-1][KnowledgeController.java:59] - 需要修改knowledge的id:2
2017-09-21 13:15:20   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:15:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 13:15:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:31   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 13:15:31   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 13:15:31   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[认识时间（1）, 6,                            
                           , 1, 4,                                                                                                                                    本知识点介绍：
一、需掌握相关知识点：能看着钟表说出时间、时间的基本单位（秒、分钟、小时）、单位间的换算、时间段的计算等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                         
                                
                                
                                
                           , admin, 认识时间视频路径sdffffff, 2]
2017-09-21 13:15:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:15:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:32   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:15:35   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:15:35   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:15:35   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:15:35   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:15:35   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5 )
2017-09-21 13:17:07   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 13:17:07   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:07   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:09   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:09   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:09   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:17:09   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:17:11   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:19   INFO  [http-nio-9999-exec-6][KnowledgeController.java:125] - 需要绑定题目的考试编号:2
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:19   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:17:20   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:32   INFO  [http-nio-9999-exec-10][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:32   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:32   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 13:17:32   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:53   INFO  [http-nio-9999-exec-9][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:17:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:17:53   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 13:17:55   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:19:37   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 13:19:48   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7848 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 13:19:48   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 13:19:48   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 13:19:52   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 13:19:52   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 13:19:52   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 13:19:52   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 13:19:52   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 13:19:52   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 13:19:52   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 13:19:56   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 13:19:56   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 13:19:56   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 13:19:56   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.939 seconds (JVM running for 12.029)
2017-09-21 13:20:23   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 13:20:23   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:20:23   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:20:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:20:24   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:20:24   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 13:20:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:20:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:20:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:20:29   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:20:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:20:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:20:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:20:33   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 13:20:33   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:20:38   INFO  [http-nio-9999-exec-3][KnowledgeController.java:125] - 需要绑定题目的考试编号:2
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:20:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:20:38   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 13:20:38   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:22:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-21 13:22:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:22:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:22:13   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:22:15   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 13:22:15   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:22:15   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:22:15   INFO  [http-nio-9999-exec-4][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 13:22:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/product/page.html,pathInfo=
2017-09-21 13:22:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:22:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:22:20   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:22:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/product/list.json,pathInfo=
2017-09-21 13:22:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:22:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:22:22   INFO  [http-nio-9999-exec-5][ProductRestController.java:99] - 获取产品名称status=-1,关键字=,start=0,limit=10
2017-09-21 13:27:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/product/page.html,pathInfo=
2017-09-21 13:27:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:29   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:27:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/product/list.json,pathInfo=
2017-09-21 13:27:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:31   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:31   INFO  [http-nio-9999-exec-2][ProductRestController.java:99] - 获取产品名称status=-1,关键字=,start=0,limit=10
2017-09-21 13:27:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:27:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:36   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:36   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:27:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:27:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:38   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:40   INFO  [http-nio-9999-exec-10][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:40   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 13:27:41   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:27:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:27:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:45   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:45   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:27:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:27:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:47   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:47   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:50   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:27:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:27:50   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 13:27:50   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:37:07   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:37:07   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:37:07   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:37:07   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:37:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:37:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:37:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:37:11   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:37:30   INFO  [http-nio-9999-exec-2][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:37:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:37:30   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 13:37:30   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 13:38:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 13:38:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:38:54   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:38:54   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:38:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 13:38:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:38:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:38:56   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 13:38:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 13:38:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:38:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:38:58   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 13:38:59   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 7, 3, 10, 9 )
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:39:03   INFO  [http-nio-9999-exec-8][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 13:39:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 13:39:03   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 13:39:03   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:05:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:05:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:05:36   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:05:36   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:05:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:05:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:05:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:05:38   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:05:40   INFO  [http-nio-9999-exec-2][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:05:40   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:05:40   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:05:40   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:07:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:07:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:07:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:07:56   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:07:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:07:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:07:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:07:58   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:08:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:08:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:00   INFO  [http-nio-9999-exec-3][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:08:00   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:08:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:08:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:01   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:08:01   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:13   INFO  [http-nio-9999-exec-9][KnowledgeController.java:125] - 需要绑定题目的考试编号:2
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:13   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 14:08:13   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:23   INFO  [http-nio-9999-exec-2][KnowledgeController.java:125] - 需要绑定题目的考试编号:2
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:23   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 14:08:23   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:08:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 14:08:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:27   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:305] - 需要绑定的id=13,12,9,10,8,5,3,7,1
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:28   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:28   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:28   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 14:08:29   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:08:29   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 14:08:37   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:08:37   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:37   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:37   INFO  [http-nio-9999-exec-9][KnowledgeController.java:59] - 需要修改knowledge的id:2
2017-09-21 14:08:37   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:08:42   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 14:08:42   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:42   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:42   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 14:08:42   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 14:08:42   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[认识时间（1）, 6,                                                       
                           
                           , 1, 4,                                                                                                                                                                本知识点介绍：
一、需掌握相关知识点：能看着钟表说出时间、时间的基本单位（秒、分钟、小时）、单位间的换算、时间段的计算等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                         
                                
                                
                                
                           
                           , admin, 认识时间视频路径sdffff, 2]
2017-09-21 14:08:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:08:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:43   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:08:45   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:08:45   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:45   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:45   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:08:46   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9 )
2017-09-21 14:08:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:08:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:52   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:52   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:08:52   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:08:52   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 14:08:53   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:08:53   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 14:09:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:09:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:09:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:09:01   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:09:02   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9 )
2017-09-21 14:09:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:09:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:09:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:09:38   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:09:38   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:09:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:09:38   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=2
2017-09-21 14:09:39   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:09:39   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 10, 9, 12, 13 )
2017-09-21 14:10:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:10:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:10:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:10:59   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:11:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:11:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:01   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:11:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:11:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:04   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:11:04   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 9 )
2017-09-21 14:11:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:10   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:10   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:11:10   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 9 )
2017-09-21 14:11:13   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:11:13   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:13   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:13   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:11:13   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 9 )
2017-09-21 14:11:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:11:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:11:20   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:11:20   INFO  [http-nio-9999-exec-6][KnowledgeController.java:59] - 需要修改knowledge的id:2
2017-09-21 14:11:21   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:12:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:12:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:19   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 14:12:19   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 10, 9, 12, 13 )
2017-09-21 14:12:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:12:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:21   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:12:22   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9 )
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:26   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:26   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:26   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:12:27   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 5, 8, 9 )
2017-09-21 14:12:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:12:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:30   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:12:30   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 5, 8, 9 )
2017-09-21 14:12:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:12:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:48   INFO  [http-nio-9999-exec-5][KnowledgeController.java:59] - 需要修改knowledge的id:1
2017-09-21 14:12:49   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[摸彩球, 5,                            
                           , 1, 3,                             本知识点介绍：
一、需掌握相关知识点：对可能性、可能性大小、可能的情况的认识，学会判断可能性的大小以及列举出可能发生的情况等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                                
                           , admin, sacsacdevwec, 1]
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:12:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:12:56   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:13:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:13:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:00   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-21 14:13:00   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 14:13:03   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:13:03   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:03   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:03   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 14:13:04   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 10, 9, 12, 13 )
2017-09-21 14:13:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:13:17   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:18   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:18   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 14:13:18   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 10, 9, 12, 13 )
2017-09-21 14:13:24   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:13:25   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:25   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:25   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:13:25   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 9 )
2017-09-21 14:13:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:13:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:32   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:13:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:33   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:13:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:13:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:33   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:13:33   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 9 )
2017-09-21 14:13:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:13:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:36   INFO  [http-nio-9999-exec-9][KnowledgeController.java:59] - 需要修改knowledge的id:1
2017-09-21 14:13:36   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:40   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:1
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:40   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:40   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-21 14:13:40   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:13:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:13:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:13:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:13:58   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-21 14:13:58   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype =7 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-09-21 14:14:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:14:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:03   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-21 14:14:03   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype =8 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-09-21 14:14:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:14:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:14   INFO  [http-nio-9999-exec-5][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=测试,start=0,limit=10,knowledgeId=1
2017-09-21 14:14:14   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and (s.name like ? ) and s.slock =?  and sv.vtype =8 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-09-21 14:14:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:14:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:17   INFO  [http-nio-9999-exec-8][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=测试,start=0,limit=10,knowledgeId=1
2017-09-21 14:14:17   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and (s.name like ? ) and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:14:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:14:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:19   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:19   INFO  [http-nio-9999-exec-2][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=测试,start=0,limit=10,knowledgeId=1
2017-09-21 14:14:19   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and (s.name like ? ) and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:14:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:14:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:24   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-21 14:14:24   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:14:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 14:14:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:35   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:305] - 需要绑定的id=13,12,9,10,8,5,3,7,1
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:35   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:35   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=1
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:14:35   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:14:35   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=1
2017-09-21 14:14:36   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:14:36   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 14:21:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:21:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:21:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:21:48   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:21:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:21:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:21:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:21:50   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:22:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:22:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:22:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:22:08   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:22:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:22:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:22:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:22:09   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:22:14   INFO  [http-nio-9999-exec-2][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:22:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:22:14   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:22:14   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:22:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:22:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:22:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:22:56   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:22:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:22:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:22:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:22:57   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:23:00   INFO  [http-nio-9999-exec-7][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:23:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:23:00   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:23:00   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:23:15   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:23:15   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:23:15   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:23:15   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:23:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:23:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:23:17   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:23:17   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:23:19   INFO  [http-nio-9999-exec-1][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:23:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:23:20   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:23:20   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:24:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:24:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:24:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:24:56   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:24:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:24:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:24:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:24:58   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:00   INFO  [http-nio-9999-exec-9][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:00   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:25:00   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:25:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:25:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:20   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:25:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:25:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:22   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:24   INFO  [http-nio-9999-exec-7][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:24   INFO  [http-nio-9999-exec-8][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:25:24   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:25:43   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:25:43   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:43   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:43   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:25:45   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:25:45   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:45   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:45   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:47   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:25:47   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:25:47   INFO  [http-nio-9999-exec-5][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:25:47   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:27:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:27:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:30   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:27:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:27:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:32   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:34   INFO  [http-nio-9999-exec-8][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:34   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:27:34   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:27:41   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 14:27:41   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:41   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:41   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:305] - 需要绑定的id=13,12,8,1
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:42   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:42   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:42   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:27:42   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:27:42   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 12, 13, 5, 7, 3, 10, 9 )
2017-09-21 14:27:46   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:27:46   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:46   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:46   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:27:47   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 5, 8, 9 )
2017-09-21 14:27:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:27:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:48   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:48   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 14:27:49   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 9 )
2017-09-21 14:27:53   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:27:53   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:53   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:54   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:54   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:27:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:27:54   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:27:55   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:27:55   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 12, 13, 7, 3, 10, 9 )
2017-09-21 14:28:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:28:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:28:21   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:28:21   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:28:21   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 5, 8, 9 )
2017-09-21 14:28:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:28:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:28:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:28:29   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:28:29   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:28:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:28:29   INFO  [http-nio-9999-exec-2][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 14:28:29   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:28:29   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 12, 13, 7, 10, 9 )
2017-09-21 14:35:19   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 14:35:30   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7028 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 14:35:30   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 14:35:30   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 14:35:34   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 14:35:34   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 14:35:34   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 14:35:34   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 14:35:34   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 14:35:34   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 14:35:34   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 14:35:38   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 14:35:38   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 14:35:38   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 14:35:38   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.323 seconds (JVM running for 12.446)
2017-09-21 14:35:48   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 14:35:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:35:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:35:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:35:49   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:35:49   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 14:35:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:35:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:35:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:35:53   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:36:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:36:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:01   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:36:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:36:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:05   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:36:06   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 12, 13, 7, 10, 9 )
2017-09-21 14:36:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:36:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:36:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:16   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:36:16   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:36:16   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:16   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:16   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:36:22   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 7, 10, 9 )
2017-09-21 14:36:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:36:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:29   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:36:30   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 5, 8, 9 )
2017-09-21 14:36:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:36:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:31   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 14:36:31   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:36:32   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:36:32   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:32   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:32   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:36:32   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:36:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 14:36:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:41   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:306] - 需要绑定的id=13,12,10,1
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:42   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:42   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:42   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:36:42   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 10, 12, 13, 3, 7, 5, 8, 9 )
2017-09-21 14:36:43   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:36:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:36:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:50   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:36:50   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 10, 12, 13, 3, 7, 5, 8, 9 )
2017-09-21 14:36:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:36:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:36:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:36:52   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:36:52   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 7, 10, 9 )
2017-09-21 14:37:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:37:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:29   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:29   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:29   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:29   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:37:29   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:37:29   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 14:37:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:37:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:46   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:37:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:37:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:49   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:37:52   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:37:52   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:52   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:52   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:37:52   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 7, 10, 9 )
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:56   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:56   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:37:57   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 14:37:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:37:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:37:59   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:37:59   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:37:59   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:15   INFO  [http-nio-9999-exec-6][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:15   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:38:15   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:38:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:38:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:27   INFO  [http-nio-9999-exec-5][KnowledgeController.java:59] - 需要修改knowledge的id:4
2017-09-21 14:38:28   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-3][MysqlDialectImpl.java:136] - 执行更新的参数=[ 基本立体图形, 5,                                                       
                           
                           , 1, 4,                                                         本知识点介绍：
一、需掌握相关知识点：区分基本立体几何图形，正方体、长方体、圆、圆柱、棱锥等等，增强观察分析能力，加深对于立体几何图形的理解和认知能力。 
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                            
                                
                           
                           , admin, aaaaaaaaaaaaaa, 4]
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:34   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:38:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:38:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:35   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:38:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:38:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:38:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:38:40   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:38:40   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 14:39:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:39:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:39:37   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:39:37   INFO  [http-nio-9999-exec-5][KnowledgeController.java:59] - 需要修改knowledge的id:5
2017-09-21 14:39:37   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:39:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:39:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:39:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:39:52   INFO  [http-nio-9999-exec-4][KnowledgeController.java:59] - 需要修改knowledge的id:4
2017-09-21 14:39:53   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[ 基本立体图形, 6,                                                                                  
                           
                           
                           , 1, 3,                                                                                     本知识点介绍：
一、需掌握相关知识点：区分基本立体几何图形，正方体、长方体、圆、圆柱、棱锥等等，增强观察分析能力，加深对于立体几何图形的理解和认知能力。 
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                            
                                
                           
                           
                           , admin, aaaaaaaaaaaaaa, 4]
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:39:59   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:40:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:40:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:01   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:01   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:40:04   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:40:04   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:04   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:04   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:40:04   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:06   INFO  [http-nio-9999-exec-2][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:06   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:06   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:40:06   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:10   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:306] - 需要绑定的id=7
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:10   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:10   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:10   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 14:40:11   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 14:40:11   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 14:40:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 14:40:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:17   INFO  [http-nio-9999-exec-3][KnowledgeController.java:59] - 需要修改knowledge的id:4
2017-09-21 14:40:18   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:136] - 执行更新的参数=[ 基本立体图形, 6,                                                                                                             
                           
                           
                           
                           , 1, 4,                                                                                                                 本知识点介绍：
一、需掌握相关知识点：区分基本立体几何图形，正方体、长方体、圆、圆柱、棱锥等等，增强观察分析能力，加深对于立体几何图形的理解和认知能力。 
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                            
                                
                           
                           
                           
                           , admin, aaaaaaaaaaaaaa, 4]
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:23   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 14:40:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 14:40:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:25   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 14:40:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:40:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:33   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 14:40:33   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 14:40:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 14:40:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 14:40:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 14:40:41   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 14:40:41   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 15:26:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:26:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:37   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:37   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:26:39   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:26:39   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:40   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:26:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:26:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:42   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:26:42   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 15:26:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:26:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:45   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:26:45   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 1, 10, 12, 13, 3, 5, 8, 9 )
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:47   INFO  [http-nio-9999-exec-10][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:47   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:47   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:26:47   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:26:51   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:26:51   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:51   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:51   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:26:51   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:56   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:56   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:56   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:26:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:26:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:57   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:26:57   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:26:57   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 1, 10, 12, 13, 3, 5, 9 )
2017-09-21 15:26:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:26:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:26:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:26:59   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:27:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:27:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:27:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:27:07   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:27:08   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 15:28:09   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 15:28:20   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6776 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 15:28:20   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 15:28:20   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 15:28:24   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 15:28:24   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 15:28:24   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 15:28:24   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 15:28:24   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 15:28:24   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 15:28:24   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 15:28:28   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 15:28:28   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 15:28:28   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 15:28:28   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.025 seconds (JVM running for 11.79)
2017-09-21 15:28:36   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 15:28:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:28:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:37   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:37   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:28:37   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 15:28:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:28:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:40   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:40   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:28:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:28:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:43   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:28:43   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 15:28:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:28:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:45   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:45   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:28:45   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 1, 10, 12, 13, 3, 5, 9 )
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:49   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:49   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:28:50   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 3, 5, 9 )
2017-09-21 15:28:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:28:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:53   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:28:53   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 3, 5, 9 )
2017-09-21 15:28:55   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:28:55   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:55   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:55   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:28:55   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 12, 13, 10, 9 )
2017-09-21 15:28:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:28:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:28:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:58   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:28:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:28:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:28:59   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:28:59   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:28:59   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12, 13, 10, 9 )
2017-09-21 15:29:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:02   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:29:02   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12, 13, 10, 9 )
2017-09-21 15:29:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 15:29:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:04   INFO  [http-nio-9999-exec-10][KnowledgeController.java:59] - 需要修改knowledge的id:5
2017-09-21 15:29:05   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[摸彩球, 5,                                                                                                             <p><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述ddd</span></p>                           
                           
                           
                           
                           
                           , 1, 4,                                                                                                                                             一、需掌握相关知识点：对可能性、可能性大小、可能的情况的认识，学会判断可能性的大小以及列举出可能发生的情况等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                           
                           
                           
                           
                           , admin, 摸彩球视频路径1, 5]
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:10   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:29:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:15   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:29:15   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12, 13, 10, 9 )
2017-09-21 15:29:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:29:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:18   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:29:18   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:18   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:18   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:29:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:18   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:29:18   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12, 13, 10 )
2017-09-21 15:29:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:21   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:29:21   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 3, 5, 9 )
2017-09-21 15:29:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:29:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:29:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:26   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:29:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:26   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:29:26   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 5, 9 )
2017-09-21 15:29:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:30   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:30   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:29:31   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 5, 9 )
2017-09-21 15:29:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 15:29:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:34   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:34   INFO  [http-nio-9999-exec-3][KnowledgeController.java:59] - 需要修改knowledge的id:4
2017-09-21 15:29:34   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-10][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-10][MysqlDialectImpl.java:136] - 执行更新的参数=[ 基本立体图形, 6,                                                                                                                                        
                           
                           
                           
                           
                           , 1, 4,                                                                                                                                             本知识点介绍：
一、需掌握相关知识点：区分基本立体几何图形，正方体、长方体、圆、圆柱、棱锥等等，增强观察分析能力，加深对于立体几何图形的理解和认知能力。 
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                            
                                
                           
                           
                           
                           
                           , admin, aaaaaaaaaaaaaa1, 4]
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:53   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:53   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:29:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:29:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:29:57   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:29:57   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:29:57   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12, 13, 10 )
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:00   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:00   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:30:00   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12, 13 )
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:15   INFO  [http-nio-9999-exec-8][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:15   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:30:15   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:21   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:306] - 需要绑定的id=9,10,8,5,3,7,1
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:21   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:21   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:21   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:21   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:30:22   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:30:22   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 15:30:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:30:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:26   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:30:26   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 15:30:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:30:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:28   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:28   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:30:28   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 5, 9 )
2017-09-21 15:30:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:30:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:30   INFO  [http-nio-9999-exec-9][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 15:30:30   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:30:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:30:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:31   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:31   INFO  [http-nio-9999-exec-5][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:30:31   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:38   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:38   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:38   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:30:39   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:30:39   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 9 )
2017-09-21 15:30:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:30:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:30:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:30:41   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:30:42   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 9 )
2017-09-21 15:32:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:32:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:38   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:32:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:32:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:40   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:32:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:32:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:44   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:32:44   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:49   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:49   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:49   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:32:50   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 15:32:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 15:32:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:52   INFO  [http-nio-9999-exec-4][KnowledgeController.java:59] - 需要修改knowledge的id:5
2017-09-21 15:32:52   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[摸彩球, 5,                                                                                                                                        <p><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述ddd</span></p>                           
                           
                           
                           
                           
                           
                           , 1, 4,                                                                                                                                                                         一、需掌握相关知识点：对可能性、可能性大小、可能的情况的认识，学会判断可能性的大小以及列举出可能发生的情况等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                           
                           
                           
                           
                           
                           , admin, 摸彩球视频路径, 5]
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:32:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:32:59   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:33:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:01   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:01   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:33:01   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 12, 13, 9 )
2017-09-21 15:33:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:33:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:05   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:33:05   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:05   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:05   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:33:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:05   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:05   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:33:05   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:33:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:07   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:33:08   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:33:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:09   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 15:33:09   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 9 )
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:12   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:12   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 15:33:13   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 9 )
2017-09-21 15:33:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:33:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:17   INFO  [http-nio-9999-exec-7][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 15:33:17   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:33:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:33:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:18   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:33:18   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:33:21   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:33:21   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:21   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:22   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:306] - 需要绑定的id=1
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:22   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:22   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:22   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:22   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:33:22   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:33:22   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 12, 13 )
2017-09-21 15:33:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:27   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:27   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:33:27   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:30   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:30   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:30   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:33:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:33:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:31   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:31   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:33:31   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:33:31   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 12, 13 )
2017-09-21 15:33:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:41   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:41   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:33:41   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:33:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:33:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:45   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:45   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:45   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:45   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:33:45   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:33:45   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 12, 13 )
2017-09-21 15:33:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:33:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:33:58   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:33:58   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:33:58   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:34:04   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:34:04   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:04   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:08   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:08   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:34:09   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 12, 13 )
2017-09-21 15:34:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:22   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:34:23   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:34:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:25   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:34:25   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 12, 13 )
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:30   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:30   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:30   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:34:31   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:34:31   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 12, 13 )
2017-09-21 15:34:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:33   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:33   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:34:33   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:38   INFO  [http-nio-9999-exec-8][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:38   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:34:38   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:34:43   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:34:43   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:43   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:43   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:306] - 需要绑定的id=8,5,3,7,1
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:44   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:44   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:44   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:34:44   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:34:44   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:34:48   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:48   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:48   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:48   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:34:48   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:34:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:34:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:34:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:34:59   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:34:59   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 12, 13 )
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:02   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:02   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:02   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:35:02   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:35:02   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:35:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:06   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:35:06   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:35:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:33   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:33   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:35:34   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 12, 13 )
2017-09-21 15:35:35   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:35   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:35   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:35   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:35:36   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:38   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:38   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:38   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:35:38   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:35:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:35:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:42   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:306] - 需要绑定的id=3
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:43   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:43   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:43   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:43   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:35:43   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:35:43   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:35:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:50   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:35:50   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 12, 13 )
2017-09-21 15:35:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:35:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:54   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:55   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:55   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:35:55   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:35:55   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:35:55   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:35:55   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:36:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:36:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:36:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:36:46   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:36:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:36:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:36:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:36:48   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:36:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:36:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:36:53   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:36:53   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:36:53   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 12, 13 )
2017-09-21 15:36:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:36:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:36:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:36:56   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:36:56   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:37:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-21 15:37:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:03   INFO  [http-nio-9999-exec-1][KnowledgeController.java:59] - 需要修改knowledge的id:4
2017-09-21 15:37:03   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:37:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-21 15:37:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:08   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 15:37:08   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-21 15:37:09   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:136] - 执行更新的参数=[ 基本立体图形, 6,                                                                                                                                                                   
                           
                           
                           
                           
                           
                           , 1, 4,                                                                                                                                                                         本知识点介绍：
一、需掌握相关知识点：区分基本立体几何图形，正方体、长方体、圆、圆柱、棱锥等等，增强观察分析能力，加深对于立体几何图形的理解和认知能力。 
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                            
                                
                           
                           
                           
                           
                           
                           , admin, aaaaaaaaaaaaaa, 4]
2017-09-21 15:37:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:37:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:09   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:37:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:15   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:37:15   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 12, 13 )
2017-09-21 15:37:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:37:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:21   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:37:21   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:21   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:21   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:37:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:21   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:21   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:37:21   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 12, 13 )
2017-09-21 15:37:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:24   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=3
2017-09-21 15:37:24   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 9 )
2017-09-21 15:37:27   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:27   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:27   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:27   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:37:27   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:29   INFO  [http-nio-9999-exec-5][KnowledgeController.java:125] - 需要绑定题目的考试编号:4
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:29   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:37:29   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:37:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:37:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:32   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:306] - 需要绑定的id=3
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:33   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:33   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:33   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:37:33   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:37:33   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:37:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:40   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:40   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=2
2017-09-21 15:37:41   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 10, 9, 12, 13 )
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:44   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:44   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:37:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:37:44   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=4
2017-09-21 15:37:44   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:37:44   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:38:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:38:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:36   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:36   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:38:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:38:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:38   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:38:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:38:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:42   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:42   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:38:43   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:38:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:38:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:44   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:44   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:38:45   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 12, 13 )
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:48   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:48   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:38:48   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 12, 13 )
2017-09-21 15:38:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:38:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:50   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:50   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:38:50   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:54   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:54   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:38:55   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:58   INFO  [http-nio-9999-exec-5][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:38:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:38:58   INFO  [http-nio-9999-exec-2][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:38:58   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:39:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:39:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:03   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:04   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:306] - 需要绑定的id=9,10,5,3,1
2017-09-21 15:39:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:39:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:04   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:39:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:39:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:04   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:39:04   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 3, 5, 10, 9, 7, 8, 12, 13 )
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:20   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:20   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:20   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:39:20   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:39:39   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:39:39   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:39   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:39   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:39:39   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:46   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:39:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:39:46   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:39:47   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 10, 9, 7, 8, 12, 13 )
2017-09-21 15:40:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:40:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:40:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:40:09   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:40:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:40:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:40:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:40:11   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:40:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:40:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:40:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:40:15   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:40:15   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 5, 10, 9, 7, 8, 12, 13 )
2017-09-21 15:40:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:40:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:40:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:40:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:40:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:40:33   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:49:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:07   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:49:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:49:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:09   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:09   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:49:11   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 15:49:22   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7432 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 15:49:22   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 15:49:22   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 15:49:26   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 15:49:26   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 15:49:26   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 15:49:27   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 15:49:27   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 15:49:27   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 15:49:27   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 15:49:31   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 15:49:31   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 15:49:31   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 15:49:31   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.592 seconds (JVM running for 12.404)
2017-09-21 15:49:37   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 15:49:37   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:49:37   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:38   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:49:39   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 15:49:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:49:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:42   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:49:45   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:49:45   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:45   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:45   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:49:45   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 10, 9, 7, 8, 12, 13 )
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:49   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:49:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:49:49   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:49:50   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:50:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:50:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:15   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:15   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:50:15   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 9, 7, 8, 12, 13 )
2017-09-21 15:50:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:50:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:19   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:50:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:20   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:50:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:50:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:20   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:50:20   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:50:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:50:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:23   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:50:23   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 9, 8, 12, 13 )
2017-09-21 15:50:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:50:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:28   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:50:28   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:28   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:28   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:50:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:50:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:50:28   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:50:28   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:50:28   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:51:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:51:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:29   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:51:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:51:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:31   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:31   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:51:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:51:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:33   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:51:33   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 9, 12, 13 )
2017-09-21 15:51:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:51:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:51:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:37   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:51:37   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:51:37   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:37   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:37   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:51:37   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:51:41   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:51:41   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:51:41   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:51:41   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:51:41   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13 )
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:52:50   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:52:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:52:50   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:52:51   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:53:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:53:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:53:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:53:50   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:53:52   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:53:52   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:53:52   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:53:52   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:53:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:53:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:53:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:53:54   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:53:54   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12 )
2017-09-21 15:53:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:53:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:53:56   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:53:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:53:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:53:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:53:57   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:53:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:53:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:53:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:53:57   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:53:57   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:54:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:54:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:01   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:54:02   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(12 )
2017-09-21 15:54:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:54:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:04   INFO  [http-nio-9999-exec-1][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 15:54:04   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:54:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:54:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:05   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:54:05   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:54:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:54:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:13   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:306] - 需要绑定的id=13,9,10,8,5,3,7,1
2017-09-21 15:54:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:54:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:14   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:54:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:54:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:14   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:54:14   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:54:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:54:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:54:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:54:19   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:54:20   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 13, 12 )
2017-09-21 15:55:21   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 15:55:34   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6772 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 15:55:34   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 15:55:34   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 15:55:38   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 15:55:38   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 15:55:38   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 15:55:38   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 15:55:38   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 15:55:38   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 15:55:38   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 15:55:42   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 15:55:42   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 15:55:42   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 15:55:42   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.952 seconds (JVM running for 12.08)
2017-09-21 15:55:58   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 15:55:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:55:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:55:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:55:59   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:56:00   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 15:56:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:56:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:56:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:56:03   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:56:05   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:56:05   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:56:05   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:56:05   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:56:06   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 13, 12 )
2017-09-21 15:56:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:56:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:56:09   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:56:10   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:56:10   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:56:10   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:56:10   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:56:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:56:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:56:10   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:56:10   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:56:11   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:56:37   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 15:56:48   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5216 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 15:56:48   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 15:56:48   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 15:56:51   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 15:56:51   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 15:56:52   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 15:56:52   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 15:56:52   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 15:56:52   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 15:56:52   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 15:56:56   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 15:56:56   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 15:56:56   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 15:56:56   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.644 seconds (JVM running for 11.385)
2017-09-21 15:56:58   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 15:56:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:56:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:00   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:57:00   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 15:57:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:57:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:04   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:57:06   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:57:06   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:06   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:06   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:57:07   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 3, 5, 8, 10, 9, 13, 12 )
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:13   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:13   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=0
2017-09-21 15:57:14   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 15:57:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:57:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:54   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:54   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:57:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:57:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:56   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:57:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:57:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:57:59   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:57:59   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:57:59   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 5, 8, 10, 9, 13, 12 )
2017-09-21 15:58:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:58:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:58:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:03   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:58:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:58:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:03   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:03   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:58:03   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 10, 9, 13, 12 )
2017-09-21 15:58:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:58:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:06   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:06   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:58:06   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 5, 8, 10, 12, 13, 9 )
2017-09-21 15:58:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:58:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:09   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:58:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:10   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:58:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:58:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:58:10   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:58:10   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:58:10   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 8, 10, 12, 13, 9 )
2017-09-21 15:59:00   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-21 15:59:08   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7648 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-21 15:59:08   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-21 15:59:08   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-21 15:59:12   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-21 15:59:12   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-21 15:59:12   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-21 15:59:12   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-21 15:59:12   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-21 15:59:12   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-21 15:59:13   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-21 15:59:16   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-21 15:59:16   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-21 15:59:16   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-21 15:59:16   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.857 seconds (JVM running for 11.482)
2017-09-21 15:59:21   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-21 15:59:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 15:59:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:23   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:23   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:59:23   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-21 15:59:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:59:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:26   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:59:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:59:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:30   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:30   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:59:30   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 8, 10, 9, 13, 12 )
2017-09-21 15:59:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:59:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:59:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:33   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:33   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:59:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:59:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:34   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:59:34   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 10, 9, 13, 12 )
2017-09-21 15:59:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:59:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:37   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:37   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:59:38   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(5, 8, 10, 12, 13, 9 )
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:42   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:42   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:42   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:59:42   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 10, 12, 13, 9 )
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:45   INFO  [http-nio-9999-exec-5][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:45   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:45   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:59:45   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:49   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:306] - 需要绑定的id=5,3,7,1
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:49   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:49   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:49   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:49   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 15:59:50   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 8, 10, 9, 13, 12 )
2017-09-21 15:59:50   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 15:59:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 15:59:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 15:59:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 15:59:57   INFO  [http-nio-9999-exec-3][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 15:59:57   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 10, 12, 13, 9 )
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:00:00   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:00:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:00:00   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:00:01   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:00:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 16:00:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:00:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:00:16   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:00:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:00:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:00:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:00:19   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:00:21   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:00:21   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:00:21   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:00:21   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:00:21   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:03:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 16:03:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:03:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:03:56   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:03:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:03:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:03:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:03:58   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:02   INFO  [http-nio-9999-exec-3][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:02   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:02   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:04:02   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:08   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:306] - 需要绑定的id=8
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:08   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:08   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:08   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:04:09   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:04:09   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 1, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:04:16   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:04:16   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:16   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:16   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:04:16   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 1, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:04:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:04:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:04:24   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:04:24   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 16:04:24   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 10, 12, 13, 9 )
2017-09-21 16:06:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 16:06:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:06:57   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:06:57   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:06:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:06:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:06:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:06:59   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:07:02   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:07:02   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:02   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:02   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:07:02   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 1, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:07:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:07:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:06   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:07   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:07:07   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:07   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:07   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:07:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:07:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:07   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:07:07   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:07:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 16:07:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:10   INFO  [http-nio-9999-exec-4][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 16:07:10   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:07:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:07:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:11   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:11   INFO  [http-nio-9999-exec-9][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:07:11   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/bindSubject.json,pathInfo=
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:15   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:306] - 需要绑定的id=1
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:15   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:15   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:15   INFO  [http-nio-9999-exec-2][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:07:15   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:07:15   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:07:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:07:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:20   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 16:07:20   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 10, 12, 13, 9 )
2017-09-21 16:07:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:07:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:26   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:07:26   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:26   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:26   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:07:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:07:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:26   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:26   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 16:07:26   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 16:07:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:07:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:07:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:07:30   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-21 16:07:31   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(10, 12, 13, 9 )
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:08:42   INFO  [http-nio-9999-exec-10][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:08:42   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:08:42   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:08:42   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:09:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 16:09:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:09:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:09:51   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:09:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:09:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:09:53   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:09:53   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:09:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:09:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:09:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:09:59   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:09:59   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 7, 3, 5, 10, 9, 13, 12 )
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:02   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:02   INFO  [http-nio-9999-exec-9][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:03   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 7, 3, 5, 10, 9, 12 )
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:05   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:05   INFO  [http-nio-9999-exec-7][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:06   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 7, 3, 5, 10, 9 )
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:09   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:09   INFO  [http-nio-9999-exec-6][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:09   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 8, 7, 3, 5, 10 )
2017-09-21 16:10:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:13   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:14   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:14   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:14   INFO  [http-nio-9999-exec-10][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:14   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5, 10 )
2017-09-21 16:10:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:17   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:17   INFO  [http-nio-9999-exec-8][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:17   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3, 5 )
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:20   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:20   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:20   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7, 3 )
2017-09-21 16:10:22   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:22   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:22   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:23   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:23   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:23   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:23   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:23   INFO  [http-nio-9999-exec-4][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:23   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(1, 7 )
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:26   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:26   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:26   INFO  [http-nio-9999-exec-5][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:26   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7 )
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/cancelBind.json,pathInfo=
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:32   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:32   INFO  [http-nio-9999-exec-2][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:34   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 16:10:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-21 16:10:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:36   INFO  [http-nio-9999-exec-1][SubjectRestController.java:274] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-21 16:10:37   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-21 16:10:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-21 16:10:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:38   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:38   INFO  [http-nio-9999-exec-6][KnowledgeController.java:125] - 需要绑定题目的考试编号:5
2017-09-21 16:10:38   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:10:39   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:10:39   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:39   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:39   INFO  [http-nio-9999-exec-4][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:10:39   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:10:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:10:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:50   INFO  [http-nio-9999-exec-10][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:10:50   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype =7 and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?)  order by s.iorder desc limit ?,?
2017-09-21 16:10:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:10:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:10:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:10:53   INFO  [http-nio-9999-exec-7][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-21 16:10:55   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:11:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:11:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:11:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:11:03   INFO  [http-nio-9999-exec-1][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=测试,start=0,limit=10,knowledgeId=5
2017-09-21 16:11:04   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and (s.name like ? ) and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:11:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:11:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:11:10   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:11:10   INFO  [http-nio-9999-exec-6][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=测试,start=0,limit=10,knowledgeId=5
2017-09-21 16:11:10   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and (s.name like ? ) and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:11:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-21 16:11:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:11:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:11:12   INFO  [http-nio-9999-exec-3][SubjectRestController.java:403] - 获取题目属性status=-1,关键字=测试,start=0,limit=10,knowledgeId=5
2017-09-21 16:11:12   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and (s.name like ? ) and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-21 16:12:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-21 16:12:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:01   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:01   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:12:03   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-21 16:12:03   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:03   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:03   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-21 16:12:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 16:12:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:09   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:09   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:12:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 16:12:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:11   INFO  [http-nio-9999-exec-8][SubjectRestController.java:123] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 16:12:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/edit.html,pathInfo=
2017-09-21 16:12:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:14   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:14   INFO  [http-nio-9999-exec-9][SubjectController.java:80] - 需要修改密码的权限编号:13
2017-09-21 16:12:15   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:12:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-21 16:12:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:26   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:26   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:12:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 16:12:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:28   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:28   INFO  [http-nio-9999-exec-1][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 16:12:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:32   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:32   INFO  [http-nio-9999-exec-2][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 16:12:32   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 4 )
2017-09-21 16:12:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:34   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:34   INFO  [http-nio-9999-exec-5][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 16:12:34   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 4, 10 )
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:36   INFO  [http-nio-9999-exec-3][ExamController.java:116] - 需要绑定题目的考试编号:1
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:36   INFO  [http-nio-9999-exec-4][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=1,cupId=0
2017-09-21 16:12:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:40   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:40   INFO  [http-nio-9999-exec-8][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 16:12:40   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 4 )
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/exam/bindDialog.html,pathInfo=
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:41   INFO  [http-nio-9999-exec-9][ExamController.java:116] - 需要绑定题目的考试编号:2
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:41   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:41   INFO  [http-nio-9999-exec-6][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 16:12:42   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:368] - sql=select s.* from t_subject s , t_subject_vtype sv   where s.id=sv.subjectid  and s.slock =?  and sv.vtype =11 and s.id not in (select subjectid from t_exam_subject where examid =?) order by s.iorder desc limit ?,?
2017-09-21 16:12:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/bindSubject.json,pathInfo=
2017-09-21 16:12:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:49   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:50   INFO  [http-nio-9999-exec-1][ExamRestController.java:335] - 需要绑定的id=10,7
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:50   INFO  [http-nio-9999-exec-2][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:50   INFO  [http-nio-9999-exec-5][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:50   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:50   INFO  [http-nio-9999-exec-3][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 16:12:50   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 4 )
2017-09-21 16:12:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:53   INFO  [http-nio-9999-exec-7][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 16:12:54   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 7, 4, 10 )
2017-09-21 16:12:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-21 16:12:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:56   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:57   INFO  [http-nio-9999-exec-8][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:57   INFO  [http-nio-9999-exec-9][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:57   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:57   INFO  [http-nio-9999-exec-10][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 16:12:57   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-21 16:12:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:12:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:12:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:12:59   INFO  [http-nio-9999-exec-6][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-21 16:12:59   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10, 3, 4 )
2017-09-21 16:13:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/edit.html,pathInfo=
2017-09-21 16:13:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:01   INFO  [http-nio-9999-exec-1][ExamController.java:76] - 需要修改密码的权限编号:2
2017-09-21 16:13:01   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/exam/save.json,pathInfo=
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_exam set gradeid=? ,times=? ,editerid=? ,name=? ,remark=? ,editer=?  ,edittime=now()  where id=?
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[6, 90, 1, 考试名称, <p><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span><span style="text-align: right;">考试介绍</span></p>
                           , admin, 2]
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:07   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:07   INFO  [http-nio-9999-exec-5][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 16:13:14   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:13:14   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:14   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:14   INFO  [http-nio-9999-exec-7][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 16:13:14   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/exam/cancelBind.json,pathInfo=
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:16   INFO  [http-nio-9999-exec-10][ExamRestController.java:114] - 获取status=-1,关键字=,start=0,limit=10
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:16   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:16   INFO  [http-nio-9999-exec-8][SubjectRestController.java:170] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-21 16:13:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubList.json,pathInfo=
2017-09-21 16:13:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:13:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:13:17   INFO  [http-nio-9999-exec-9][SubjectRestController.java:327] - 获取题目属性status=-1,关键字=,start=0,limit=10,examId=2,cupId=0
2017-09-21 16:13:17   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 10 )
2017-09-21 16:44:18   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-21 16:44:18   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:44:18   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:44:18   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:44:20   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-21 16:44:20   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:44:20   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:44:20   INFO  [http-nio-9999-exec-3][SubjectRestController.java:123] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-21 16:44:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/edit.html,pathInfo=
2017-09-21 16:44:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-21 16:44:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-21 16:44:23   INFO  [http-nio-9999-exec-10][SubjectController.java:80] - 需要修改密码的权限编号:13
2017-09-21 16:44:24   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-21 16:44:36   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
