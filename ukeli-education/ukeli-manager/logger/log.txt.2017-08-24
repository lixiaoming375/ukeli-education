2017-08-24 11:42:22   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5896 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 11:42:23   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 11:42:23   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 11:42:28   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 11:42:28   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 11:42:29   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 11:42:29   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 11:42:29   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 11:42:29   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 11:42:29   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.889685684065620081.9999/
2017-08-24 11:42:34   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 11:42:34   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 11:42:34   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 11:42:34   INFO  [main][StartupInfoLogger.java:57] - Started Application in 13.568 seconds (JVM running for 17.197)
2017-08-24 11:44:42   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 11:44:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-08-24 11:44:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:44:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :-1
2017-08-24 11:44:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:96] - path=http://localhost:9999,loginUrl=login.html
2017-08-24 11:44:42   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-08-24 11:44:42   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：null
2017-08-24 11:44:43   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/getvm.html,pathInfo=
2017-08-24 11:44:51   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/login.json,pathInfo=
2017-08-24 11:44:51   INFO  [http-nio-9999-exec-4][CommonController.java:137] - 后台管理员开始登陆:admin
2017-08-24 11:44:51   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：v1khfSZQIZo=
2017-08-24 11:44:52   INFO  [http-nio-9999-exec-4][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 11:44:53   INFO  [http-nio-9999-exec-4][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-08-24 11:44:53   INFO  [http-nio-9999-exec-4][CommonController.java:170] - 用户登录成功
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: false
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value:  
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0.0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: false
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value:  
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Z@57b03bc
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@57b03bc' to type 'boolean[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [B@25b1e013
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'byte[]' value '[B@25b1e013' to type 'byte[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [C@596f29d
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'char[]' value '[C@596f29d' to type 'char[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [D@6b7dc26e
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'double[]' value '[D@6b7dc26e' to type 'double[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [F@36c64a5e
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'float[]' value '[F@36c64a5e' to type 'float[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [I@1c5d95ed
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'int[]' value '[I@1c5d95ed' to type 'int[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [J@2e6d9ee1
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'long[]' value '[J@2e6d9ee1' to type 'long[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [S@2b8657f0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'short[]' value '[S@2b8657f0' to type 'short[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@2f967c64
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@2f967c64' to type 'BigDecimal[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@1d4c7113
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@1d4c7113' to type 'BigInteger[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@1805b528
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@1805b528' to type 'Boolean[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@1ae3e189
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@1ae3e189' to type 'Byte[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@4f9248a0
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@4f9248a0' to type 'Character[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@608c4526
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@608c4526' to type 'Double[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@1f5eda57
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@1f5eda57' to type 'Float[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@4837c448
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@4837c448' to type 'Integer[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@41896866
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@41896866' to type 'Long[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@7d5a4f70
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@7d5a4f70' to type 'Short[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@3ba0d164
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@3ba0d164' to type 'String[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@7e22964c
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@7e22964c' to type 'Class[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@51ac6737
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@51ac6737' to type 'Date[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@5fc205ce
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@5fc205ce' to type 'Calendar[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@71f34d3
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@71f34d3' to type 'java.io.File[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@c3422a3
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@c3422a3' to type 'java.sql.Date[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@4f94d99
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@4f94d99' to type 'java.sql.Time[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@570726c7
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@570726c7' to type 'java.sql.Timestamp[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@11d77bb4
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@11d77bb4' to type 'java.net.URL[]'
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-08-24 11:44:53   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-08-24 11:44:54   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-08-24 11:44:54   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:44:54   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:44:54   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:44:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 11:44:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:44:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:44:59   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:45:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 11:45:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:45:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:45:00   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 11:46:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 11:46:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:46:46   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:46:46   INFO  [http-nio-9999-exec-6][KnowledgeController.java:44] - 需要修改knowledge的id:2
2017-08-24 11:46:47   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:56:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 11:56:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:56:14   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:56:14   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:56:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-08-24 11:56:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:56:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:56:39   INFO  [http-nio-9999-exec-6][PermissionController.java:101] - 需要修改密码的权限编号:0
2017-08-24 11:56:39   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:56:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-08-24 11:56:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:56:47   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:56:47   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:56:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-08-24 11:56:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:56:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:57:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 11:57:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:57:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:57:09   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:57:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-08-24 11:57:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:57:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:57:22   INFO  [http-nio-9999-exec-1][PermissionController.java:101] - 需要修改密码的权限编号:6
2017-08-24 11:57:23   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:58:43   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/permission/save.json,pathInfo=
2017-08-24 11:58:43   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:43   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.manager.pojo.PermissionDo@2742304a[name=<null>,ident=<null>,parentid=<null>,groupid=<null>,groupname=<null>,operatetype=<null>,type=<null>,url=<null>,icons=<null>,remark1=<null>,remark2=<null>,isshow=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {parentid=[Ljava.lang.String;@682cc33b, name=[Ljava.lang.String;@1ef7f2a2, ident=[Ljava.lang.String;@21635020, type=[Ljava.lang.String;@1dd1c2b7, url=[Ljava.lang.String;@13eaef2d, icons=[Ljava.lang.String;@32a96d10, remark1=[Ljava.lang.String;@970d935, id=[Ljava.lang.String;@1a2766d6})
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '5' to class 'java.lang.Long'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '5' to type 'Long'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '5'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '知识点类型' to class 'java.lang.String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '知识点类型' to type 'String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string 'clazz-knowledgetype' to class 'java.lang.String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value 'clazz-knowledgetype' to type 'String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Short value '1'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string 'knowledge/knowledgetype/page' to class 'java.lang.String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value 'knowledge/knowledgetype/page' to type 'String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '知识点类型' to class 'java.lang.String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '知识点类型' to type 'String'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_permission(ident,adder,icons,type,parentid,url,isshow,adderid,name,remark1,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,now(),now())
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:88] - 执行保存的参数=[clazz-knowledgetype, admin, , 1, 5, knowledge/knowledgetype/page, 0, 1, 知识点类型, 知识点类型]
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:44   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/permission/status.json,pathInfo=
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:48   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:58:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 11:58:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:50   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:58:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/admin/page.html,pathInfo=
2017-08-24 11:58:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:57   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:58:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/admin/list.json,pathInfo=
2017-08-24 11:58:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:58:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:58:58   INFO  [http-nio-9999-exec-7][AdminRestController.java:106] - 获取管理员status=-1,关键字=,start=0,limit=10
2017-08-24 11:59:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/role/page.html,pathInfo=
2017-08-24 11:59:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:02   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:02   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:59:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-08-24 11:59:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:03   INFO  [http-nio-9999-exec-3][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-08-24 11:59:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-08-24 11:59:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:04   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:59:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-08-24 11:59:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:05   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:07   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/role/permission.json,pathInfo=
2017-08-24 11:59:07   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:07   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:08   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-08-24 11:59:08   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:08   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:08   INFO  [http-nio-9999-exec-5][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-08-24 11:59:12   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/role/page.html,pathInfo=
2017-08-24 11:59:12   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:12   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:12   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 11:59:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-08-24 11:59:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:13   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:13   INFO  [http-nio-9999-exec-9][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-08-24 11:59:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 11:59:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 11:59:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 11:59:47   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 12:01:19   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 4804 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 12:01:19   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 12:01:19   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 12:01:22   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 12:01:22   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 12:01:22   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 12:01:23   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 12:01:23   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 12:01:23   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 12:01:23   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.48312941932775028.9999/
2017-08-24 12:01:26   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 12:01:26   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 12:01:26   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 12:01:26   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.084 seconds (JVM running for 11.6)
2017-08-24 12:01:57   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 12:01:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:01:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:01:58   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:01:58   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:01:58   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 12:02:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:02:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:02:03   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:02:03   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:09:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:09:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:09:02   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:09:02   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:09:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:09:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:09:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:09:09   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:10:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:10:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:10:29   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:10:29   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:10:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:10:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:10:36   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:10:36   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:10:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:10:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:10:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:10:38   INFO  [http-nio-9999-exec-5][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:10:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 12:10:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:10:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:10:44   INFO  [http-nio-9999-exec-10][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:0
2017-08-24 12:10:44   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:12:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:12:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:12:51   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:12:51   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:12:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:12:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:12:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:12:52   INFO  [http-nio-9999-exec-1][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:12:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:12:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:12:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:12:54   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:12:55   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:12:55   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:12:55   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:12:55   INFO  [http-nio-9999-exec-6][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:13:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 12:13:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:13:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:13:09   INFO  [http-nio-9999-exec-2][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:0
2017-08-24 12:13:09   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/save.json,pathInfo=
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: false
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value:  
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0.0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: false
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value:  
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: 
2017-08-24 12:14:19   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Z@5182ff1b
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@5182ff1b' to type 'boolean[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [B@2c54a370
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'byte[]' value '[B@2c54a370' to type 'byte[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [C@135092c1
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'char[]' value '[C@135092c1' to type 'char[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [D@696fd6a6
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'double[]' value '[D@696fd6a6' to type 'double[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [F@2fd396b7
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'float[]' value '[F@2fd396b7' to type 'float[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [I@2695ff1e
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'int[]' value '[I@2695ff1e' to type 'int[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [J@3144a797
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'long[]' value '[J@3144a797' to type 'long[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [S@26099dff
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'short[]' value '[S@26099dff' to type 'short[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@15dcc1a7
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@15dcc1a7' to type 'BigDecimal[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@854d502
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@854d502' to type 'BigInteger[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@117a6387
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@117a6387' to type 'Boolean[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@66c1a8a9
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@66c1a8a9' to type 'Byte[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@4213228
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@4213228' to type 'Character[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@3b4ae465
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@3b4ae465' to type 'Double[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@58a5b066
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@58a5b066' to type 'Float[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@4828a4ac
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@4828a4ac' to type 'Integer[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@2bb1cc8c
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@2bb1cc8c' to type 'Long[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@6a7c8878
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@6a7c8878' to type 'Short[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@2aec60b
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@2aec60b' to type 'String[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@7386014
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@7386014' to type 'Class[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@98907c3
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@98907c3' to type 'Date[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@2f312667
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@2f312667' to type 'Calendar[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@2abb7ee0
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@2abb7ee0' to type 'java.io.File[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@eaa2023
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@eaa2023' to type 'java.sql.Date[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@7a057639
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@7a057639' to type 'java.sql.Time[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@7c6c4b3b
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@7c6c4b3b' to type 'java.sql.Timestamp[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@64560b02
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@64560b02' to type 'java.net.URL[]'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.KnowledgeTypeDo@26a0ef4a[typename=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {typename=[Ljava.lang.String;@588fcb7, id=[Ljava.lang.String;@32fbd428})
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][ConvertUtilsBean.java:481] - Convert string '间隔之谜' to class 'java.lang.String'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'String' value '间隔之谜' to type 'String'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_type(adder,adderid,typename,addtime,edittime) VALUES(?,?,?,now(),now())
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-9][MysqlDialectImpl.java:88] - 执行保存的参数=[admin, 1, 间隔之谜]
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:14:20   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:14:20   INFO  [http-nio-9999-exec-2][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:18:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:18:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:18:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:18:41   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:18:43   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:18:43   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:18:43   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:18:43   INFO  [http-nio-9999-exec-2][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:19:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:19:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:19:37   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:19:37   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:19:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:19:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:19:38   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:19:38   INFO  [http-nio-9999-exec-7][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:25:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:25:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:25:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:25:07   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:25:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:25:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:25:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:25:08   INFO  [http-nio-9999-exec-9][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:25:11   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 12:25:11   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:25:11   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:25:11   INFO  [http-nio-9999-exec-2][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:1
2017-08-24 12:25:11   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:25:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 12:25:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:25:15   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:25:15   INFO  [http-nio-9999-exec-5][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:0
2017-08-24 12:25:15   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/save.json,pathInfo=
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.KnowledgeTypeDo@595337f0[typename=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {typename=[Ljava.lang.String;@56cf5197, id=[Ljava.lang.String;@17ab92c7})
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '有趣的排队' to class 'java.lang.String'
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '有趣的排队' to type 'String'
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge_type(adder,adderid,typename,addtime,edittime) VALUES(?,?,?,now(),now())
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:88] - 执行保存的参数=[admin, 1, 有趣的排队]
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:26:10   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:26:10   INFO  [http-nio-9999-exec-4][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:26:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 12:26:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:26:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:26:24   INFO  [http-nio-9999-exec-7][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:0
2017-08-24 12:26:24   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:26:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 12:26:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:26:29   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:26:29   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:26:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 12:26:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:26:30   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:26:30   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 12:30:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:30:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:30:23   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:30:23   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:30:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:30:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:30:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:30:24   INFO  [http-nio-9999-exec-1][KnowledgeTypeRestController.java:96] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:44:41   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 12:44:56   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7836 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 12:44:56   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 12:44:56   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 12:44:59   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 12:44:59   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 12:44:59   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 12:44:59   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 12:44:59   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 12:44:59   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 12:45:00   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.4819072236185513057.9999/
2017-08-24 12:45:02   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 12:45:02   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 12:45:02   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 12:45:02   INFO  [main][StartupInfoLogger.java:57] - Started Application in 7.245 seconds (JVM running for 9.913)
2017-08-24 12:45:13   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 12:45:13   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:45:13   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:45:15   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:45:15   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:45:15   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 12:45:18   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:45:18   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:45:18   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:45:18   INFO  [http-nio-9999-exec-3][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:45:21   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/del.json,pathInfo=
2017-08-24 12:45:21   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:45:21   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:45:21   INFO  [http-nio-9999-exec-2][KnowledgeTypeRestController.java:69] - 需要删除的知识点类型id=2
2017-08-24 12:45:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:45:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:45:22   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:45:22   INFO  [http-nio-9999-exec-5][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:45:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/del.json,pathInfo=
2017-08-24 12:45:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:45:27   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:45:27   INFO  [http-nio-9999-exec-6][KnowledgeTypeRestController.java:69] - 需要删除的知识点类型id=1
2017-08-24 12:45:27   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:45:27   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:45:27   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:45:27   INFO  [http-nio-9999-exec-8][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:47:15   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 12:47:26   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 4560 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 12:47:26   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 12:47:26   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 12:47:30   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 12:47:30   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 12:47:30   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 12:47:30   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 12:47:30   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 12:47:30   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 12:47:30   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.3245568195481592118.9999/
2017-08-24 12:47:33   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 12:47:33   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 12:47:33   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 12:47:33   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.158 seconds (JVM running for 10.76)
2017-08-24 12:47:55   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 12:47:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:47:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:47:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:47:56   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:47:56   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 12:47:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:47:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:47:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:47:59   INFO  [http-nio-9999-exec-5][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:48:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/del.json,pathInfo=
2017-08-24 12:48:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:48:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:48:04   INFO  [http-nio-9999-exec-6][KnowledgeTypeRestController.java:69] - 需要删除的知识点类型id=1
2017-08-24 12:48:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/del.json,pathInfo=
2017-08-24 12:48:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:48:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:48:13   INFO  [http-nio-9999-exec-7][KnowledgeTypeRestController.java:69] - 需要删除的知识点类型id=2
2017-08-24 12:48:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:48:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:48:14   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:48:14   INFO  [http-nio-9999-exec-8][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:51:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 12:51:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:51:01   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:51:01   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:51:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:51:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:51:02   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:51:02   INFO  [http-nio-9999-exec-5][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 12:51:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 12:51:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:51:08   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:51:08   INFO  [http-nio-9999-exec-7][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=排队,start=0,limit=10
2017-08-24 12:51:09   ERROR [http-nio-9999-exec-7][KnowledgeTypeRestController.java:125] - 获取知识点类型分页发生错误:PreparedStatementCallback; bad SQL grammar [select count(id) from t_knowledge_type where 1=1  and (name like ? )  and slock < 2 ]; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'name' in 'where clause'
2017-08-24 12:51:09   DEBUG [http-nio-9999-exec-7][KnowledgeTypeRestController.java:126] - org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [select count(id) from t_knowledge_type where 1=1  and (name like ? )  and slock < 2 ]; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'name' in 'where clause'
2017-08-24 12:51:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 12:51:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:51:30   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:51:30   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 12:51:31   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 12:51:32   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:51:32   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:51:32   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 12:51:34   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 12:51:34   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 12:51:34   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 12:51:34   INFO  [http-nio-9999-exec-2][KnowledgeController.java:44] - 需要修改knowledge的id:2
2017-08-24 12:51:34   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:15:35   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:15:35   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:15:35   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:15:35   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:15:36   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:15:36   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:15:36   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:15:36   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:15:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:15:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:15:38   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:15:38   INFO  [http-nio-9999-exec-3][KnowledgeController.java:44] - 需要修改knowledge的id:2
2017-08-24 14:15:38   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:15:38   ERROR [http-nio-9999-exec-3][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a number (wrapper: f.t.SimpleNumber).
Right hand operand is a string (wrapper: f.t.SimpleScalar).
The blamed expression:
==> knowledge.gradeid=='1'  [in template "knowledge/edit.ftl" at line 33, column 104]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.gradeid == "1"  [in template "knowledge/edit.ftl" at line 33, column 99]
----
2017-08-24 14:15:39   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a number (wrapper: f.t.SimpleNumber).
Right hand operand is a string (wrapper: f.t.SimpleScalar).
The blamed expression:
==> knowledge.gradeid=='1'  [in template "knowledge/edit.ftl" at line 33, column 104]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.gradeid == "1"  [in template "knowledge/edit.ftl" at line 33, column 99]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a number (wrapper: f.t.SimpleNumber).
Right hand operand is a string (wrapper: f.t.SimpleScalar).
The blamed expression:
==> knowledge.gradeid=='1'  [in template "knowledge/edit.ftl" at line 33, column 104]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.gradeid == "1"  [in template "knowledge/edit.ftl" at line 33, column 99]
----
	at freemarker.core.EvalUtil.compare(EvalUtil.java:301) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 14:15:39   ERROR [http-nio-9999-exec-3][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 14:17:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:17:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:17:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:17:13   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:17:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:17:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:17:15   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:17:15   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:17:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:17:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:17:16   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:17:16   INFO  [http-nio-9999-exec-10][KnowledgeController.java:44] - 需要修改knowledge的id:2
2017-08-24 14:17:16   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-1][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,totalexam=?  ,edittime=now()  where id=?
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-1][MysqlDialectImpl.java:136] - 执行更新的参数=[认识时间（1）, 2, 1, 1,                                                                        本知识点介绍：
一、需掌握相关知识点：能看着钟表说出时间、时间的基本单位（秒、分钟、小时）、单位间的换算、时间段的计算等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                         
                                
                                , admin, 6, 2]
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:18:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:18:44   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:18:48   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:18:48   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:18:48   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:18:48   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:18:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:18:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:18:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:18:49   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:30:22   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 14:30:39   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7460 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 14:30:39   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 14:30:39   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 14:30:43   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 14:30:43   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 14:30:43   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 14:30:43   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 14:30:43   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 14:30:43   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 14:30:43   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.2402782943368165316.9999/
2017-08-24 14:30:46   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 14:30:46   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 14:30:46   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 14:30:46   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.195 seconds (JVM running for 10.907)
2017-08-24 14:30:55   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 14:30:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:30:55   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:30:56   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:30:56   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:30:57   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 14:30:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:30:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:30:59   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:30:59   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:31:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:31:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:31:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:31:01   INFO  [http-nio-9999-exec-7][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:31:02   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:31:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:31:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:31:35   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:31:35   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:31:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:31:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:31:37   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:31:37   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:31:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:31:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:31:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:31:39   INFO  [http-nio-9999-exec-6][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:31:39   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:32:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:32:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:32:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:32:25   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:32:26   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:32:26   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:32:26   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:32:26   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:32:28   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:32:28   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:32:28   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:32:28   INFO  [http-nio-9999-exec-7][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:32:29   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:34:17   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 14:34:17   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:34:17   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:34:17   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:34:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 14:34:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:34:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:34:18   INFO  [http-nio-9999-exec-7][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 14:34:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 14:34:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:34:22   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:34:22   INFO  [http-nio-9999-exec-10][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:1
2017-08-24 14:34:22   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/save.json,pathInfo=
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge_type set editerid=? ,editer=? ,typename=?  ,edittime=now()  where id=?
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:136] - 执行更新的参数=[1, admin, 应用题, 1]
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:34:50   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:34:50   INFO  [http-nio-9999-exec-6][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 14:35:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/edit.html,pathInfo=
2017-08-24 14:35:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:02   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:02   INFO  [http-nio-9999-exec-9][KnowledgeTypeController.java:73] - 需要修改密码的权限编号:2
2017-08-24 14:35:02   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/save.json,pathInfo=
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge_type set editerid=? ,editer=? ,typename=?  ,edittime=now()  where id=?
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:136] - 执行更新的参数=[1, admin, 几何, 2]
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:05   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:05   INFO  [http-nio-9999-exec-3][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 14:35:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:35:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:09   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:09   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:35:10   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:35:10   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:10   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:10   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:35:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:35:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:12   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:12   INFO  [http-nio-9999-exec-1][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:35:13   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,totalexam=?  ,edittime=now()  where id=?
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:136] - 执行更新的参数=[认识时间（1）, 2, 1, 2,                                                                                                        本知识点介绍：
一、需掌握相关知识点：能看着钟表说出时间、时间的基本单位（秒、分钟、小时）、单位间的换算、时间段的计算等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                         
                                
                                
                                , admin, 6, 2]
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:19   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:19   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:35:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:35:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:35:58   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:35:58   INFO  [http-nio-9999-exec-5][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:35:59   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:36:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:36:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:36:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:36:29   INFO  [http-nio-9999-exec-2][KnowledgeController.java:50] - 需要修改knowledge的id:0
2017-08-24 14:36:29   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:36:29   ERROR [http-nio-9999-exec-2][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
2017-08-24 14:36:29   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:196) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:363) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:316) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:272) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:243) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:596) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 14:36:29   ERROR [http-nio-9999-exec-2][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 14:36:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:36:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:36:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:36:33   INFO  [http-nio-9999-exec-10][KnowledgeController.java:50] - 需要修改knowledge的id:0
2017-08-24 14:36:33   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:36:33   ERROR [http-nio-9999-exec-10][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
2017-08-24 14:36:33   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:196) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:363) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:316) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:272) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:243) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:596) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 14:36:33   ERROR [http-nio-9999-exec-10][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 14:36:56   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:36:56   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:36:56   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:36:56   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:36:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:36:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:36:57   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:36:57   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:37:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:37:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:37:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:37:06   INFO  [http-nio-9999-exec-6][KnowledgeController.java:50] - 需要修改knowledge的id:0
2017-08-24 14:37:06   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:37:06   ERROR [http-nio-9999-exec-6][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
2017-08-24 14:37:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge.typeid  [in template "knowledge/edit.ftl" at line 18, column 94]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:196) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:363) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:316) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:272) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:243) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:596) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 14:37:06   ERROR [http-nio-9999-exec-6][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 14:41:43   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:41:43   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:41:43   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:41:43   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:41:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:41:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:41:44   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:41:44   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:41:45   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:41:45   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:41:45   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:41:45   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:41:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:41:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:41:46   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:41:46   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:41:48   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:41:48   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:41:48   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:41:48   INFO  [http-nio-9999-exec-8][KnowledgeController.java:50] - 需要修改knowledge的id:0
2017-08-24 14:41:49   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:41:49   ERROR [http-nio-9999-exec-8][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a boolean (wrapper: f.t.FalseTemplateBooleanModel).
Right hand operand is a number (wrapper: f.t.SimpleNumber).
The blamed expression:
==> knowledge.typeid ??==item.id  [in template "knowledge/edit.ftl" at line 18, column 94]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid?? == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
2017-08-24 14:41:49   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a boolean (wrapper: f.t.FalseTemplateBooleanModel).
Right hand operand is a number (wrapper: f.t.SimpleNumber).
The blamed expression:
==> knowledge.typeid ??==item.id  [in template "knowledge/edit.ftl" at line 18, column 94]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid?? == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a boolean (wrapper: f.t.FalseTemplateBooleanModel).
Right hand operand is a number (wrapper: f.t.SimpleNumber).
The blamed expression:
==> knowledge.typeid ??==item.id  [in template "knowledge/edit.ftl" at line 18, column 94]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid?? == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at freemarker.core.EvalUtil.compare(EvalUtil.java:301) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:363) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:316) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:272) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:243) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:596) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 14:41:49   ERROR [http-nio-9999-exec-8][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 14:42:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:42:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:42:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:42:01   INFO  [http-nio-9999-exec-4][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:42:01   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:42:01   ERROR [http-nio-9999-exec-4][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a boolean (wrapper: f.t.TrueTemplateBooleanModel).
Right hand operand is a number (wrapper: f.t.SimpleNumber).
The blamed expression:
==> knowledge.typeid ??==item.id  [in template "knowledge/edit.ftl" at line 18, column 94]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid?? == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
2017-08-24 14:42:01   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a boolean (wrapper: f.t.TrueTemplateBooleanModel).
Right hand operand is a number (wrapper: f.t.SimpleNumber).
The blamed expression:
==> knowledge.typeid ??==item.id  [in template "knowledge/edit.ftl" at line 18, column 94]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid?? == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core._MiscTemplateException: Can't compare values of these types. Allowed comparisons are between two numbers, two strings, two dates, or two booleans.
Left hand operand is a boolean (wrapper: f.t.TrueTemplateBooleanModel).
Right hand operand is a number (wrapper: f.t.SimpleNumber).
The blamed expression:
==> knowledge.typeid ??==item.id  [in template "knowledge/edit.ftl" at line 18, column 94]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if knowledge.typeid?? == item.id  [in template "knowledge/edit.ftl" at line 18, column 89]
----
	at freemarker.core.EvalUtil.compare(EvalUtil.java:301) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:363) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:316) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:272) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:243) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:596) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 14:42:01   ERROR [http-nio-9999-exec-4][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 14:46:42   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 14:46:42   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:46:42   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:46:42   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:46:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:46:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:46:43   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:46:43   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:46:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:46:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:46:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:46:44   INFO  [http-nio-9999-exec-1][KnowledgeController.java:50] - 需要修改knowledge的id:0
2017-08-24 14:46:45   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:46:54   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:46:54   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:46:54   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:46:54   INFO  [http-nio-9999-exec-7][KnowledgeController.java:50] - 需要修改knowledge的id:2
2017-08-24 14:46:55   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:46:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:46:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:46:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:46:58   INFO  [http-nio-9999-exec-6][KnowledgeController.java:50] - 需要修改knowledge的id:1
2017-08-24 14:46:59   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:47:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:47:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:47:04   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:47:04   INFO  [http-nio-9999-exec-10][KnowledgeController.java:50] - 需要修改knowledge的id:0
2017-08-24 14:47:04   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 14:48:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-08-24 14:48:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:48:07   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:48:07   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: false
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value:  
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0.0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: false
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value:  
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: 
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Z@182bf6fa
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@182bf6fa' to type 'boolean[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [B@7fde337f
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'byte[]' value '[B@7fde337f' to type 'byte[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [C@549fd2e
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'char[]' value '[C@549fd2e' to type 'char[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [D@406c3b0a
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'double[]' value '[D@406c3b0a' to type 'double[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [F@7b799db
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'float[]' value '[F@7b799db' to type 'float[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [I@9fc0799
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'int[]' value '[I@9fc0799' to type 'int[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [J@43163b05
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'long[]' value '[J@43163b05' to type 'long[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [S@6203fc06
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'short[]' value '[S@6203fc06' to type 'short[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@5941c8dc
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@5941c8dc' to type 'BigDecimal[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@425417a9
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@425417a9' to type 'BigInteger[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@689a1824
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@689a1824' to type 'Boolean[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@7c6af173
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@7c6af173' to type 'Byte[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@2aacacfa
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@2aacacfa' to type 'Character[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@15b1692f
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@15b1692f' to type 'Double[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@367bc42a
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@367bc42a' to type 'Float[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@49b04b6d
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@49b04b6d' to type 'Integer[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@239b6af7
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@239b6af7' to type 'Long[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@aca4d2e
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@aca4d2e' to type 'Short[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@7438de22
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@7438de22' to type 'String[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@612db51d
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@612db51d' to type 'Class[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@3956272b
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@3956272b' to type 'Date[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@61475c6d
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@61475c6d' to type 'Calendar[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@65a995e8
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@65a995e8' to type 'java.io.File[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@fd4c196
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@fd4c196' to type 'java.sql.Date[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@3f6c3f3c
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@3f6c3f3c' to type 'java.sql.Time[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@1862ed55
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@1862ed55' to type 'java.sql.Timestamp[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@4f15b5ee
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@4f15b5ee' to type 'java.net.URL[]'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.KnowledgeDo@79603d5a[typeid=<null>,gradeid=<null>,nodename=<null>,remark=<null>,totalexam=0,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {typeid=[Ljava.lang.String;@759e4674, gradeid=[Ljava.lang.String;@412c35c1, nodename=[Ljava.lang.String;@63787202, totalexam=[Ljava.lang.String;@2aeca108, remark=[Ljava.lang.String;@2dc6ffc7, id=[Ljava.lang.String;@d644583})
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '2' to class 'java.lang.Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '2' to type 'Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Long value '2'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '5' to class 'java.lang.Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '5' to type 'Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Long value '5'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '点线角' to class 'java.lang.String'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '点线角' to type 'String'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '1' to class 'int'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Integer'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Integer value '1'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string ' 本知识点介绍：
一、需掌握相关知识点：几何基本元素点、线和角的认识，学习基本的平面几何知识，为后面的学习打好基础。
二、本知识点共包括31道题目，具体为例题7道，随堂练习14道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                               
                                ' to class 'java.lang.String'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value ' 本知识点介绍：
一、需掌握相关知识点：几何基本元素点、线和角的认识，学习基本的平面几何知识，为后面的学习打好基础。
二、本知识点共包括31道题目，具体为例题7道，随堂练习14道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                               
                                ' to type 'String'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_knowledge(gradeid,remark,adder,nodename,adderid,typeid,totalexam,addtime,edittime) VALUES(?,?,?,?,?,?,?,now(),now())
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:88] - 执行保存的参数=[5,  本知识点介绍：
一、需掌握相关知识点：几何基本元素点、线和角的认识，学习基本的平面几何知识，为后面的学习打好基础。
二、本知识点共包括31道题目，具体为例题7道，随堂练习14道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。                               
                                , admin, 点线角, 1, 2, 1]
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:48:08   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:48:08   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 14:48:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-08-24 14:48:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 14:48:15   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 14:48:15   INFO  [http-nio-9999-exec-7][KnowledgeController.java:50] - 需要修改knowledge的id:3
2017-08-24 14:48:15   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:23:57   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:23:57   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:23:57   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:23:57   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:24:14   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-08-24 15:24:14   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:24:14   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:24:14   INFO  [http-nio-9999-exec-6][PermissionController.java:101] - 需要修改密码的权限编号:0
2017-08-24 15:24:14   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:24:16   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:24:46   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/permission/save.json,pathInfo=
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.manager.pojo.PermissionDo@3edd06cc[name=<null>,ident=<null>,parentid=<null>,groupid=<null>,groupname=<null>,operatetype=<null>,type=<null>,url=<null>,icons=<null>,remark1=<null>,remark2=<null>,isshow=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {parentid=[Ljava.lang.String;@1a0fcd38, name=[Ljava.lang.String;@40327b70, ident=[Ljava.lang.String;@5cf19bb6, type=[Ljava.lang.String;@a4c1d82, url=[Ljava.lang.String;@6e4e77fe, icons=[Ljava.lang.String;@3df468bc, remark1=[Ljava.lang.String;@6d08689f, id=[Ljava.lang.String;@7c2d8b1})
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '5' to class 'java.lang.Long'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '5' to type 'Long'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '5'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string ' 视频管理' to class 'java.lang.String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value ' 视频管理' to type 'String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string 'clazz-video' to class 'java.lang.String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value 'clazz-video' to type 'String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.Short'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '1' to type 'Short'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Short value '1'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string 'video/video/page' to class 'java.lang.String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value 'video/video/page' to type 'String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '视频管理' to class 'java.lang.String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '视频管理' to type 'String'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_permission(ident,adder,icons,type,parentid,url,isshow,adderid,name,remark1,addtime,edittime) VALUES(?,?,?,?,?,?,?,?,?,?,now(),now())
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-8][MysqlDialectImpl.java:88] - 执行保存的参数=[clazz-video, admin, , 1, 5, video/video/page, 0, 1, 视频管理, 视频管理]
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:25:35   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/permission/status.json,pathInfo=
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:25:41   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:26:06   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:26:06   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:06   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:06   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/admin/page.html,pathInfo=
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/admin/list.json,pathInfo=
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:09   INFO  [http-nio-9999-exec-10][AdminRestController.java:106] - 获取管理员status=-1,关键字=,start=0,limit=10
2017-08-24 15:26:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/role/page.html,pathInfo=
2017-08-24 15:26:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:11   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:11   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:26:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-08-24 15:26:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:12   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:12   INFO  [http-nio-9999-exec-8][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/tree.html,pathInfo=
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/permission/tree.json,pathInfo=
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:14   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/manager/role/permission.json,pathInfo=
2017-08-24 15:26:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:17   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:18   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/role/list.json,pathInfo=
2017-08-24 15:26:18   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:18   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:18   INFO  [http-nio-9999-exec-4][RoleRestController.java:102] - 获取角色信息 status=-1,关键字=,start=0,limit=10
2017-08-24 15:26:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:26:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:26:20   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:26:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/video/video/page.html,pathInfo=
2017-08-24 15:26:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:26:27   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:29:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/video/video/page.html,pathInfo=
2017-08-24 15:29:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:29:18   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:29:48   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 15:32:28   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7604 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 15:32:28   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 15:32:28   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 15:32:31   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 15:32:31   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 15:32:32   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 15:32:32   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 15:32:32   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 15:32:32   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 15:32:32   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.807915966905376765.9999/
2017-08-24 15:32:35   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:32:35   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 15:32:35   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 15:32:35   INFO  [main][StartupInfoLogger.java:57] - Started Application in 7.591 seconds (JVM running for 9.916)
2017-08-24 15:32:39   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 15:32:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 15:32:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:32:41   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:32:41   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:32:41   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 15:32:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:32:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:32:41   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:32:41   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:32:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 15:32:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:32:44   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:32:44   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 15:32:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/manager/admin/page.html,pathInfo=
2017-08-24 15:32:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:32:57   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:32:57   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:32:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/admin/list.json,pathInfo=
2017-08-24 15:32:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:32:58   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:32:58   INFO  [http-nio-9999-exec-2][AdminRestController.java:106] - 获取管理员status=-1,关键字=,start=0,limit=10
2017-08-24 15:33:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:33:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:01   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:01   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:33:08   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/manager/permission/edit.html,pathInfo=
2017-08-24 15:33:08   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:08   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:08   INFO  [http-nio-9999-exec-8][PermissionController.java:101] - 需要修改密码的权限编号:8
2017-08-24 15:33:08   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:33:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/manager/permission/save.json,pathInfo=
2017-08-24 15:33:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 15:33:16   INFO  [http-nio-9999-exec-2][PermissionRestController.java:146] - map={isshow=0, ident=clazz-video, editerid=1, name=视频管理, id=8, editer=admin, type=1, icons=, remark1=视频管理, parentid=5, url=video/page}
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:135] - 执行更新的sql=update t_permission set isshow=? ,ident=? ,editerid=? ,name=? ,editer=? ,type=? ,icons=? ,remark1=? ,parentid=? ,url=?  ,edittime=now()  where id=?
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-2][MysqlDialectImpl.java:136] - 执行更新的参数=[0, clazz-video, 1, 视频管理, admin, 1, , 视频管理, 5, video/page, 8]
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:16   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/manager/permission/status.json,pathInfo=
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/manager/permission/page.html,pathInfo=
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:21   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:33:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:33:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:33:25   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:33:25   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:34:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:34:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:34:04   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:34:04   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:34:05   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:34:05   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:34:05   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:34:05   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:34:20   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6044 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 15:34:20   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 15:34:20   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 15:34:24   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 15:34:24   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 15:34:24   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 15:34:24   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 15:34:25   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 15:34:25   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 15:34:25   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.6173386852396510178.9999/
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 15:34:28   ERROR [main][DirectJDKLog.java:181] - Failed to start end point associated with ProtocolHandler [http-nio-9999]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_121]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at cn.javaworker.yeming.Application.main(Application.java:35) [classes/:?]
2017-08-24 15:34:28   ERROR [main][DirectJDKLog.java:181] - Failed to start connector [Connector[HTTP/1.1-9999]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9999]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at cn.javaworker.yeming.Application.main(Application.java:35) [classes/:?]
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 13 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_121]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_121]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_121]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 13 more
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - Stopping service Tomcat
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-9999"]
2017-08-24 15:34:28   INFO  [main][DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-9999"]
2017-08-24 15:39:45   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 15:40:28   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7884 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 15:40:28   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 15:40:28   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 15:40:31   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 15:40:31   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 15:40:32   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 15:40:32   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 15:40:32   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 15:40:32   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 15:40:32   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.7794380044580116456.9999/
2017-08-24 15:40:35   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:40:35   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 15:40:35   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 15:40:35   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.454 seconds (JVM running for 11.249)
2017-08-24 15:40:43   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 15:40:43   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:40:43   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:40:45   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:40:45   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:40:45   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 15:40:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:40:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:40:52   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:40:52   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:48:12   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 15:48:27   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 6792 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 15:48:27   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 15:48:27   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 15:48:31   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 15:48:31   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 15:48:31   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 15:48:31   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 15:48:31   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 15:48:31   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 15:48:31   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.1625158934269521713.9999/
2017-08-24 15:48:34   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:48:34   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 15:48:34   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 15:48:34   INFO  [main][StartupInfoLogger.java:57] - Started Application in 7.798 seconds (JVM running for 11.336)
2017-08-24 15:48:42   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 15:48:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:48:42   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:48:43   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:48:43   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:48:43   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 15:48:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:48:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:48:47   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:48:47   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:52:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:52:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:52:26   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:52:26   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:52:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 15:52:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:52:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:53:11   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 15:53:24   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7696 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 15:53:24   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 15:53:24   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 15:53:28   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 15:53:28   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 15:53:29   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 15:53:29   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 15:53:29   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 15:53:29   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 15:53:29   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.5968307896796404003.9999/
2017-08-24 15:53:32   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:53:32   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 15:53:32   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 15:53:32   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.718 seconds (JVM running for 11.802)
2017-08-24 15:53:34   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 15:53:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:53:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:53:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:53:36   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:53:36   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 15:53:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 15:53:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:53:38   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:53:38   INFO  [http-nio-9999-exec-5][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 15:53:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 15:53:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:53:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:53:42   INFO  [http-nio-9999-exec-7][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 15:53:42   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:53:42   ERROR [http-nio-9999-exec-7][AuthorizationFilter.java:103] - 检查时间发生错误:Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge  [in template "video/edit.ftl" at line 53, column 53]

----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${knowledge.id!}  [in template "video/edit.ftl" at line 53, column 51]
----
2017-08-24 15:53:42   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:104] - 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge  [in template "video/edit.ftl" at line 53, column 53]

----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${knowledge.id!}  [in template "video/edit.ftl" at line 53, column 51]
----
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.0.jar:1.1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) [core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> knowledge  [in template "video/edit.ftl" at line 53, column 53]

----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${knowledge.id!}  [in template "video/edit.ftl" at line 53, column 51]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:80) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:43) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.NonHashException.<init>(NonHashException.java:49) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Dot._eval(Dot.java:48) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Expression.eval(Expression.java:81) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.DefaultToExpression._eval(DefaultToExpression.java:84) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Expression.eval(Expression.java:81) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:96) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.DollarVariable.accept(DollarVariable.java:59) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:327) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.visit(Environment.java:333) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.core.Environment.process(Environment.java:306) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at freemarker.template.Template.process(Template.java:386) ~[freemarker-2.3.25-incubating.jar:2.3.25]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:367) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:284) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:234) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 47 more
2017-08-24 15:53:42   ERROR [http-nio-9999-exec-7][DirectJDKLog.java:181] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:488) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at cn.javaworker.yeming.core.web.filter.AuthorizationFilter.doFilter(AuthorizationFilter.java:105) ~[core-web-4.1.01.jar:4.1.01]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2017-08-24 15:54:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:54:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:54:28   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:54:28   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:54:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 15:54:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:54:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:54:30   INFO  [http-nio-9999-exec-6][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 15:54:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 15:54:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:54:31   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:54:31   INFO  [http-nio-9999-exec-1][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 15:54:31   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:58:25   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
2017-08-24 15:58:38   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 8016 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-08-24 15:58:38   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-08-24 15:58:38   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-08-24 15:58:41   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-08-24 15:58:41   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-08-24 15:58:42   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-08-24 15:58:42   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-08-24 15:58:42   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-08-24 15:58:42   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-08-24 15:58:42   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=C:/Users/tengxiao/AppData/Local/Temp/tomcat-docbase.2749447008561863007.9999/
2017-08-24 15:58:45   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-08-24 15:58:45   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-08-24 15:58:45   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-08-24 15:58:45   INFO  [main][StartupInfoLogger.java:57] - Started Application in 7.211 seconds (JVM running for 10.077)
2017-08-24 15:58:50   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-08-24 15:58:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:58:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:58:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:58:52   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:58:52   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-08-24 15:58:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 15:58:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:58:54   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:58:54   INFO  [http-nio-9999-exec-5][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 15:58:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 15:58:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:58:57   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:58:57   INFO  [http-nio-9999-exec-6][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 15:58:57   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:59:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 15:59:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:59:20   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:59:20   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 15:59:22   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 15:59:22   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:59:22   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:59:22   INFO  [http-nio-9999-exec-9][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 15:59:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 15:59:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 15:59:24   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 15:59:24   INFO  [http-nio-9999-exec-1][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 15:59:24   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:01:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 16:01:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:01:24   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:01:24   INFO  [http-nio-9999-exec-5][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 16:01:24   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:04:04   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:04:04   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:04:04   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:04:04   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:04:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:04:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:04:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:04:06   INFO  [http-nio-9999-exec-3][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:04:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 16:04:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:04:07   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:04:07   INFO  [http-nio-9999-exec-6][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 16:04:07   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:05:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/video/video/save.json,pathInfo=
2017-08-24 16:05:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:05:07   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:07:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:07:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:07:00   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:07:00   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:07:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:07:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:07:01   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:07:01   INFO  [http-nio-9999-exec-7][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:07:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 16:07:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:07:06   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:07:06   INFO  [http-nio-9999-exec-3][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 16:07:06   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/video/save.json,pathInfo=
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: false
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value:  
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0.0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: false
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value:  
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Short value '0'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: 
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Z@76b9e41d
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@76b9e41d' to type 'boolean[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [B@8e36b9b
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'byte[]' value '[B@8e36b9b' to type 'byte[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [C@7e8e1ba
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'char[]' value '[C@7e8e1ba' to type 'char[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [D@7fe65a61
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'double[]' value '[D@7fe65a61' to type 'double[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [F@4646c08c
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'float[]' value '[F@4646c08c' to type 'float[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [I@55eac46c
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'int[]' value '[I@55eac46c' to type 'int[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [J@154f1a5a
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'long[]' value '[J@154f1a5a' to type 'long[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [S@58377fc0
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'short[]' value '[S@58377fc0' to type 'short[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@280596ea
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@280596ea' to type 'BigDecimal[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@463faccb
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@463faccb' to type 'BigInteger[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@21a3723d
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@21a3723d' to type 'Boolean[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@4e2b0543
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@4e2b0543' to type 'Byte[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@792ea66c
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@792ea66c' to type 'Character[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@57fe4c71
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@57fe4c71' to type 'Double[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@288ff4e6
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@288ff4e6' to type 'Float[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@6954ded
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@6954ded' to type 'Integer[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@4ffa8e1
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@4ffa8e1' to type 'Long[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@63ceaa00
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@63ceaa00' to type 'Short[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@4bab1b80
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@4bab1b80' to type 'String[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@475e5f7a
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@475e5f7a' to type 'Class[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@51d6633b
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@51d6633b' to type 'Date[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@2016a09d
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@2016a09d' to type 'Calendar[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@772be84a
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@772be84a' to type 'java.io.File[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@47a88ddd
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@47a88ddd' to type 'java.sql.Date[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@4ebd63b1
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@4ebd63b1' to type 'java.sql.Time[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@619135fc
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@619135fc' to type 'java.sql.Timestamp[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@479fb885
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@479fb885' to type 'java.net.URL[]'
2017-08-24 16:07:36   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.VideoDo@27cbef4f[videoname=<null>,videourl=<null>,videotype=<null>,detail=<null>,videotime=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {videoname=[Ljava.lang.String;@2a118db6, videotype=[Ljava.lang.String;@50b13309, videourl=[Ljava.lang.String;@29eeaeb1, videotime=[Ljava.lang.String;@6170c308, detail=[Ljava.lang.String;@47aa9ead, id=[Ljava.lang.String;@1edac42a})
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string ' 认识时间（1）' to class 'java.lang.String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value ' 认识时间（1）' to type 'String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '1' to type 'String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '视频URL视频URL视频URL视频URL' to class 'java.lang.String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '视频URL视频URL视频URL视频URL' to type 'String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '120' to class 'java.lang.Integer'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '120' to type 'Integer'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Integer value '120'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string ' 视频描述视频描述视频描述                
                                ' to class 'java.lang.String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value ' 视频描述视频描述视频描述                
                                ' to type 'String'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_video(videotime,adder,videotype,videourl,adderid,videoname,detail,addtime,edittime) VALUES(?,?,?,?,?,?,?,now(),now())
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][MysqlDialectImpl.java:88] - 执行保存的参数=[120, admin, 1, 视频URL视频URL视频URL视频URL, 1, 认识时间（1）, 视频描述视频描述视频描述]
2017-08-24 16:07:37   ERROR [http-nio-9999-exec-4][VideoRestController.java:165] - 新增一个视频信息发生错误:java.sql.SQLException: Field 'id' doesn't have a default value
2017-08-24 16:07:37   DEBUG [http-nio-9999-exec-4][VideoRestController.java:166] - cn.javaworker.yeming.core.exception.DBException: java.sql.SQLException: Field 'id' doesn't have a default value
2017-08-24 16:08:12   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:08:12   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:08:12   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:08:12   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:08:13   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:08:13   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:08:13   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:08:13   INFO  [http-nio-9999-exec-5][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:08:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/video/edit.html,pathInfo=
2017-08-24 16:08:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:08:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:08:15   INFO  [http-nio-9999-exec-10][VideoController.java:73] - 需要修改密码的权限编号:0
2017-08-24 16:08:15   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/save.json,pathInfo=
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][BeanUtilsBean.java:810] - BeanUtils.populate(cn.javaworker.yeming.ukeli.pojo.VideoDo@dcaadd9[videoname=<null>,videourl=<null>,videotype=<null>,detail=<null>,videotime=<null>,id=<null>,iorder=<null>,status=<null>,adderid=<null>,adder=<null>,editer=<null>,editerid=<null>,remark1=<null>,remark2=<null>,addtime=<null>,edittime=<null>,slock=<null>], {videoname=[Ljava.lang.String;@747f97a6, videotype=[Ljava.lang.String;@6b2bed11, videourl=[Ljava.lang.String;@19e5061b, videotime=[Ljava.lang.String;@4199d49b, detail=[Ljava.lang.String;@4953b9a9, id=[Ljava.lang.String;@7d2496f7})
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string ' 认识时间（1）' to class 'java.lang.String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value ' 认识时间（1）' to type 'String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '1' to class 'java.lang.String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '1' to type 'String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '视频URL视频URL' to class 'java.lang.String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '视频URL视频URL' to type 'String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '120' to class 'java.lang.Integer'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '120' to type 'Integer'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][NumberConverter.java:269] -     No NumberFormat, using default conversion
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Integer value '120'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '   视频描述视频描述视频描述                ' to class 'java.lang.String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '   视频描述视频描述视频描述                ' to type 'String'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][ConvertUtilsBean.java:481] - Convert string '' to class 'java.lang.Long'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:140] - Converting 'String' value '' to type 'Long'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:319] -     Using default Long value '0'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][AbstractConverter.java:171] -     Converted to Long value '0'
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_video(videotime,adder,videotype,videourl,adderid,videoname,detail,addtime,edittime) VALUES(?,?,?,?,?,?,?,now(),now())
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-1][MysqlDialectImpl.java:88] - 执行保存的参数=[120, admin, 1, 视频URL视频URL, 1, 认识时间（1）, 视频描述视频描述视频描述]
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:08:36   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:08:36   INFO  [http-nio-9999-exec-2][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:10:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:10:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:10:50   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:10:50   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:11:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:11:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:33   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:33   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:11:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:11:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:35   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:35   INFO  [http-nio-9999-exec-3][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:11:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:11:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:44   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:11:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:11:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:46   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:46   INFO  [http-nio-9999-exec-1][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:11:55   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 16:11:55   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:55   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:55   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:11:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 16:11:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:56   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:56   INFO  [http-nio-9999-exec-6][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 16:11:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 16:11:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:11:58   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:11:58   DEBUG [http-nio-9999-exec-4][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:12:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 16:12:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:12:00   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:12:00   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 16:12:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 16:12:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:12:03   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:12:03   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:12:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 16:12:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:12:04   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:12:04   INFO  [http-nio-9999-exec-5][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 16:13:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 16:13:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:13:13   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:13:13   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:13:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 16:13:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:13:14   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:13:14   INFO  [http-nio-9999-exec-1][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 16:13:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 16:13:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:13:18   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:13:18   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:13:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 16:13:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:13:20   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:13:20   INFO  [http-nio-9999-exec-5][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 16:13:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:13:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:13:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:13:22   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:13:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:13:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:13:23   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:13:23   INFO  [http-nio-9999-exec-10][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:14:07   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:14:07   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:14:07   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:14:07   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:14:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:14:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:14:09   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:14:09   INFO  [http-nio-9999-exec-10][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:16:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/video/page.html,pathInfo=
2017-08-24 16:16:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:16:58   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:16:58   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:16:59   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/video/list.json,pathInfo=
2017-08-24 16:16:59   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:16:59   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:16:59   INFO  [http-nio-9999-exec-2][VideoRestController.java:96] - 获取视频status=-1,关键字=,start=0,limit=10
2017-08-24 16:17:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/page.html,pathInfo=
2017-08-24 16:17:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:17:06   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:17:06   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:17:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/knowledgetype/list.json,pathInfo=
2017-08-24 16:17:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:17:07   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:17:07   INFO  [http-nio-9999-exec-1][KnowledgeTypeRestController.java:110] - 获取知识点类型status=-1,关键字=,start=0,limit=10
2017-08-24 16:17:08   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-08-24 16:17:08   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:17:08   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:17:08   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-08-24 16:17:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-08-24 16:17:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-08-24 16:17:09   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-08-24 16:17:09   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:80] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-08-24 16:29:34   INFO  [RMI TCP Connection(2)-192.168.7.178][DruidDataSource.java:1608] - {dataSource-1} closed
