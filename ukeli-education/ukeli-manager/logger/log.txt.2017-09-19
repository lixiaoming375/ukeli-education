2017-09-19 14:48:30   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 5168 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-19 14:48:30   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-19 14:48:30   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-19 14:48:34   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-19 14:48:34   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-19 14:48:34   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-19 14:48:34   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-19 14:48:34   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-19 14:48:34   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-19 14:48:35   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-19 14:48:39   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-19 14:48:39   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-19 14:48:39   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-19 14:48:39   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.146 seconds (JVM running for 11.357)
2017-09-19 14:48:52   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-19 14:48:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-19 14:48:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:48:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :-1
2017-09-19 14:48:52   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:96] - path=http://localhost:9999,loginUrl=login.html
2017-09-19 14:48:52   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/login.html,pathInfo=
2017-09-19 14:48:52   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：null
2017-09-19 14:48:53   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/getvm.html,pathInfo=
2017-09-19 14:49:00   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/login.json,pathInfo=
2017-09-19 14:49:00   INFO  [http-nio-9999-exec-6][CommonController.java:137] - 后台管理员开始登陆:admin
2017-09-19 14:49:00   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：fSrdkxl58C4=
2017-09-19 14:49:00   INFO  [http-nio-9999-exec-6][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-19 14:49:11   INFO  [http-nio-9999-exec-6][CommonController.java:163] - 用户登录密码加密：d9fba5ca345c4bcbf941ea37c4e836aa
2017-09-19 14:49:11   INFO  [http-nio-9999-exec-6][CommonController.java:170] - 用户登录成功
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: false
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value:  
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0.0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigInteger' value '0' to type 'BigInteger'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: false
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean' value 'false' to type 'Boolean'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Byte'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Byte value '0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value:  
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character' value ' ' to type 'Character'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Double'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Double value '0.0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Float'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Float value '0.0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Integer'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Long'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Long value '0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 0
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer' value '0' to type 'Short'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:171] -     Converted to Short value '0'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: 
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String' value '' to type 'String'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Z@6bb2c837
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'boolean[]' value '[Z@6bb2c837' to type 'boolean[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a boolean[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [B@2fc2d910
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'byte[]' value '[B@2fc2d910' to type 'byte[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a byte[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [C@5c1864d9
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'char[]' value '[C@5c1864d9' to type 'char[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a char[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [D@4544a9e4
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'double[]' value '[D@4544a9e4' to type 'double[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a double[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [F@384a320b
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'float[]' value '[F@384a320b' to type 'float[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a float[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [I@179664b
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'int[]' value '[I@179664b' to type 'int[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a int[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [J@1ed8f411
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'long[]' value '[J@1ed8f411' to type 'long[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a long[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [S@7e3365a7
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'short[]' value '[S@7e3365a7' to type 'short[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a short[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigDecimal;@1780da00
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@1780da00' to type 'BigDecimal[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigDecimal[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.math.BigInteger;@420b248
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@420b248' to type 'BigInteger[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a BigInteger[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Boolean;@709a67d7
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Boolean[]' value '[Ljava.lang.Boolean;@709a67d7' to type 'Boolean[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Boolean[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Byte;@2114d57a
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Byte[]' value '[Ljava.lang.Byte;@2114d57a' to type 'Byte[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Byte[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Character;@3c7f3ad8
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Character[]' value '[Ljava.lang.Character;@3c7f3ad8' to type 'Character[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Character[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Double;@27f21b54
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Double[]' value '[Ljava.lang.Double;@27f21b54' to type 'Double[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Double[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Float;@3f2a0055
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Float[]' value '[Ljava.lang.Float;@3f2a0055' to type 'Float[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Float[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Integer;@7d23cb1f
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Integer[]' value '[Ljava.lang.Integer;@7d23cb1f' to type 'Integer[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Integer[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Long;@5a0b4164
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Long[]' value '[Ljava.lang.Long;@5a0b4164' to type 'Long[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Long[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Short;@110a4495
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Short[]' value '[Ljava.lang.Short;@110a4495' to type 'Short[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Short[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.String;@42ac9d13
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'String[]' value '[Ljava.lang.String;@42ac9d13' to type 'String[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a String[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.lang.Class;@20cbcae7
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Class[]' value '[Ljava.lang.Class;@20cbcae7' to type 'Class[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Class[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.util.Date;@63a61c87
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Date[]' value '[Ljava.util.Date;@63a61c87' to type 'Date[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Date[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.util.Calendar;@606f3b8b
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'Calendar[]' value '[Ljava.util.Calendar;@606f3b8b' to type 'Calendar[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a Calendar[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.io.File;@4d9c2cf1
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.io.File[]' value '[Ljava.io.File;@4d9c2cf1' to type 'java.io.File[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.io.File[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Date;@7984f4e1
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@7984f4e1' to type 'java.sql.Date[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Date[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Time;@21663570
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@21663570' to type 'java.sql.Time[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Time[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.sql.Timestamp;@6ee44e96
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@6ee44e96' to type 'java.sql.Timestamp[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.sql.Timestamp[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:353] - Setting default value: [Ljava.net.URL;@785238fe
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:140] - Converting 'java.net.URL[]' value '[Ljava.net.URL;@785238fe' to type 'java.net.URL[]'
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][AbstractConverter.java:162] -     No conversion required, value is already a java.net.URL[]
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:87] - 执行保存的sql=INSERT INTO t_admin_login_logs(ipaddress,adminid,addtime,edittime) VALUES(?,?,now(),now())
2017-09-19 14:49:11   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:88] - 执行保存的参数=[0:0:0:0:0:0:0:1, 1]
2017-09-19 14:49:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/index.html,pathInfo=
2017-09-19 14:49:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:49:13   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 14:49:13   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 14:49:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 14:49:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:49:48   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 14:49:48   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 14:49:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 14:49:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:49:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 14:49:53   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 14:49:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 14:49:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:49:59   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 14:49:59   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 14:50:04   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 14:50:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 14:50:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:50:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 14:50:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 14:50:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 14:50:17   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:17:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:17:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:17:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:17:05   INFO  [http-nio-9999-exec-9][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:17:07   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:18:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:18:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:25   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:18:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:18:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:27   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:27   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/bindDialog.html,pathInfo=
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:29   INFO  [http-nio-9999-exec-6][KnowledgeController.java:124] - 需要绑定题目的考试编号:5
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/bindSubListForKnowledge.json,pathInfo=
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:29   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:29   INFO  [http-nio-9999-exec-9][SubjectRestController.java:399] - 获取题目属性status=-1,关键字=,start=0,limit=10,knowledgeId=5
2017-09-19 15:18:29   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:417] - sql=select s.* from t_subject s , t_subject_vtype sv    where s.id=sv.subjectid   and s.slock =?  and sv.vtype in (7,8,9) and s.id not in (select subjectid from t_knowledge_subject where knowledgeid =?) group by s.id order by s.iorder desc limit ?,?
2017-09-19 15:18:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:18:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:40   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:40   INFO  [http-nio-9999-exec-2][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:18:41   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-7][MysqlDialectImpl.java:136] - 执行更新的参数=[摸彩球, 5,                                                       <p><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述ddd</span></p>                           
                           
                           
                           , 1, 4,                                                                                     一、需掌握相关知识点：对可能性、可能性大小、可能的情况的认识，学会判断可能性的大小以及列举出可能发生的情况等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                           
                           
                           , admin, 摸彩球视频路径aa, 5]
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:18:53   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:18:53   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:19:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:19:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:03   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:03   INFO  [http-nio-9999-exec-8][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:19:07   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:19:16   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/save.json,pathInfo=
2017-09-19 15:19:16   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:16   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:16   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：qH5YTAmKoUo=
2017-09-19 15:19:16   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:135] - 执行更新的sql=update t_knowledge set nodename=? ,gradeid=? ,videodetail=? ,editerid=? ,typeid=? ,remark=? ,editer=? ,videopath=?  ,edittime=now()  where id=?
2017-09-19 15:19:16   DEBUG [http-nio-9999-exec-6][MysqlDialectImpl.java:136] - 执行更新的参数=[摸彩球, 5,                                                                                  <p><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述</span><span style="text-align: right;">视频描述ddd</span></p>                           
                           
                           
                           
                           , 1, 4,                                                                                                                 一、需掌握相关知识点：对可能性、可能性大小、可能的情况的认识，学会判断可能性的大小以及列举出可能发生的情况等。
二、本知识点共包括28道题目，具体为例题6道，随堂练习12道，自测卷10道。
三、建议学时为3小时（例题和随堂练习约2小时，自测卷为1小时）。
                           
                           
                           
                           , admin, 摸彩球视频路径, 5]
2017-09-19 15:19:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:19:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:17   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:17   INFO  [http-nio-9999-exec-3][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:19:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 15:19:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:22   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:22   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 15:19:25   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 15:19:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-19 15:19:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:31   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:19:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:19:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:39   INFO  [http-nio-9999-exec-6][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:19:45   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:19:52   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-19 15:19:52   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:19:52   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:19:54   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:20:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-19 15:20:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:20:08   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:20:10   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:21:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:21:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:21:34   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:21:34   INFO  [http-nio-9999-exec-10][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:21:35   DEBUG [http-nio-9999-exec-10][DruidDataSource.java:1191] - skip not validate connection.
2017-09-19 15:21:37   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:22:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:22:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:22:20   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:22:20   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:22:25   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:22:25   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:22:25   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:22:25   INFO  [http-nio-9999-exec-8][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:22:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:22:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:22:29   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:22:29   INFO  [http-nio-9999-exec-7][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:22:32   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:23:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:23:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:23:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:23:50   DEBUG [http-nio-9999-exec-7][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:23:54   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:23:54   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:23:54   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:23:54   INFO  [http-nio-9999-exec-6][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:23:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-19 15:23:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:23:59   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:24:27   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:25:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:25:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:25:28   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:25:28   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:25:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:25:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:25:34   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:25:34   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:25:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-19 15:25:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:25:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:25:42   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:26:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:26:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:26:14   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:26:14   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:26:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:26:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:26:16   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:26:16   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:26:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:26:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:26:19   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:26:19   INFO  [http-nio-9999-exec-8][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:26:31   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:28:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:28:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:28:11   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:28:11   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:28:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:28:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:28:17   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:28:17   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:28:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:28:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:28:24   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:28:24   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:28:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:28:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:28:30   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:28:30   INFO  [http-nio-9999-exec-6][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:28:31   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:29:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:29:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:29:58   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:29:58   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:29:59   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:30:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:30:00   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:30:00   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:30:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:30:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:30:41   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:30:41   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:30:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:30:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:30:44   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:30:44   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:30:47   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 15:30:47   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:30:47   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:30:47   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 15:30:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/show.html,pathInfo=
2017-09-19 15:30:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:30:54   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:30:56   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:31:01   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/edit.html,pathInfo=
2017-09-19 15:31:01   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:31:01   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:31:01   INFO  [http-nio-9999-exec-5][KnowledgeController.java:58] - 需要修改knowledge的id:5
2017-09-19 15:31:02   DEBUG [http-nio-9999-exec-5][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:31:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 15:31:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:31:17   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:31:17   INFO  [http-nio-9999-exec-10][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 15:31:17   INFO  [http-nio-9999-exec-10][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 15:31:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 15:31:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:31:24   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:33:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-19 15:33:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:33:07   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:33:07   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:33:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-19 15:33:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:33:09   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:33:09   INFO  [http-nio-9999-exec-6][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-19 15:33:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-19 15:33:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:33:19   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:33:19   INFO  [http-nio-9999-exec-4][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=2
2017-09-19 15:33:20   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in( )
2017-09-19 15:33:23   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyexam.json,pathInfo=
2017-09-19 15:33:23   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:33:23   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:33:23   INFO  [http-nio-9999-exec-5][SubjectRestController.java:166] - 获取商品属性status=-1,start=0,limit=200,examId=1
2017-09-19 15:33:24   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(7, 4, 10 )
2017-09-19 15:33:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/page.html,pathInfo=
2017-09-19 15:33:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:33:38   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:33:38   DEBUG [http-nio-9999-exec-10][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 15:34:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-19 15:34:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:34:00   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:34:00   INFO  [http-nio-9999-exec-4][SubjectRestController.java:119] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-19 15:34:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/order.json,pathInfo=
2017-09-19 15:34:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:34:11   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:34:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/subject/list.json,pathInfo=
2017-09-19 15:34:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 15:34:13   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 15:34:13   INFO  [http-nio-9999-exec-10][SubjectRestController.java:119] - 获取题目status=-1,关键字=,start=0,limit=10
2017-09-19 16:04:54   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-19 16:05:08   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 948 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-19 16:05:08   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-19 16:05:08   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-19 16:05:11   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-19 16:05:11   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-19 16:05:11   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-19 16:05:11   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-19 16:05:11   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-19 16:05:11   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-19 16:05:12   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-19 16:05:16   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-19 16:05:16   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-19 16:05:16   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-19 16:05:16   INFO  [main][StartupInfoLogger.java:57] - Started Application in 8.684 seconds (JVM running for 10.866)
2017-09-19 16:06:19   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-19 16:06:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/page.html,pathInfo=
2017-09-19 16:06:19   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:06:20   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:06:20   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:06:20   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-19 16:06:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/exam/list.json,pathInfo=
2017-09-19 16:06:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:06:35   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:06:35   INFO  [http-nio-9999-exec-1][ExamRestController.java:108] - 获取status=-1,关键字=,start=0,limit=10
2017-09-19 16:06:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:06:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:06:42   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:06:42   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:06:56   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:06:56   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:06:56   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:06:56   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:07:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:07:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:07:12   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:07:12   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:07:12   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:20:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:20:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:20:17   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:20:17   DEBUG [http-nio-9999-exec-8][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:20:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:20:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:20:21   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:20:21   INFO  [http-nio-9999-exec-1][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:20:31   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:20:31   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:20:31   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:20:31   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:20:32   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:20:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-19 16:20:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:20:46   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:20:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:20:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:20:49   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:20:49   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:21:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-19 16:21:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:21:03   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:21:54   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:21:54   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:21:54   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:21:54   DEBUG [http-nio-9999-exec-6][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:22:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:22:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:22:01   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:22:01   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:22:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:22:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:22:05   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:22:05   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:22:10   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:25:23   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:25:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:25:24   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:25:24   DEBUG [http-nio-9999-exec-9][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:25:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:25:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:25:25   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:25:25   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:25:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:25:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:25:27   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:25:27   INFO  [http-nio-9999-exec-2][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:25:29   INFO  [http-nio-9999-exec-2][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:28:03   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-19 16:28:17   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 2304 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-19 16:28:17   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-19 16:28:17   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-19 16:28:21   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-19 16:28:21   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-19 16:28:21   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-19 16:28:21   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-19 16:28:21   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-19 16:28:21   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-19 16:28:21   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-19 16:28:25   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-19 16:28:25   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-19 16:28:25   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-19 16:28:25   INFO  [main][StartupInfoLogger.java:57] - Started Application in 9.152 seconds (JVM running for 11.672)
2017-09-19 16:28:38   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-19 16:28:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:28:38   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:28:39   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:28:39   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:28:39   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-19 16:29:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:29:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:29:13   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:29:13   DEBUG [http-nio-9999-exec-2][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:29:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:29:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:29:21   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:29:21   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:29:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:29:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:29:24   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:29:24   INFO  [http-nio-9999-exec-4][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:29:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:29:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:29:48   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:29:48   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:29:51   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:31:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:31:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:31:55   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:31:55   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-19 16:31:56   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-19 16:31:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:31:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:31:57   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:31:57   INFO  [http-nio-9999-exec-5][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:31:58   INFO  [http-nio-9999-exec-5][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:32:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-19 16:32:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:32:04   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:32:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:32:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:32:05   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:32:05   INFO  [http-nio-9999-exec-9][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:32:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:32:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:32:14   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:32:14   DEBUG [http-nio-9999-exec-3][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:32:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:32:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:32:15   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:32:15   INFO  [http-nio-9999-exec-2][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:32:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:32:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:32:18   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:32:18   INFO  [http-nio-9999-exec-7][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:32:19   INFO  [http-nio-9999-exec-7][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:32:53   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-19 16:32:53   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:32:53   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:33:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:33:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:33:00   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:33:00   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:33:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:33:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:33:34   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:33:34   INFO  [http-nio-9999-exec-1][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-19 16:33:35   INFO  [http-nio-9999-exec-1][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-19 16:33:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:33:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:33:44   DEBUG [http-nio-9999-exec-9][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:33:44   INFO  [http-nio-9999-exec-9][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:33:44   INFO  [http-nio-9999-exec-9][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:34:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:34:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:34:31   DEBUG [http-nio-9999-exec-3][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:34:31   INFO  [http-nio-9999-exec-3][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=4
2017-09-19 16:34:32   INFO  [http-nio-9999-exec-3][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(3, 1, 7, 5, 8, 9, 10 )
2017-09-19 16:36:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:36:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:36:10   DEBUG [http-nio-9999-exec-8][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:36:10   INFO  [http-nio-9999-exec-8][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:36:11   INFO  [http-nio-9999-exec-8][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:36:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-19 16:36:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:36:25   DEBUG [http-nio-9999-exec-2][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:36:27   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:36:27   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:36:27   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:36:27   INFO  [http-nio-9999-exec-7][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:36:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:36:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:36:33   DEBUG [http-nio-9999-exec-4][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:36:33   INFO  [http-nio-9999-exec-4][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:36:35   INFO  [http-nio-9999-exec-4][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:39:13   INFO  [RMI TCP Connection(2)-192.168.56.1][DruidDataSource.java:1608] - {dataSource-1} closed
2017-09-19 16:39:28   INFO  [main][StartupInfoLogger.java:48] - Starting Application on tengxiao-PC with PID 7632 (F:\Project\shop-git\ukeli-education\ukeli-manager\target\classes started by tengxiao in F:\Project\shop-git\ukeli-education\ukeli-manager)
2017-09-19 16:39:28   DEBUG [main][StartupInfoLogger.java:51] - Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-19 16:39:28   INFO  [main][SpringApplication.java:641] - The following profiles are active: dev
2017-09-19 16:39:32   INFO  [main][DirectJDKLog.java:179] - Starting service Tomcat
2017-09-19 16:39:32   INFO  [main][DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-19 16:39:32   INFO  [localhost-startStop-1][DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-09-19 16:39:32   INFO  [localhost-startStop-1][WebFilerConfig.java:60] - 初始化filter参数:{initParam=adminid, loginUrl=login.html, ignore=/login.html,/login.json,/getvm.html, pathInfo=}
2017-09-19 16:39:33   INFO  [localhost-startStop-1][WebServletConfig.java:69] - 初始化图片验证码参数:{width=90, type=1, height=30}
2017-09-19 16:39:33   INFO  [localhost-startStop-1][WebServletConfig.java:86] - 初始化上传文件参数:{baseUrl=, uploadFilePath=, allowedExt=jpg,gif,png,jpeg,xlsx, maxSize=200}
2017-09-19 16:39:33   INFO  [localhost-startStop-1][SysListener.java:62] - init system.path=F:/Project/shop-git/ukeli-education/ukeli-manager/src/main/webapp/
2017-09-19 16:39:38   INFO  [main][DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9999"]
2017-09-19 16:39:38   INFO  [main][DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9999]
2017-09-19 16:39:38   INFO  [main][DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-09-19 16:39:38   INFO  [main][StartupInfoLogger.java:57] - Started Application in 11.353 seconds (JVM running for 15.69)
2017-09-19 16:39:50   INFO  [http-nio-9999-exec-1][DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-19 16:39:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:74] - req_uri=/knowledge/page.html,pathInfo=
2017-09-19 16:39:50   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:39:51   DEBUG [http-nio-9999-exec-1][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:39:51   DEBUG [http-nio-9999-exec-1][CookiesUtil.java:80] - 获取解密的数据：MJT8OqJkQ0seeRDpI4rnlw==
2017-09-19 16:39:51   INFO  [http-nio-9999-exec-1][DruidDataSource.java:847] - {dataSource-1} inited
2017-09-19 16:40:13   ERROR [Druid-ConnectionPool-Create-399038622][DruidDataSource.java:2181] - create connection error, url: jdbc:mysql://211.149.226.54:4406/ukeli?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=PRC&useSSL=false, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_121]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_121]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2203) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2236) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2035) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:790) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_121]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_121]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148) ~[druid-1.1.0.jar:1.1.0]
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:217) ~[druid-1.1.0.jar:1.1.0]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142) ~[druid-1.1.0.jar:1.1.0]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1466) ~[druid-1.1.0.jar:1.1.0]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1529) ~[druid-1.1.0.jar:1.1.0]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2178) [druid-1.1.0.jar:1.1.0]
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method) ~[?:1.8.0_121]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) ~[?:1.8.0_121]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_121]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_121]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_121]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_121]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_121]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_121]
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	... 18 more
2017-09-19 16:40:19   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:40:19   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:40:19   DEBUG [http-nio-9999-exec-5][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:40:19   INFO  [http-nio-9999-exec-5][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
2017-09-19 16:40:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:74] - req_uri=/subject/listbyknow.json,pathInfo=
2017-09-19 16:40:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:40:39   DEBUG [http-nio-9999-exec-6][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:40:39   INFO  [http-nio-9999-exec-6][SubjectRestController.java:270] - 获取商品属性status=-1,start=0,limit=200,knowledgeId=5
2017-09-19 16:40:40   INFO  [http-nio-9999-exec-6][SubjectServiceImpl.java:205] - sql=select * from t_subject where slock=0 and id in(8, 5, 7, 3, 10, 9 )
2017-09-19 16:40:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:74] - req_uri=/knowledge/orderserial.json,pathInfo=
2017-09-19 16:40:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:40:50   DEBUG [http-nio-9999-exec-7][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:43:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:74] - req_uri=/knowledge/list.json,pathInfo=
2017-09-19 16:43:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:84] - initParam=adminid
2017-09-19 16:43:15   DEBUG [http-nio-9999-exec-10][AuthorizationFilter.java:94] - check user login :1
2017-09-19 16:43:15   INFO  [http-nio-9999-exec-10][KnowledgeRestController.java:91] - 获取知识点status=-1,关键字=,start=0,limit=10
